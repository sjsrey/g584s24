<h2 id="jumping-around">jumping around</h2>
<pre><code>cd
jupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ cd
jupyter-serge584s23@geo-rey-srv2:~$ git clone https://github.com/rupa/z.git
Cloning into &#39;z&#39;...
remote: Enumerating objects: 800, done.
remote: Counting objects: 100% (18/18), done.
remote: Compressing objects: 100% (12/12), done.
remote: Total 800 (delta 8), reused 15 (delta 6), pack-reused 782
Receiving objects: 100% (800/800), 161.14 KiB | 1.73 MiB/s, done.
Resolving deltas: 100% (363/363), done.</code></pre>
<pre><code>cp .bashrc .bashrc.bak
nano .bashrc

# add the line
. ~/z/z.sh

tail -1 .bashrc</code></pre>
<pre><code>jupyter-serge584s23@geo-rey-srv2:~$ tail -1 .bashrc
. ~/z/z.sh</code></pre>
<pre><code>source ~/.bashrc</code></pre>
<p>Now cd around a bunch</p>
<p>Type <code>z</code> to get a listing of recently visited
directories</p>
<p>To jump to one, type <code>z pattern</code> where
<code>pattern</code> should be a substring of the directory you want to
jump to.</p>
<p>No more having to manually type long paths to get to where you want
to go.</p>
<p>Note, this works even after logging out or closing the terminal.</p>
<p>The data is stored in the file <code>~/.z</code> if you are
interested.</p>
<h2 id="create-a-remote-on-github">create a remote on github</h2>
<p>![[Pasted image 20230220171356.png]]</p>
<p>![[Pasted image 20230220170657.png]]</p>
<pre><code></code></pre>
<p>![[Pasted image 20230220171442.png]]</p>
<p>we will come back to this in a moment. for now lets make sure we are
in are local repository directory:</p>
<pre><code>jupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ pwd</code></pre>
<pre><code>/home/jupyter-serge584s23/work/git/planets</code></pre>
<pre><code>jupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ ls -al</code></pre>
<pre><code>total 28
drwxr-xr-x 4 jupyter-serge584s23 jupyter-serge584s23 4096 Feb 16 12:44 .
drwxr-xr-x 3 jupyter-serge584s23 jupyter-serge584s23 4096 Feb 16 11:20 ..
-rw-r--r-- 1 jupyter-serge584s23 jupyter-serge584s23    0 Feb 16 12:10 a.dat
-rw-r--r-- 1 jupyter-serge584s23 jupyter-serge584s23    0 Feb 16 12:10 b.dat
-rw-r--r-- 1 jupyter-serge584s23 jupyter-serge584s23    0 Feb 16 12:10 c.dat
drwxr-xr-x 8 jupyter-serge584s23 jupyter-serge584s23 4096 Feb 16 12:44 .git
-rw-r--r-- 1 jupyter-serge584s23 jupyter-serge584s23   15 Feb 16 12:14 .gitignore
-rw-r--r-- 1 jupyter-serge584s23 jupyter-serge584s23   91 Feb 16 12:02 mars.txt
-rw-r--r-- 1 jupyter-serge584s23 jupyter-serge584s23   49 Feb 16 12:44 moon.txt
drwxr-xr-x 2 jupyter-serge584s23 jupyter-serge584s23 4096 Feb 16 12:10 results</code></pre>
<pre><code>jupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git status</code></pre>
<pre><code>On branch main
nothing to commit, working tree clean</code></pre>
<pre><code>jupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git remote -v
jupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ </code></pre>
<h2 id="ssh-keys">ssh keys</h2>
<pre><code>jupyter-serge584s23@geo-rey-srv2:~$ ssh-keygen -t rsa
Generating public/private rsa key pair.
Enter file in which to save the key (/home/jupyter-serge584s23/.ssh/id_rsa): 
Created directory &#39;/home/jupyter-serge584s23/.ssh&#39;.
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in /home/jupyter-serge584s23/.ssh/id_rsa
Your public key has been saved in /home/jupyter-serge584s23/.ssh/id_rsa.pub
The key fingerprint is:
SHA256:xRueWRVTnHYxfri6WuEpzXZJHW7E252NikYNpzIB+5o jupyter-serge584s23@geo-rey-srv2
The key&#39;s randomart image is:
+---[RSA 3072]----+
|      .       +*+|
|       o .   .o=+|
|      . . = o o=o|
|       . + @  o+O|
|        S B o +==|
|       o + = *.. |
|      E   + X o  |
|         . + o   |
|          ...    |
+----[SHA256]-----+
jupyter-serge584s23@geo-rey-srv2:~$ </code></pre>
<pre><code>ls .ssh</code></pre>
<pre><code>id_rsa  id_rsa.pub</code></pre>
<pre><code>upyter-serge584s23@geo-rey-srv2:~$ ls -al ~/.ssh</code></pre>
<pre><code>total 16
drwx------  2 jupyter-serge584s23 jupyter-serge584s23 4096 Feb 20 16:47 .
drwxr-x--- 11 jupyter-serge584s23 jupyter-serge584s23 4096 Feb 20 16:47 ..
-rw-------  1 jupyter-serge584s23 jupyter-serge584s23 2675 Feb 20 16:47 id_rsa
-rw-r--r--  1 jupyter-serge584s23 jupyter-serge584s23  586 Feb 20 16:47 id_rsa.pub</code></pre>
<p>Check if we can authenticate</p>
<pre><code>jupyter-serge584s23@geo-rey-srv2:~$ ssh -T git@github.com
The authenticity of host &#39;github.com (192.30.255.113)&#39; can&#39;t be established.
ED25519 key fingerprint is SHA256:+DiY3wvvV6TuJJhbpZisF/zLDA0zPMSvHdkr4UvCOqU.
This key is not known by any other names
Are you sure you want to continue connecting (yes/no/[fingerprint])? y
Please type &#39;yes&#39;, &#39;no&#39; or the fingerprint: yes
Warning: Permanently added &#39;github.com&#39; (ED25519) to the list of known hosts.
git@github.com: Permission denied (publickey).</code></pre>
<p>Right, we need to first add our public key on github</p>
<pre><code>cat ~/.ssh/id_rsa.pub</code></pre>
<pre><code>ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCv4y7kR22zjaNYPIP8L/q/lcfWPtltLOZ86vszqpwqEaMFDWaQ366sGEc0hYRjZMbFKxNSy9d7PJnOq0ozCgoNn69dNmXx+M71TM2E7vlUjCZCo9owEfIuDf6o519uRE4Qf2aKQC1g3M+imZn9gnZtI39cQsKPM1h0Wg417ZgdgyC3k4bep7puxiko3R3gEaXVUEPHtodEfI7hwUsV62J3CWBIx5yQzwAGJz7VtYQIB94/5jNUnIGtRQyHFcplxKJ/weM6LkQt5Uxql9oliVHYqp8KBu63PPxXt8qusKGJrnmkccHd6ox8i3LIp2XRImdm8DittHuMJRgJiLa/HQtr9jyHoIx8voztvvbyRCOCzRwWKe9hZXWw/Xp+xbKsoH826e4Iqgp56LzmVB7NKEYf1jArrLEqO+DQWEJkXl8IidqUGNvJ8I4tFRZrRm6URNClseZ31gSsVMAO/HHwoVlVw7s32tmEQ8c+ISGL+llRU/rI5yKPSBLb28YDckes7jc= jupyter-serge584s23@geo-rey-srv2</code></pre>
<p>![[Pasted image 20230220165448.png]]</p>
<p>![[Pasted image 20230220165614.png]]</p>
<p>![[Pasted image 20230220165800.png]]</p>
<p>![[Pasted image 20230220165837.png]]</p>
<p>![[Pasted image 20230220170035.png]]</p>
<p>![[Pasted image 20230220170132.png]]</p>
<p>Now try authenticating again, which will prompt you for your
passphrase</p>
<pre><code>jupyter-serge584s23@geo-rey-srv2:~$ ssh -T git@github.com
Enter passphrase for key &#39;/home/jupyter-serge584s23/.ssh/id_rsa&#39;: </code></pre>
<pre><code>Hi sjsrey! You&#39;ve successfully authenticated, but GitHub does not provide shell access.
jupyter-serge584s23@geo-rey-srv2:~$ </code></pre>
<p>Now we add a new remote (remember your passphrase as they will ask
for it)</p>
<pre><code>git remote add origin git@github.com:sjsrey/planets.git
git branch -M main
git push -u origin main
Enter passphrase for key &#39;/home/jupyter-serge584s23/.ssh/id_rsa&#39;: </code></pre>
<pre><code>Enumerating objects: 15, done.
Counting objects: 100% (15/15), done.
Delta compression using up to 32 threads
Compressing objects: 100% (10/10), done.
Writing objects: 100% (15/15), 1.29 KiB | 1.29 MiB/s, done.
Total 15 (delta 3), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (3/3), done.
To github.com:sjsrey/planets.git
 * [new branch]      main -&gt; main
Branch &#39;main&#39; set up to track remote branch &#39;main&#39; from &#39;origin&#39;.
jupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ </code></pre>
<pre><code>jupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git remote -v</code></pre>
<pre><code>origin  git@github.com:sjsrey/planets.git (fetch)
origin  git@github.com:sjsrey/planets.git (push)
</code></pre>
<p>![[Pasted image 20230220171920.png]]</p>
<p>![[Pasted image 20230220172005.png]]</p>
<h2 id="adding-a-ssh-agent">Adding a ssh-agent</h2>
<pre><code>jupyter-serge584s23@geo-rey-srv2:~$ eval &quot;$(ssh-agent -s)&quot; 
Agent pid 327199
jupyter-serge584s23@geo-rey-srv2:~$ ssh-add ~/.ssh/id_rsa 
Enter passphrase for /home/jupyter-serge584s23/.ssh/id_rsa: 
Identity added: /home/jupyter-serge584s23/.ssh/id_rsa (jupyter-serge584s23@geo-rey-srv2)</code></pre>
<pre><code>jupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ nano README.md
jupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ ls
a.dat  b.dat  c.dat  mars.txt  moon.txt  README.md  results
jupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git status
On branch main
Your branch is up to date with &#39;origin/main&#39;.

Untracked files:
  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)
        README.md

nothing added to commit but untracked files present (use &quot;git add&quot; to track)
jupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git add README.md 
jupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git commit -m &#39;Add a README&#39;
[main 864e428] Add a README
 1 file changed, 3 insertions(+)
 create mode 100644 README.md
jupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git push origin main
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 32 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 375 bytes | 375.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To github.com:sjsrey/planets.git
   68a5f4f..864e428  main -&gt; main
jupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ 

</code></pre>
<p>![[Pasted image 20230220173424.png]]</p>
<h2 id="setting-up-ssh-agent">Setting up ssh-agent</h2>
<p>Make a backup of <code>~/.bashrc</code></p>
<pre><code>cd
cp .bashrc .bashrc.bak
nano .bashrc</code></pre>
<p>At the bottom of the file add the following (<a
href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/working-with-ssh-key-passphrases?platform=windows">Source</a>):</p>
<pre><code>
env=~/.ssh/agent.env

agent_load_env () { test -f &quot;$env&quot; &amp;&amp; . &quot;$env&quot; &gt;| /dev/null ; }

agent_start () {
    (umask 077; ssh-agent &gt;| &quot;$env&quot;)
    . &quot;$env&quot; &gt;| /dev/null ; }

agent_load_env

# agent_run_state: 0=agent running w/ key; 1=agent w/o key; 2=agent not running
agent_run_state=$(ssh-add -l &gt;| /dev/null 2&gt;&amp;1; echo $?)

if [ ! &quot;$SSH_AUTH_SOCK&quot; ] || [ $agent_run_state = 2 ]; then
    agent_start
    ssh-add
elif [ &quot;$SSH_AUTH_SOCK&quot; ] &amp;&amp; [ $agent_run_state = 1 ]; then
    ssh-add
fi

unset env</code></pre>
<p>Write and exit the file. Close the terminal tab.</p>
<p>Launch a new terminal and you should be prompted for your
password.</p>
<p>![[Pasted image 20230220174112.png]]</p>
<p>![[Pasted image 20230220174144.png]]</p>
<p>![[Pasted image 20230220174224.png]]</p>
<p>From here forward you no longer will be prompted for password when
pushing to github. (as long as that terminal stays around)</p>
<pre><code>jupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ nano README.md 
cat README.md</code></pre>
<pre><code>jupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ cat README.md 
# Planets Project


Research on planets

Test after ssh-agent</code></pre>
<pre><code>
jupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git status
On branch main
Your branch is up to date with &#39;origin/main&#39;.

Changes not staged for commit:
  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)
  (use &quot;git restore &lt;file&gt;...&quot; to discard changes in working directory)
        modified:   README.md

no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)
jupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git add README.md 
jupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git commit -m &#39;Note on ssh-agent&#39;
[main be51b2e] Note on ssh-agent
 1 file changed, 3 insertions(+)
jupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git push origin main
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 32 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 320 bytes | 320.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To github.com:sjsrey/planets.git
   864e428..be51b2e  main -&gt; main
jupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ </code></pre>
<h2 id="pulling-from-remotes">Pulling from remotes</h2>
<pre><code>git status
On branch main
Your branch is up to date with &#39;origin/main&#39;.

nothing to commit, working tree clean</code></pre>
<p>Create changes on github to the README.md file</p>
<p>make sure to commit the changes there</p>
<pre><code>git status
jupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git status
On branch main
Your branch is up to date with &#39;origin/main&#39;.

nothing to commit, working tree clean
</code></pre>
<p>Fetch will pull any remote changes</p>
<pre><code>jupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git fetch
remote: Enumerating objects: 5, done.
remote: Counting objects: 100% (5/5), done.
remote: Compressing objects: 100% (3/3), done.
Unpacking objects: 100% (3/3), 707 bytes | 707.00 KiB/s, done.
remote: Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
From github.com:sjsrey/planets
   be51b2e..a0279db  main       -&gt; origin/main</code></pre>
<pre><code>
git status
On branch main
Your branch is behind &#39;origin/main&#39; by 1 commit, and can be fast-forwarded.
  (use &quot;git pull&quot; to update your local branch)

nothing to commit, working tree clean</code></pre>
<p>This tells us there are changes on the remote that we don’t have
locally. To get them, we follow the helpful suggestions:</p>
<pre><code>jupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git pull
Updating be51b2e..a0279db
Fast-forward
 README.md | 3 +++
 1 file changed, 3 insertions(+)</code></pre>
<pre><code>git status
On branch main
Your branch is up to date with &#39;origin/main&#39;.

nothing to commit, working tree clean</code></pre>
<p>So good practice is everytime you sit down to do some work on a local
repository:</p>
<ol type="1">
<li>git fetch # to see if there have been changes on the remote</li>
<li>git pull # if there have been</li>
<li>do you work locally and then push to origin when done</li>
</ol>
<h2 id="conflicts">Conflicts</h2>
<p>Now that both repositories, local and remote, are identical, we are
going to create a <em>conflict</em>.</p>
<p>These can arise when working on collaborative projects where multiple
people are changing the same files, or on your individual work, where
you may be working from different locations and forgot that the past you
had changed a file on a remote while current you is happily working on
the same part of the file on a local repository.</p>
<p>To do this, let’s go all Ohio State and on github edit the readme so
the title is “The Planets Project”.</p>
<p>Now on the local repository, edit the same line, but let’s call it
“My Planet Project” Locally:</p>
<pre><code>jupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git status
On branch main
Your branch is up to date with &#39;origin/main&#39;.

Changes not staged for commit:
  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)
  (use &quot;git restore &lt;file&gt;...&quot; to discard changes in working directory)
        modified:   README.md

no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)
jupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ </code></pre>
<p>git pull (to show conflict)</p>
<h3 id="how-to-resolve-a-conflict">How to resolve a conflict</h3>
<p>explain markers</p>
<p>edit file to reconcile conflict</p>
<p>git add git commit</p>
<p>git push</p>
<p>note conflicts only involve changes to the same line</p>
<h1 id="collaboration">collaboration</h1>
<p>see moleskein for the git flow diagram all team members should have
forked the shared repository (except for the person who created it)</p>
<p>fork if you have not</p>
<p>https://github.com/raffaelen/Identifying-Regional-Employment-Centers
https://github.com/elizabeth-bushnell/15_minute_city_584project
https://github.com/rbilchak/Balboa_Park_Mapping
https://github.com/hannahsamy/sd_agriculture_project
https://github.com/fiendskrah/584-education-inequality</p>
<p>clone the group project into your jupyter hub account</p>
<p>make a directory for the 584project cd into 584project clone your
fork</p>
<p>add the upstream remote</p>
<p>walk them through this for the course project</p>
<ol type="1">
<li>fork</li>
<li>clone</li>
<li>add upstream</li>
<li>pull from upstream</li>
<li>branch on local</li>
<li>make changes to README.md</li>
<li>add, commit</li>
<li>push branch to origin</li>
<li>PR into upstream from origin</li>
</ol>
