[
  {
    "objectID": "week-11/index.html",
    "href": "week-11/index.html",
    "title": "Exam",
    "section": "",
    "text": "2024-03-26 Review\n2024-03-28 Exam"
  },
  {
    "objectID": "week-10/regionalization.html",
    "href": "week-10/regionalization.html",
    "title": "Regionalization",
    "section": "",
    "text": "import geopandas as gpd\nimport matplotlib.pyplot as plt\ndb = gpd.read_file(\"~/data/shared/sandiego_tracts.gpkg\")\ndb.head()\n\n\n\n\n\n\n\n\nGEOID\nmedian_age\ntotal_pop\ntotal_pop_white\ntt_work\nhh_total\nhh_female\ntotal_bachelor\nmedian_hh_income\nincome_gini\n...\nstate\ncounty\ntract\narea_sqm\npct_rented\npct_hh_female\npct_bachelor\npct_white\nsub_30\ngeometry\n\n\n\n\n0\n06073018300\n37.1\n2590.0\n2375.0\n1299.0\n2590.0\n137.0\n0.0\n62500.0\n0.5355\n...\n06\n073\n018300\n2.876449\n0.373913\n0.052896\n0.000000\n0.916988\nFalse\nPOLYGON ((-13069450.120 3922380.770, -13069175...\n\n\n1\n06073018601\n41.2\n5147.0\n4069.0\n1970.0\n5147.0\n562.0\n24.0\n88165.0\n0.4265\n...\n06\n073\n018601\n4.548797\n0.205144\n0.109190\n0.004663\n0.790558\nFalse\nPOLYGON ((-13067719.770 3922939.420, -13067631...\n\n\n2\n06073017601\n54.4\n5595.0\n4925.0\n1702.0\n5595.0\n442.0\n34.0\n110804.0\n0.4985\n...\n06\n073\n017601\n8.726275\n0.279029\n0.078999\n0.006077\n0.880250\nFalse\nPOLYGON ((-13058166.110 3907247.690, -13058140...\n\n\n3\n06073019301\n42.3\n7026.0\n5625.0\n3390.0\n7026.0\n638.0\n46.0\n100539.0\n0.4003\n...\n06\n073\n019301\n3.519743\n0.196512\n0.090806\n0.006547\n0.800598\nFalse\nPOLYGON ((-13056896.290 3925255.610, -13056868...\n\n\n4\n06073018700\n21.8\n40402.0\n30455.0\n24143.0\n40402.0\n2456.0\n23.0\n41709.0\n0.3196\n...\n06\n073\n018700\n559.150793\n0.949887\n0.060789\n0.000569\n0.753799\nFalse\nPOLYGON ((-13090788.510 3946435.430, -13090736...\n\n\n\n\n5 rows × 25 columns\ndb.plot()\n\n&lt;Axes: &gt;\ncluster_variables = [\n    \"median_house_value\",  # Median house value\n    \"pct_white\",  # % tract population that is white\n    \"pct_rented\",  # % households that are rented\n    \"pct_hh_female\",  # % female-led households\n    \"pct_bachelor\",  # % tract population with a Bachelors degree\n    \"median_no_rooms\",  # Median n. of rooms in the tract's households\n    \"income_gini\",  # Gini index measuring tract wealth inequality\n    \"median_age\",  # Median age of tract population\n    \"tt_work\",  # Travel time to work\n]\nf, axs = plt.subplots(nrows=3, ncols=3, figsize=(12, 12))\n# Make the axes accessible with single indexing\naxs = axs.flatten()\n# Start a loop over all the variables of interest\nfor i, col in enumerate(cluster_variables):\n    # select the axis where the map will go\n    ax = axs[i]\n    # Plot the map\n    db.plot(\n        column=col,\n        ax=ax,\n        scheme=\"Quantiles\",\n        linewidth=0,\n        cmap=\"RdPu\",\n    )\n    # Remove axis clutter\n    ax.set_axis_off()\n    # Set the axis title to the name of variable being plotted\n    ax.set_title(col)\n# Display the figure\nplt.show()\nimport seaborn\n_ = seaborn.pairplot(\n    db[cluster_variables], kind=\"reg\", diag_kind=\"kde\"\n)\ndb[[\"income_gini\", \"median_house_value\"]].head()\n\n\n\n\n\n\n\n\nincome_gini\nmedian_house_value\n\n\n\n\n0\n0.5355\n732900.000000\n\n\n1\n0.4265\n473800.000000\n\n\n2\n0.4985\n930600.000000\n\n\n3\n0.4003\n478500.000000\n\n\n4\n0.3196\n515570.896382\nfrom sklearn import metrics\nmetrics.pairwise_distances(\n    db[[\"income_gini\", \"median_house_value\"]].head()\n).round(4)\n\narray([[     0.    , 259100.    , 197700.    , 254400.    , 217329.1036],\n       [259100.    ,      0.    , 456800.    ,   4700.    ,  41770.8964],\n       [197700.    , 456800.    ,      0.    , 452100.    , 415029.1036],\n       [254400.    ,   4700.    , 452100.    ,      0.    ,  37070.8964],\n       [217329.1036,  41770.8964, 415029.1036,  37070.8964,      0.    ]])\nfrom sklearn.preprocessing import robust_scale\ndb_scaled = robust_scale(db[cluster_variables])\ncluster_variables\n\n['median_house_value',\n 'pct_white',\n 'pct_rented',\n 'pct_hh_female',\n 'pct_bachelor',\n 'median_no_rooms',\n 'income_gini',\n 'median_age',\n 'tt_work']\nmetrics.pairwise_distances(\n    db_scaled[:5,:]\n).round(4)\n\narray([[ 0.    ,  3.3787,  2.792 ,  3.6903, 19.0006],\n       [ 3.3787,  0.    ,  2.9241,  1.3899, 18.3732],\n       [ 2.792 ,  2.9241,  0.    ,  3.1615, 18.9427],\n       [ 3.6903,  1.3899,  3.1615,  0.    , 17.19  ],\n       [19.0006, 18.3732, 18.9427, 17.19  ,  0.    ]])\ndb_scaled\n\narray([[ 1.16897565,  0.88747229, -0.07925532, ...,  1.93719258,\n         0.1011236 , -0.6982584 ],\n       [ 0.08123426,  0.20084202, -0.54215204, ...,  0.28755202,\n         0.56179775, -0.15471851],\n       [ 1.99895046,  0.68795166, -0.33950017, ...,  1.37722285,\n         2.04494382, -0.37181045],\n       ...,\n       [-0.02581864,  1.04512769, -0.79870967, ..., -1.11842603,\n         0.93258427, -0.04860267],\n       [ 0.20969773,  0.56397715, -0.83360459, ..., -0.03783579,\n         1.1011236 , -0.63831511],\n       [-1.24118388,  0.4812156 , -0.84270269, ...,  0.51608021,\n         2.74157303, -1.1891454 ]])\ndb_scaled.shape\n\n(628, 9)"
  },
  {
    "objectID": "week-10/regionalization.html#k-means",
    "href": "week-10/regionalization.html#k-means",
    "title": "Regionalization",
    "section": "k-means",
    "text": "k-means\n\nfrom sklearn.cluster import KMeans\n\n\nkmeans = KMeans(n_clusters=5)\n\nimport numpy as np\nnp.random.seed(1234)\nk5cls = kmeans.fit(db_scaled)\n\n\nk5cls.labels_[:5]\n\narray([2, 1, 3, 1, 4], dtype=int32)\n\n\n\n# Assign labels into a column\ndb[\"k5cls\"] = k5cls.labels_\n# Set up figure and ax\nf, ax = plt.subplots(1, figsize=(9, 9))\n# Plot unique values choropleth including\n# a legend and with no boundary lines\ndb.plot(\n    column=\"k5cls\", categorical=True, legend=True, linewidth=0, ax=ax\n)\n# Remove axis\nax.set_axis_off()\n# Display the map\nplt.show()\n\n\n\n\n\n# Group data table by cluster label and count observations\nk5sizes = db.groupby(\"k5cls\").size()\nk5sizes\n\n\nk5cls\n0    248\n1    244\n2     88\n3     39\n4      9\ndtype: int64\n\n\n\n# Dissolve areas by Cluster, aggregate by summing,\n# and keep column for area\nareas = db.dissolve(by=\"k5cls\", aggfunc=\"sum\")[\"area_sqm\"]\nareas\n\nk5cls\n0     739.184478\n1    8622.481814\n2    1335.721492\n3     315.428301\n4     708.956558\nName: area_sqm, dtype: float64\n\n\n\nimport pandas\n# Bind cluster figures in a single table\narea_tracts = pandas.DataFrame({\"No. Tracts\": k5sizes, \"Area\": areas})\n# Convert raw values into percentages\narea_tracts = area_tracts * 100 / area_tracts.sum()\n# Bar plot\nax = area_tracts.plot.bar()\n# Rename axes\nax.set_xlabel(\"Cluster labels\")\nax.set_ylabel(\"Percentage by cluster\");\n\n\n\n\n\n# Group table by cluster label, keep the variables used\n# for clustering, and obtain their mean\nk5means = db.groupby(\"k5cls\")[cluster_variables].mean()\n# Transpose the table and print it rounding each value\n# to three decimals\nk5means.T.round(3)\n\n\n\n\n\n\n\nk5cls\n0\n1\n2\n3\n4\n\n\n\n\nmedian_house_value\n356997.331\n538463.934\n544888.738\n1292905.256\n609385.655\n\n\npct_white\n0.620\n0.787\n0.741\n0.874\n0.583\n\n\npct_rented\n0.551\n0.270\n0.596\n0.275\n0.377\n\n\npct_hh_female\n0.108\n0.114\n0.065\n0.109\n0.095\n\n\npct_bachelor\n0.023\n0.007\n0.005\n0.002\n0.007\n\n\nmedian_no_rooms\n4.623\n5.850\n4.153\n6.100\n5.800\n\n\nincome_gini\n0.400\n0.397\n0.449\n0.488\n0.391\n\n\nmedian_age\n32.783\n42.057\n32.590\n46.356\n33.500\n\n\ntt_work\n2238.883\n2244.320\n2349.511\n1746.410\n9671.556\n\n\n\n\n\n\n\n\n# Index db on cluster ID\ntidy_db = db.set_index(\"k5cls\")\n# Keep only variables used for clustering\ntidy_db = tidy_db[cluster_variables]\n# Stack column names into a column, obtaining\n# a \"long\" version of the dataset\ntidy_db = tidy_db.stack()\n# Take indices into proper columns\ntidy_db = tidy_db.reset_index()\n# Rename column names\ntidy_db = tidy_db.rename(\n    columns={\"level_1\": \"Attribute\", 0: \"Values\"}\n)\n# Check out result\ntidy_db.head()\n\n\n\n\n\n\n\n\nk5cls\nAttribute\nValues\n\n\n\n\n0\n2\nmedian_house_value\n732900.000000\n\n\n1\n2\npct_white\n0.916988\n\n\n2\n2\npct_rented\n0.373913\n\n\n3\n2\npct_hh_female\n0.052896\n\n\n4\n2\npct_bachelor\n0.000000\n\n\n\n\n\n\n\n\n# Scale fonts to make them more readable\nseaborn.set(font_scale=1.5)\n# Setup the facets\nfacets = seaborn.FacetGrid(\n    data=tidy_db,\n    col=\"Attribute\",\n    hue=\"k5cls\",\n    sharey=False,\n    sharex=False,\n    aspect=2,\n    col_wrap=3,\n)\n# Build the plot from `sns.kdeplot`\n_ = facets.map(seaborn.kdeplot, \"Values\", fill=True).add_legend()"
  },
  {
    "objectID": "week-10/regionalization.html#agglomerative-clustering",
    "href": "week-10/regionalization.html#agglomerative-clustering",
    "title": "Regionalization",
    "section": "Agglomerative Clustering",
    "text": "Agglomerative Clustering\n\nfrom sklearn.cluster import AgglomerativeClustering\n\n\n# Set seed for reproducibility\nnp.random.seed(0)\n# Initialize the algorithm\nmodel = AgglomerativeClustering(linkage=\"ward\", n_clusters=5)\n# Run clustering\nmodel.fit(db_scaled)\n# Assign labels to main data table\ndb[\"ward5\"] = model.labels_\n\n\nward5sizes = db.groupby(\"ward5\").size()\nward5sizes\n\nward5\n0    198\n1     10\n2     48\n3    287\n4     85\ndtype: int64\n\n\n\nward5means = db.groupby(\"ward5\")[cluster_variables].mean()\nward5means.T.round(3)\n\n\n\n\n\n\n\nward5\n0\n1\n2\n3\n4\n\n\n\n\nmedian_house_value\n365932.350\n625607.090\n1202087.604\n503608.711\n503905.198\n\n\npct_white\n0.589\n0.598\n0.871\n0.770\n0.766\n\n\npct_rented\n0.573\n0.360\n0.285\n0.287\n0.657\n\n\npct_hh_female\n0.105\n0.098\n0.107\n0.112\n0.076\n\n\npct_bachelor\n0.023\n0.006\n0.002\n0.009\n0.006\n\n\nmedian_no_rooms\n4.566\n5.860\n6.010\n5.738\n3.904\n\n\nincome_gini\n0.405\n0.394\n0.480\n0.394\n0.442\n\n\nmedian_age\n31.955\n34.250\n45.196\n40.695\n33.540\n\n\ntt_work\n2181.970\n9260.400\n1766.354\n2268.718\n2402.671\n\n\n\n\n\n\n\n\n# Index db on cluster ID\ntidy_db = db.set_index(\"ward5\")\n# Keep only variables used for clustering\ntidy_db = tidy_db[cluster_variables]\n# Stack column names into a column, obtaining\n# a \"long\" version of the dataset\ntidy_db = tidy_db.stack()\n# Take indices into proper columns\ntidy_db = tidy_db.reset_index()\n# Rename column names\ntidy_db = tidy_db.rename(\n    columns={\"level_1\": \"Attribute\", 0: \"Values\"}\n)\n# Check out result\ntidy_db.head()\n\n\n\n\n\n\n\n\nward5\nAttribute\nValues\n\n\n\n\n0\n4\nmedian_house_value\n732900.000000\n\n\n1\n4\npct_white\n0.916988\n\n\n2\n4\npct_rented\n0.373913\n\n\n3\n4\npct_hh_female\n0.052896\n\n\n4\n4\npct_bachelor\n0.000000\n\n\n\n\n\n\n\n\n# Setup the facets\nfacets = seaborn.FacetGrid(\n    data=tidy_db,\n    col=\"Attribute\",\n    hue=\"ward5\",\n    sharey=False,\n    sharex=False,\n    aspect=2,\n    col_wrap=3,\n)\n# Build the plot as a `sns.kdeplot`\nfacets.map(seaborn.kdeplot, \"Values\", fill=True).add_legend();\n\n\n\n\n\ndb[\"ward5\"] = model.labels_\n# Set up figure and ax\nf, axs = plt.subplots(1, 2, figsize=(12, 6))\n\n### K-Means ###\nax = axs[0]\n# Plot unique values choropleth including\n# a legend and with no boundary lines\ndb.plot(\n    column=\"ward5\",\n    categorical=True,\n    cmap=\"Set2\",\n    legend=True,\n    linewidth=0,\n    ax=ax,\n)\n# Remove axis\nax.set_axis_off()\n# Add title\nax.set_title(\"K-Means solution ($k=5$)\")\n\n### AHC ###\nax = axs[1]\n# Plot unique values choropleth including\n# a legend and with no boundary lines\ndb.plot(\n    column=\"k5cls\",\n    categorical=True,\n    cmap=\"Set3\",\n    legend=True,\n    linewidth=0,\n    ax=ax,\n)\n# Remove axis\nax.set_axis_off()\n# Add title\nax.set_title(\"AHC solution ($k=5$)\")\n\n# Display the map\nplt.show()\n\n\n\n\n\nfrom sklearn.metrics import rand_score\n\n\nRand index\n\n\\(a\\) the number of pairs that are in the same cluster in K-Means and AHC\n\\(b\\) the number of pairs that are in different clusters in k-Means and in different subsets in AHC\n\\(c\\) the number of pairs that are in the same cluster in K-Means and in different clusters in AHC\n\\(d\\) the number of pairs that are in different clusters in K-Means and in the same cluster in AHC\n\n\\[R = \\frac{a+b}{a+b+c+d} = \\frac{a+b}{n(n-1)/2}\\]\n\nrand_score(db.k5cls, db.ward5)\n\n0.8152053556009305\n\n\n\n\nSilhouette Coefficient\n\n\\(a\\): The mean distance between a sample and all other points in the same cluster\n\\(b\\): The mean distance between a sample and all other points in the next nearest cluster.\n\n\\[s = \\frac{b-a}{max(a,b)}\\]\n\n\\(-1 \\le s \\le 1\\)\n\n\nfrom sklearn.metrics import silhouette_score\n\n\nsilhouette_score(db_scaled, db.k5cls)\n\n0.19290802579312513\n\n\n\nsilhouette_score(db_scaled, db.ward5)\n\n0.16230352315230728\n\n\n\nfrom sklearn.metrics import silhouette_samples\n\n\ns_kmeans = silhouette_samples(db_scaled, db.k5cls)\n\n\ndb['s_kmeans'] = s_kmeans\n\n\n\n# Set up figure and ax\nf, ax = plt.subplots(1, figsize=(9, 9))\n# Plot unique values choropleth including\n# a legend and with no boundary lines\ndb.plot(\n    column=\"s_kmeans\",  legend=True, linewidth=0, ax=ax\n)\n# Remove axis\nax.set_axis_off()\n# Display the map\nplt.show()"
  },
  {
    "objectID": "week-10/regionalization.html#how-many-clusters",
    "href": "week-10/regionalization.html#how-many-clusters",
    "title": "Regionalization",
    "section": "How many Clusters?",
    "text": "How many Clusters?\nset a neighborhood size = 8000\n\ndb.total_pop.sum()\n\n3283665.0\n\n\n\nn_hoods = int(db.total_pop.sum() / 8000)\n\n\nn_hoods\n\n410\n\n\n\nkmeans = KMeans(n_clusters=n_hoods)\n\nimport numpy as np\nnp.random.seed(1234)\nk410cls = kmeans.fit(db_scaled)\n\n\n# Assign labels into a column\ndb[\"k410cls\"] = k410cls.labels_\n# Set up figure and ax\nf, ax = plt.subplots(1, figsize=(9, 9))\n# Plot unique values choropleth including\n# a legend and with no boundary lines\ndb.plot(\n    column=\"k410cls\", categorical=True, legend=False, linewidth=0, ax=ax\n)\n# Remove axis\nax.set_axis_off()\n# Display the map\nplt.show()\n\n\n\n\n\ndb.dissolve(by='k410cls').plot()\n\n&lt;Axes: &gt;\n\n\n\n\n\n\ndb.groupby(by='k410cls').count().sort_values(by='GEOID', ascending=False)\n\n\n\n\n\n\n\n\nGEOID\nmedian_age\ntotal_pop\ntotal_pop_white\ntt_work\nhh_total\nhh_female\ntotal_bachelor\nmedian_hh_income\nincome_gini\n...\narea_sqm\npct_rented\npct_hh_female\npct_bachelor\npct_white\nsub_30\ngeometry\nk5cls\nward5\ns_kmeans\n\n\nk410cls\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n94\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n...\n7\n7\n7\n7\n7\n7\n7\n7\n7\n7\n\n\n7\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n...\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n\n\n82\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n...\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n\n\n264\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n...\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n\n\n149\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n...\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n179\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n...\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n\n\n178\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n...\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n\n\n177\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n...\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n\n\n175\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n...\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n\n\n409\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n...\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n\n\n\n\n410 rows × 28 columns\n\n\n\n\ndb[db.k410cls==94].plot()\n\n&lt;Axes: &gt;\n\n\n\n\n\n\nnp.random.seed(0)\n# Initialize the algorithm\nmodel = AgglomerativeClustering(linkage=\"ward\", n_clusters=n_hoods)\n# Run clustering\nmodel.fit(db_scaled)\n# Assign labels to main data table\ndb[\"ward410\"] = model.labels_\n\n\nsilhouette_score(db_scaled, db.k410cls)\n\n0.09318913872845698\n\n\n\nsilhouette_score(db_scaled, db.ward410)\n\n0.12442664189896505"
  },
  {
    "objectID": "week-10/regionalization.html#regionalization",
    "href": "week-10/regionalization.html#regionalization",
    "title": "Regionalization",
    "section": "Regionalization",
    "text": "Regionalization\n\nf, axs = plt.subplots(nrows=3, ncols=3, figsize=(12, 12))\n# Make the axes accessible with single indexing\naxs = axs.flatten()\n# Start a loop over all the variables of interest\nfor i, col in enumerate(cluster_variables):\n    # select the axis where the map will go\n    ax = axs[i]\n    # Plot the map\n    db.plot(\n        column=col,\n        ax=ax,\n        scheme=\"Quantiles\",\n        linewidth=0,\n        cmap=\"RdPu\",\n    )\n    # Remove axis clutter\n    ax.set_axis_off()\n    # Set the axis title to the name of variable being plotted\n    ax.set_title(col)\n# Display the figure\nplt.show()\n\n\n\n\n\nMoran’s I: Measuring Spatial Autocorrelation\n\nfrom libpysal.weights import Queen\nimport numpy\n\nw = Queen.from_dataframe(db)\n\n/tmp/ipykernel_3781400/1403424482.py:4: FutureWarning: `use_index` defaults to False but will default to True in future. Set True/False directly to control this behavior and silence this warning\n  w = Queen.from_dataframe(db)\n\n\n\nfrom esda.moran import Moran\n# Set seed for reproducibility\nnumpy.random.seed(123456)\n# Calculate Moran's I for each variable\nmi_results = [\n    Moran(db[variable], w) for variable in cluster_variables\n]\n# Structure results as a list of tuples\nmi_results = [\n    (variable, res.I, res.p_sim)\n    for variable, res in zip(cluster_variables, mi_results)\n]\n# Display on table\ntable = pandas.DataFrame(\n    mi_results, columns=[\"Variable\", \"Moran's I\", \"P-value\"]\n).set_index(\"Variable\")\ntable\n\n\n\n\n\n\n\n\nMoran's I\nP-value\n\n\nVariable\n\n\n\n\n\n\nmedian_house_value\n0.646618\n0.001\n\n\npct_white\n0.602079\n0.001\n\n\npct_rented\n0.451372\n0.001\n\n\npct_hh_female\n0.282239\n0.001\n\n\npct_bachelor\n0.433082\n0.001\n\n\nmedian_no_rooms\n0.538996\n0.001\n\n\nincome_gini\n0.295064\n0.001\n\n\nmedian_age\n0.381440\n0.001\n\n\ntt_work\n0.102748\n0.001"
  },
  {
    "objectID": "week-10/regionalization.html#wards-with-contiguity-constraint",
    "href": "week-10/regionalization.html#wards-with-contiguity-constraint",
    "title": "Regionalization",
    "section": "Wards with Contiguity Constraint",
    "text": "Wards with Contiguity Constraint\n\n# Set the seed for reproducibility\nnp.random.seed(123456)\n# Specify cluster model with spatial constraint\nmodel = AgglomerativeClustering(\n    linkage=\"ward\", connectivity=w.sparse, n_clusters=5\n)\n# Fit algorithm to the data\nmodel.fit(db_scaled)\n\nAgglomerativeClustering(connectivity=&lt;628x628 sparse matrix of type '&lt;class 'numpy.float64'&gt;'\n    with 4016 stored elements in Compressed Sparse Row format&gt;,\n                        n_clusters=5)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.AgglomerativeClusteringAgglomerativeClustering(connectivity=&lt;628x628 sparse matrix of type '&lt;class 'numpy.float64'&gt;'\n    with 4016 stored elements in Compressed Sparse Row format&gt;,\n                        n_clusters=5)\n\n\n\ndb[\"ward5wq\"] = model.labels_\n# Set up figure and ax\nf, ax = plt.subplots(1, figsize=(9, 9))\n# Plot unique values choropleth including a legend and with no boundary lines\ndb.plot(\n    column=\"ward5wq\",\n    categorical=True,\n    legend=True,\n    linewidth=0,\n    ax=ax,\n)\n# Remove axis\nax.set_axis_off()\n# Display the map\nplt.show()"
  },
  {
    "objectID": "week-10/regionalization.html#max-p",
    "href": "week-10/regionalization.html#max-p",
    "title": "Regionalization",
    "section": "Max-p",
    "text": "Max-p\n\nFuture studies should consider consolidating counties using regionalization methods.57, 58 Salerno et al. 2024\n\n\nFuture studies should consider regionalization methods, such as the Max-P-regions model23, to combine counties with small numbers of cases. Dong et al. 2023\n\nActually doing it: \nKolak et al. 2020\n\nfrom spopt.region import MaxPHeuristic as MaxP\n\n\ndb.total_pop\n\n0       2590.0\n1       5147.0\n2       5595.0\n3       7026.0\n4      40402.0\n        ...   \n623     7848.0\n624     3624.0\n625     5261.0\n626     3065.0\n627     2693.0\nName: total_pop, Length: 628, dtype: float64\n\n\n\nmodel = MaxP(db, w, cluster_variables, 'total_pop', 8000, top_n=2)\n\n\nnp.random.seed(1234)\nmodel.solve()\n\n\ndb['maxp'] = model.labels_\n\n\ndb.groupby(by='maxp').count()\n\n\n\n\n\n\n\n\nGEOID\nmedian_age\ntotal_pop\ntotal_pop_white\ntt_work\nhh_total\nhh_female\ntotal_bachelor\nmedian_hh_income\nincome_gini\n...\npct_bachelor\npct_white\nsub_30\ngeometry\nk5cls\nward5\ns_kmeans\nk410cls\nward410\nward5wq\n\n\nmaxp\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n...\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n\n\n2\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n...\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n\n\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n...\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n\n\n4\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n...\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n\n\n5\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n...\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n275\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n...\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n\n\n276\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n...\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n\n\n277\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n...\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n\n\n278\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n...\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n\n\n279\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n...\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n\n\n\n\n279 rows × 31 columns\n\n\n\n\ndb.plot(column='maxp', categorical=True)\n\n&lt;Axes: &gt;\n\n\n\n\n\n\ndb.explore(column='maxp', tooltip=['maxp', 'total_pop'])\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\n\n\n\nsummary = db[['maxp', 'total_pop']].groupby(by='maxp').sum()\n\n\nsummary.head()\n\n\n\n\n\n\n\n\ntotal_pop\n\n\nmaxp\n\n\n\n\n\n1\n10245.0\n\n\n2\n19651.0\n\n\n3\n10957.0\n\n\n4\n13258.0\n\n\n5\n12708.0\n\n\n\n\n\n\n\n\nsummary.total_pop.describe()\n\ncount      279.000000\nmean     11769.408602\nstd       3733.528006\nmin       8007.000000\n25%       9620.000000\n50%      10868.000000\n75%      12841.500000\nmax      43376.000000\nName: total_pop, dtype: float64\n\n\n\nmaxp_hoods = db[['geometry', 'maxp']].dissolve(by='maxp')\n\n\nmaxp_hoods.explore()\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\n\n\n\nimport tobler\n\n\nres = tobler.area_weighted.area_interpolate(db, maxp_hoods, extensive_variables=['total_pop'],\n                                   intensive_variables=['pct_white'])\n\n\nres.plot(column='pct_white', cmap='Blues', legend=True, scheme='quantiles')\n\n&lt;Axes: &gt;\n\n\n\n\n\n\nres.explore(column='pct_white')\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "syllabus.html",
    "href": "syllabus.html",
    "title": "GEOG 584",
    "section": "",
    "text": "Instructor\nSergio Rey\nLecture Meetings\nTue 11:00-12:40\n\n\n\n\n\nThu 11:00-13:40\n\n\nOffice Hours\nThu 12:40-13:40 and by appointment\nCla\nssroom SH 324\n\n\nOffice\nPFSA 316G\nCourse LMS\nCanvas\n\n\n\n\n\n\nThis course offers an introduction to open source tools and practices for geographic information system (GIS) applications. Much of today’s world is dominated by “big data”, data science, machine learning, and artificial intelligence, and GIS is no exception. This requires that GIS students have the capacity to understand and analyze quantitative information. At the same time, there are increasing demands for openness and transparency in both GIS applications and GIS in science.\nThis course is designed to equip students with the skills and practices to fully engage with, and contribute to, these developments. It relies on open source software which is essential since it provides access to free, high-quality, cross-platform tools. At the same time, free availability does not necessarily translate into skill acquisition, and a key goal of this course is to flatten the learning curve for students discovering these new tools and practices.\n\n\n\nThe course is structured as a blending of a lecture and studio. In the lecture component of the course, the literature surrounding the course project will be discussed and evaluated to shape the empirical project which will form the key focus of the second half of the semester. In the studio component of the course, students will be exposed to open source tools (software), technologies (github, CI/CD), and practices (collaborative development) in GIS projects.\n\n\n\nBy the end of the semester, students will\n\nacquire competency in using open source software and tools for their own GIS research projects\ngain experience in collaborative open source and open science best practices\napply these skill sets to contribute to a reproducible empirical GIS project\n\n\n\n\nGEOG 484 or equivalent.\n\nCourses numbered 500 through 599 are in the upper division and are also acceptable for advanced degrees when taken by students admitted to graduate standing;\n\nSource\n\n\n\nThis is a 3-unit course. The definition of a unit is one credit hour:\n\nOne hour of direct faculty instruction and a minimum of two hours of out-of-class student work each week for approximately 15 weeks for one semester or equivalent amount of work over a different amount of time;\n\nSource\nAs such, you should allocate six hours of time per week for working on course related materials outside of our in-class meetings.\n\n\n\n\n\nA series of exercises will be assigned that provide opportunities to further develop skills in open source tooling and practices. Each student will be evaluated individually on all four exercises. You can view these exercises as practice for the skills that go into the final project.\n\n\n\nThere will be one exam on week 11 covering the materials from the first part of the course.\n\n\n\nThe last 5 weeks of the course are organized as a studio in which each student will contribute to a final project that requires the application of the various open source technologies, packages, and practices that are introduced.\nRubrics for peer evaluation of project work will be given out in week 11.\n\n\n\nStarting the second week of sessions, quizzes will be given on the assigned reading material. Quizzes will run through week 10 of the semester. Quizzes are graded on a pass/fail basis. Quizzes will be given during the first 5 minutes of a class meeting.\n\n\n\nEach student is provided with three tokens at the beginning of the semester. Tokens can be used in the following ways:\n\nOne token can be used for a one-week extension on an exercise.\nOne token can be used to resubmit an exercise that does not demonstrate competency.\nTwo tokens can be used to request a make-up date for the exam. (Requests have to be submitted by March 14 5pm.)\n\nEach token that remains unused by May 2 will be counted as a passed quiz.\n\n\n\nYour final course grade is determined using specification grading. Your course grade will be based on the quality and quantity of the work that you submit that is evaluated to be of an acceptable level of quality. The acceptable level of quality demonstrates competency in the concepts and methods covered in the course.\nThere is a two-step process for determination of your final course grade at the end of the semester:\n\nUsing your exercises, project and quiz grades, your base grade is determined.\nUsing your exam grade to determine if your base grade is adjusted upwards, downwards or remains as your final grade.\n\nFor Step 1, the base grade is determined as follows\n\n\n\nBase\nHurdles\n\n\n\n\nA\nDemonstrates competency on 4 of 4 exercises\n\n\n\nObtained a valued contributor in evaluation\n\n\n\nPass 90% of the quizzes\n\n\n\nGroup project achieves competency in all 10 areas\n\n\nB\nDemonstrates competency on 3 of 4 exercises\n\n\n\nObtained a team player ranking in evaluation\n\n\n\nPass 80% of the quizzes\n\n\n\nGroup project achieves competency in 8 areas\n\n\nC\nDemonstrates competency on 2 of 4 exercises\n\n\n\nObtained a free rider ranking in evaluation\n\n\n\nPass 70% of the quizzes\n\n\n\nGroup project achieves competency in 6 areas\n\n\nD\nDemonstrates competency on 1 of 4 exercises\n\n\n\nObtained a missing in action ranking in evaluation\n\n\n\nPass 60% of the quizzes\n\n\n\nGroup project achieves competency in 4 areas\n\n\nF\nFailure to clear all D-level hurdles\n\n\n\nYour base grade is the highest grade for which you clear all the hurdles. For example, a student who demonstrated competency on 3 of the four exercises, worked on a group project that achieved competency in 9 of the 10 areas, passed 85% of the quizzes, and obtained a free rider ranking in their peer evaluation would have a C base grade.\nFor Step 2, your final course grade is determined as follows:\n\nIf you earn at least 85% on the exam, you will obtain a “+” for your grade. So a B base grade would become a B+ course grade, and so on (Note: SDSU does not record A+ grades).\nIf you score between 70-85% on the exam, your base grade becomes your course grade.\nIf you score between 50% and 69% on the exam, you will obtain a “-” for your grade. So an A base grade becomes an A- course grade, a B base grade becomes a B- course grade, and so on.\nIf you score less than 50% on the exam, your course grade will drop one level: An A base grade becomes a final B course grade.\n\n\n\n\n\n\n\n\nWeek\nDates\nTopic\nReadings\n\n\n\n\n1\nJan-18\nCourse Introduction\n\n\n\n2\nJan-23\nAccounts\n\n\n\n\nJan-25\nComputational Environment\n\n\n\n3\nJan-30\nPandas\npandas\n\n\n\nFeb-01\nGeoPandas\ngeopandas I\n\n\n4\nFeb-06\nGeovisualizaiton\nchoropleths\n\n\n\nFeb-08\nExercise 1\n\n\n\n5\nFeb-13\nProjections\nprojections\n\n\n\nFeb-15\nSpatial Joins\nspatial joins\n\n\n6\nFeb-20\nSpatial Inequality\nspatial inequality\n\n\n\nFeb-22\nExercise 2\n\n\n\n7\nFeb-27\nGeoSnap\ngeosnap\n\n\n\nFeb-29\nIsochrones\nisochrones\n\n\n8\nMar-05\nAccessibility\naccessibility\n\n\n\nMar-07\nExercise 3\n\n\n\n9\nMar-12\nClustering\nclustering-clusteringII\n\n\n\nMar-14\nSpatial Clustering\nregionalization\n\n\n10\nMar-19\nGeodemographics\ngeodemographics\n\n\n\nMar-21\nExercise 4\n\n\n\n11\nMar-26\nReview\n\n\n\n\nMar-28\nExam\n\n\n\n\nApr-02\nSpring Break\n\n\n\n\nApr-04\nSpring Break\n\n\n\n12\nApr-09\nStudio: Problem Definition\n\n\n\n\nApr-11\nStudio: Data Identification\n\n\n\n13\nApr-16\nStudio: Data Acquisition\n\n\n\n\nApr-18\nStudio: Data Processing\n\n\n\n14\nApr-23\nStudio: Analysis\n\n\n\n\nApr-25\nStudio: Analysis\n\n\n\n15\nApr-30\nStudio: Drafting\n\n\n\n\nMay-02\nStudio: Final Essay\n\n\n\n16\nMay-03-09\nFinal Exam Week\nPresentations\n\n\n\n\n\n\nAs we are learning Python through GIS, and assuming students already posses an understanding of GIS fundamentals, supplementary readings on Python should be consulted for further understanding:\n“Think Python: How to Think Like a Computer Scientist” is an insightful and approachable guide designed for beginners looking to learn Python programming. Authored by Allen B. Downey, this book simplifies the process of learning Python by breaking down its core concepts into manageable sections, making it ideal for those new to programming. Emphasizing the importance of computational thinking, the book gradually builds from simple topics, like variables and basic operations, to more complex subjects such as data structures, algorithms, and debugging. Throughout the text, Downey encourages a problem-solving approach, reinforcing key programming concepts with practical examples and exercises that challenge the reader to think critically and apply their learning. This book is renowned for its clear, concise, and reader-friendly style, making the often-daunting task of learning a new programming language both manageable and engaging.\nThe book “A Whirlwind Tour of Python” by Jake VanderPlas can also be accessed online for free. . This book is a fast-paced introduction to essential features of the Python language, aimed at researchers and developers who are already familiar with programming in another language.\n\n\n\n\n\nIf you are a student with a disability and are in need of accommodations for this class, please contact Student Ability Success Center at (619) 594-6473 as soon as possible. Please know accommodations are not retroactive, and I cannot provide accommodations based upon disability until I have received an accommodation letter from Student Ability Success Center.\n\n\n\nStudent Privacy and Intellectual Property: The Family Educational Rights and Privacy Act (FERPA) mandates the protection of student information, including contact information, grades, and graded assignments. I will use Canvas to communicate with you, and I will not post grades or leave graded assignments in public places. Students will be notified at the time of an assignment if copies of student work will be retained beyond the end of the semester or used as examples for future students or the wider public. Students maintain intellectual property rights to work products they create as part of this course unless they are formally notified otherwise.\n\n\n\nThe SDSU student academic integrity policy lists violations in detail. These violations fall into eight broad areas that include but are not limited to: cheating, fabrication, plagiarism, facilitating academic misconduct, unauthorized collaboration, interference or sabotage, non-compliance with research regulations and retaliation. For more information about the SDSU student academic integrity policy, please see the following: https://sacd.sdsu.edu/student-rights/academic-dishonesty.\n\n\n\nAs course instructor, I am dedicated to providing a harassment-free learning experience for all students, regardless of gender, sexual orientation, disability, physical appearance, body size, race, religion, or choice of operating system. All course participants are expected to show respect and courtesy to other students throughout the semester. As a learning community we do not tolerate harassment of participants in any form.\n\nAll communication should be appropriate for a professional audience including people of many different backgrounds. Sexual language and imagery are not appropriate in this course.\nBe kind to others. Do not insult or put down other students. Behave professionally. Remember that harassment and sexist, racist, or exclusionary jokes are not appropriate for this course.\nStudents violating these rules may be asked to leave the course, and their violations will be reported to the SDSU administration.\n\nThis code of conduct is an adaptation of the SciPy 2018 Code of Conduct."
  },
  {
    "objectID": "syllabus.html#logistics",
    "href": "syllabus.html#logistics",
    "title": "GEOG 584",
    "section": "",
    "text": "Instructor\nSergio Rey\nLecture Meetings\nTue 11:00-12:40\n\n\n\n\n\nThu 11:00-13:40\n\n\nOffice Hours\nThu 12:40-13:40 and by appointment\nCla\nssroom SH 324\n\n\nOffice\nPFSA 316G\nCourse LMS\nCanvas"
  },
  {
    "objectID": "syllabus.html#introduction",
    "href": "syllabus.html#introduction",
    "title": "GEOG 584",
    "section": "",
    "text": "This course offers an introduction to open source tools and practices for geographic information system (GIS) applications. Much of today’s world is dominated by “big data”, data science, machine learning, and artificial intelligence, and GIS is no exception. This requires that GIS students have the capacity to understand and analyze quantitative information. At the same time, there are increasing demands for openness and transparency in both GIS applications and GIS in science.\nThis course is designed to equip students with the skills and practices to fully engage with, and contribute to, these developments. It relies on open source software which is essential since it provides access to free, high-quality, cross-platform tools. At the same time, free availability does not necessarily translate into skill acquisition, and a key goal of this course is to flatten the learning curve for students discovering these new tools and practices."
  },
  {
    "objectID": "syllabus.html#organization",
    "href": "syllabus.html#organization",
    "title": "GEOG 584",
    "section": "",
    "text": "The course is structured as a blending of a lecture and studio. In the lecture component of the course, the literature surrounding the course project will be discussed and evaluated to shape the empirical project which will form the key focus of the second half of the semester. In the studio component of the course, students will be exposed to open source tools (software), technologies (github, CI/CD), and practices (collaborative development) in GIS projects."
  },
  {
    "objectID": "syllabus.html#learning-outcomes",
    "href": "syllabus.html#learning-outcomes",
    "title": "GEOG 584",
    "section": "",
    "text": "By the end of the semester, students will\n\nacquire competency in using open source software and tools for their own GIS research projects\ngain experience in collaborative open source and open science best practices\napply these skill sets to contribute to a reproducible empirical GIS project"
  },
  {
    "objectID": "syllabus.html#prerequisites",
    "href": "syllabus.html#prerequisites",
    "title": "GEOG 584",
    "section": "",
    "text": "GEOG 484 or equivalent.\n\nCourses numbered 500 through 599 are in the upper division and are also acceptable for advanced degrees when taken by students admitted to graduate standing;\n\nSource"
  },
  {
    "objectID": "syllabus.html#credit-hours-and-course-work",
    "href": "syllabus.html#credit-hours-and-course-work",
    "title": "GEOG 584",
    "section": "",
    "text": "This is a 3-unit course. The definition of a unit is one credit hour:\n\nOne hour of direct faculty instruction and a minimum of two hours of out-of-class student work each week for approximately 15 weeks for one semester or equivalent amount of work over a different amount of time;\n\nSource\nAs such, you should allocate six hours of time per week for working on course related materials outside of our in-class meetings."
  },
  {
    "objectID": "syllabus.html#grading",
    "href": "syllabus.html#grading",
    "title": "GEOG 584",
    "section": "",
    "text": "A series of exercises will be assigned that provide opportunities to further develop skills in open source tooling and practices. Each student will be evaluated individually on all four exercises. You can view these exercises as practice for the skills that go into the final project.\n\n\n\nThere will be one exam on week 11 covering the materials from the first part of the course.\n\n\n\nThe last 5 weeks of the course are organized as a studio in which each student will contribute to a final project that requires the application of the various open source technologies, packages, and practices that are introduced.\nRubrics for peer evaluation of project work will be given out in week 11.\n\n\n\nStarting the second week of sessions, quizzes will be given on the assigned reading material. Quizzes will run through week 10 of the semester. Quizzes are graded on a pass/fail basis. Quizzes will be given during the first 5 minutes of a class meeting.\n\n\n\nEach student is provided with three tokens at the beginning of the semester. Tokens can be used in the following ways:\n\nOne token can be used for a one-week extension on an exercise.\nOne token can be used to resubmit an exercise that does not demonstrate competency.\nTwo tokens can be used to request a make-up date for the exam. (Requests have to be submitted by March 14 5pm.)\n\nEach token that remains unused by May 2 will be counted as a passed quiz.\n\n\n\nYour final course grade is determined using specification grading. Your course grade will be based on the quality and quantity of the work that you submit that is evaluated to be of an acceptable level of quality. The acceptable level of quality demonstrates competency in the concepts and methods covered in the course.\nThere is a two-step process for determination of your final course grade at the end of the semester:\n\nUsing your exercises, project and quiz grades, your base grade is determined.\nUsing your exam grade to determine if your base grade is adjusted upwards, downwards or remains as your final grade.\n\nFor Step 1, the base grade is determined as follows\n\n\n\nBase\nHurdles\n\n\n\n\nA\nDemonstrates competency on 4 of 4 exercises\n\n\n\nObtained a valued contributor in evaluation\n\n\n\nPass 90% of the quizzes\n\n\n\nGroup project achieves competency in all 10 areas\n\n\nB\nDemonstrates competency on 3 of 4 exercises\n\n\n\nObtained a team player ranking in evaluation\n\n\n\nPass 80% of the quizzes\n\n\n\nGroup project achieves competency in 8 areas\n\n\nC\nDemonstrates competency on 2 of 4 exercises\n\n\n\nObtained a free rider ranking in evaluation\n\n\n\nPass 70% of the quizzes\n\n\n\nGroup project achieves competency in 6 areas\n\n\nD\nDemonstrates competency on 1 of 4 exercises\n\n\n\nObtained a missing in action ranking in evaluation\n\n\n\nPass 60% of the quizzes\n\n\n\nGroup project achieves competency in 4 areas\n\n\nF\nFailure to clear all D-level hurdles\n\n\n\nYour base grade is the highest grade for which you clear all the hurdles. For example, a student who demonstrated competency on 3 of the four exercises, worked on a group project that achieved competency in 9 of the 10 areas, passed 85% of the quizzes, and obtained a free rider ranking in their peer evaluation would have a C base grade.\nFor Step 2, your final course grade is determined as follows:\n\nIf you earn at least 85% on the exam, you will obtain a “+” for your grade. So a B base grade would become a B+ course grade, and so on (Note: SDSU does not record A+ grades).\nIf you score between 70-85% on the exam, your base grade becomes your course grade.\nIf you score between 50% and 69% on the exam, you will obtain a “-” for your grade. So an A base grade becomes an A- course grade, a B base grade becomes a B- course grade, and so on.\nIf you score less than 50% on the exam, your course grade will drop one level: An A base grade becomes a final B course grade."
  },
  {
    "objectID": "syllabus.html#course-schedule-planned",
    "href": "syllabus.html#course-schedule-planned",
    "title": "GEOG 584",
    "section": "",
    "text": "Week\nDates\nTopic\nReadings\n\n\n\n\n1\nJan-18\nCourse Introduction\n\n\n\n2\nJan-23\nAccounts\n\n\n\n\nJan-25\nComputational Environment\n\n\n\n3\nJan-30\nPandas\npandas\n\n\n\nFeb-01\nGeoPandas\ngeopandas I\n\n\n4\nFeb-06\nGeovisualizaiton\nchoropleths\n\n\n\nFeb-08\nExercise 1\n\n\n\n5\nFeb-13\nProjections\nprojections\n\n\n\nFeb-15\nSpatial Joins\nspatial joins\n\n\n6\nFeb-20\nSpatial Inequality\nspatial inequality\n\n\n\nFeb-22\nExercise 2\n\n\n\n7\nFeb-27\nGeoSnap\ngeosnap\n\n\n\nFeb-29\nIsochrones\nisochrones\n\n\n8\nMar-05\nAccessibility\naccessibility\n\n\n\nMar-07\nExercise 3\n\n\n\n9\nMar-12\nClustering\nclustering-clusteringII\n\n\n\nMar-14\nSpatial Clustering\nregionalization\n\n\n10\nMar-19\nGeodemographics\ngeodemographics\n\n\n\nMar-21\nExercise 4\n\n\n\n11\nMar-26\nReview\n\n\n\n\nMar-28\nExam\n\n\n\n\nApr-02\nSpring Break\n\n\n\n\nApr-04\nSpring Break\n\n\n\n12\nApr-09\nStudio: Problem Definition\n\n\n\n\nApr-11\nStudio: Data Identification\n\n\n\n13\nApr-16\nStudio: Data Acquisition\n\n\n\n\nApr-18\nStudio: Data Processing\n\n\n\n14\nApr-23\nStudio: Analysis\n\n\n\n\nApr-25\nStudio: Analysis\n\n\n\n15\nApr-30\nStudio: Drafting\n\n\n\n\nMay-02\nStudio: Final Essay\n\n\n\n16\nMay-03-09\nFinal Exam Week\nPresentations"
  },
  {
    "objectID": "syllabus.html#additional-readings",
    "href": "syllabus.html#additional-readings",
    "title": "GEOG 584",
    "section": "",
    "text": "As we are learning Python through GIS, and assuming students already posses an understanding of GIS fundamentals, supplementary readings on Python should be consulted for further understanding:\n“Think Python: How to Think Like a Computer Scientist” is an insightful and approachable guide designed for beginners looking to learn Python programming. Authored by Allen B. Downey, this book simplifies the process of learning Python by breaking down its core concepts into manageable sections, making it ideal for those new to programming. Emphasizing the importance of computational thinking, the book gradually builds from simple topics, like variables and basic operations, to more complex subjects such as data structures, algorithms, and debugging. Throughout the text, Downey encourages a problem-solving approach, reinforcing key programming concepts with practical examples and exercises that challenge the reader to think critically and apply their learning. This book is renowned for its clear, concise, and reader-friendly style, making the often-daunting task of learning a new programming language both manageable and engaging.\nThe book “A Whirlwind Tour of Python” by Jake VanderPlas can also be accessed online for free. . This book is a fast-paced introduction to essential features of the Python language, aimed at researchers and developers who are already familiar with programming in another language."
  },
  {
    "objectID": "syllabus.html#policies",
    "href": "syllabus.html#policies",
    "title": "GEOG 584",
    "section": "",
    "text": "If you are a student with a disability and are in need of accommodations for this class, please contact Student Ability Success Center at (619) 594-6473 as soon as possible. Please know accommodations are not retroactive, and I cannot provide accommodations based upon disability until I have received an accommodation letter from Student Ability Success Center.\n\n\n\nStudent Privacy and Intellectual Property: The Family Educational Rights and Privacy Act (FERPA) mandates the protection of student information, including contact information, grades, and graded assignments. I will use Canvas to communicate with you, and I will not post grades or leave graded assignments in public places. Students will be notified at the time of an assignment if copies of student work will be retained beyond the end of the semester or used as examples for future students or the wider public. Students maintain intellectual property rights to work products they create as part of this course unless they are formally notified otherwise.\n\n\n\nThe SDSU student academic integrity policy lists violations in detail. These violations fall into eight broad areas that include but are not limited to: cheating, fabrication, plagiarism, facilitating academic misconduct, unauthorized collaboration, interference or sabotage, non-compliance with research regulations and retaliation. For more information about the SDSU student academic integrity policy, please see the following: https://sacd.sdsu.edu/student-rights/academic-dishonesty.\n\n\n\nAs course instructor, I am dedicated to providing a harassment-free learning experience for all students, regardless of gender, sexual orientation, disability, physical appearance, body size, race, religion, or choice of operating system. All course participants are expected to show respect and courtesy to other students throughout the semester. As a learning community we do not tolerate harassment of participants in any form.\n\nAll communication should be appropriate for a professional audience including people of many different backgrounds. Sexual language and imagery are not appropriate in this course.\nBe kind to others. Do not insult or put down other students. Behave professionally. Remember that harassment and sexist, racist, or exclusionary jokes are not appropriate for this course.\nStudents violating these rules may be asked to leave the course, and their violations will be reported to the SDSU administration.\n\nThis code of conduct is an adaptation of the SciPy 2018 Code of Conduct."
  },
  {
    "objectID": "week-04/0206_choropleths.html",
    "href": "week-04/0206_choropleths.html",
    "title": "Geovisualization with PySAL I",
    "section": "",
    "text": "import warnings\nwarnings.simplefilter('ignore')\nimport geopandas as gpd\nimport mapclassify\nimport matplotlib.pyplot as plt\nimport contextily as cx\ngdf = gpd.read_parquet(\"/home/jupyter-student/data/shared/scag_region.parquet\")\ngdf.shape\n\n(4580, 194)\ngdf.head()\n\n\n\n\n\n\n\n\ngeoid\nn_asian_under_15\nn_black_under_15\nn_hispanic_under_15\nn_native_under_15\nn_white_under_15\nn_persons_under_18\nn_asian_over_60\nn_black_over_60\nn_hispanic_over_60\n...\nyear\nn_total_housing_units_sample\np_nonhisp_white_persons\np_white_over_60\np_black_over_60\np_hispanic_over_60\np_native_over_60\np_asian_over_60\np_disabled\ngeometry\n\n\n\n\n0\n06037128702\n58.0\n0.0\n223.0\n0.0\n475.0\n986.0\nNaN\nNaN\nNaN\n...\n2010\n2903.0\n64.726214\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((-118.44870 34.16485, -118.43997 34.1...\n\n\n1\n06037131600\n83.0\n62.0\n777.0\n0.0\n135.0\n1355.0\nNaN\nNaN\nNaN\n...\n2010\n1487.0\n28.679979\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((-118.56229 34.22033, -118.55792 34.2...\n\n\n2\n06037134104\n287.0\n17.0\n816.0\n0.0\n61.0\n1323.0\nNaN\nNaN\nNaN\n...\n2010\n1388.0\n14.846188\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((-118.57976 34.21558, -118.57539 34.2...\n\n\n3\n06037134304\n90.0\n24.0\n298.0\n0.0\n89.0\n520.0\nNaN\nNaN\nNaN\n...\n2010\n928.0\n33.378933\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((-118.61472 34.21952, -118.61039 34.2...\n\n\n4\n06037242000\n0.0\n229.0\n681.0\n0.0\n0.0\n1164.0\nNaN\nNaN\nNaN\n...\n2010\n1054.0\n0.058565\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((-118.25416 33.93882, -118.25413 33.9...\n\n\n\n\n5 rows × 194 columns\ngdf.crs\n\n&lt;Geographic 2D CRS: EPSG:4326&gt;\nName: WGS 84\nAxis Info [ellipsoidal]:\n- Lat[north]: Geodetic latitude (degree)\n- Lon[east]: Geodetic longitude (degree)\nArea of Use:\n- name: World.\n- bounds: (-180.0, -90.0, 180.0, 90.0)\nDatum: World Geodetic System 1984 ensemble\n- Ellipsoid: WGS 84\n- Prime Meridian: Greenwich\ngdf.geometry\n\n0       POLYGON ((-118.44870 34.16485, -118.43997 34.1...\n1       POLYGON ((-118.56229 34.22033, -118.55792 34.2...\n2       POLYGON ((-118.57976 34.21558, -118.57539 34.2...\n3       POLYGON ((-118.61472 34.21952, -118.61039 34.2...\n4       POLYGON ((-118.25416 33.93882, -118.25413 33.9...\n                              ...                        \n4575    POLYGON ((-118.50373 34.42607, -118.50050 34.4...\n4576    POLYGON ((-118.20731 33.90754, -118.20641 33.9...\n4577    POLYGON ((-119.22134 34.18130, -119.21727 34.1...\n4578    POLYGON ((-116.51068 33.80502, -116.51069 33.8...\n4579    POLYGON ((-118.41379 34.17940, -118.41160 34.1...\nName: geometry, Length: 4580, dtype: geometry\ngdf.plot()\n\n&lt;Axes: &gt;\ngdf.to_crs(3857).plot()\n\n&lt;Axes: &gt;\ngdf = gdf.to_crs(3857)\ngdf.plot()\n\n&lt;Axes: &gt;\ngdf.crs\n\n&lt;Projected CRS: EPSG:3857&gt;\nName: WGS 84 / Pseudo-Mercator\nAxis Info [cartesian]:\n- X[east]: Easting (metre)\n- Y[north]: Northing (metre)\nArea of Use:\n- name: World between 85.06°S and 85.06°N.\n- bounds: (-180.0, -85.06, 180.0, 85.06)\nCoordinate Operation:\n- name: Popular Visualisation Pseudo-Mercator\n- method: Popular Visualisation Pseudo Mercator\nDatum: World Geodetic System 1984 ensemble\n- Ellipsoid: WGS 84\n- Prime Meridian: Greenwich\nf, ax = plt.subplots(1, figsize=(12, 8))\ngdf.plot(column=\"median_home_value\", scheme=\"Quantiles\",\n         ax=ax, edgecolor='white', legend=True,\n         linewidth=0.3)\nax.set_axis_off()\nplt.show()\nPatternicity: Detecting patterns that are not really there\ngdf = gpd.read_parquet(\"/home/jupyter-student/data/shared/scag_region.parquet\")\ngdf = gdf.to_crs(3857)\nf, ax = plt.subplots(1, figsize=(12, 8)) gdf.plot(column=‘median_home_value’, scheme=‘QUANTILES’, alpha=0.6, ax=ax, legend=True) cx.add_basemap(ax, crs=gdf.crs.to_string(), source=cx.providers.CartoDB.Positron) ax.set_axis_off() plt.show()"
  },
  {
    "objectID": "week-04/0206_choropleths.html#classification-schemes",
    "href": "week-04/0206_choropleths.html#classification-schemes",
    "title": "Geovisualization with PySAL I",
    "section": "Classification Schemes",
    "text": "Classification Schemes\n\nthe number of classes\nthe intervals of the classes\n\n\nhv = gdf['median_home_value']\n\n\nmapclassify.Quantiles(hv, k=5)\n\nQuantiles\n\n        Interval           Count\n--------------------------------\n[  10888.42,  276462.96] |   916\n( 276462.96,  368936.70] |   917\n( 368936.70,  457037.70] |   993\n( 457037.70,  628216.01] |   840\n( 628216.01, 1088952.40] |   914\n\n\n\nOpen and Closed Intervals\n$ (a, b) = {x R | a x b } $\n$ (a, b] = {x R | a x b } $\nMnemonic: Open omits, Closed contains, and () looks like an O.\n\nres = mapclassify.Quantiles(hv, k=5)\n\n\ndir(res)\n\n['__call__',\n '__class__',\n '__delattr__',\n '__dict__',\n '__dir__',\n '__doc__',\n '__eq__',\n '__format__',\n '__ge__',\n '__getattribute__',\n '__gt__',\n '__hash__',\n '__init__',\n '__init_subclass__',\n '__le__',\n '__lt__',\n '__module__',\n '__ne__',\n '__new__',\n '__reduce__',\n '__reduce_ex__',\n '__repr__',\n '__setattr__',\n '__sizeof__',\n '__str__',\n '__subclasshook__',\n '__weakref__',\n '_classify',\n '_fmt',\n '_set_bins',\n '_summary',\n '_update',\n 'adcm',\n 'bins',\n 'classes',\n 'counts',\n 'find_bin',\n 'fmt',\n 'gadf',\n 'get_adcm',\n 'get_fmt',\n 'get_gadf',\n 'get_legend_classes',\n 'get_tss',\n 'k',\n 'make',\n 'name',\n 'plot',\n 'set_fmt',\n 'table',\n 'tss',\n 'update',\n 'y',\n 'yb']\n\n\n\nres.bins\n\narray([ 276462.9588015 ,  368936.70411985,  457037.69973266,\n        628216.01123596, 1088952.39981273])\n\n\n\nres.counts\n\narray([916, 917, 993, 840, 914])\n\n\n\nres.yb\n\narray([4, 2, 2, ..., 1, 0, 3])\n\n\n\nhv[0]\n\n647272.65917603\n\n\n\ntype(hv)\n\npandas.core.series.Series\n\n\n\nhv\n\n0       647272.659176\n1       400842.977528\n2       416741.666667\n3       406178.838951\n4       251438.857678\n            ...      \n4575    291838.951311\n4576    273871.254682\n4577    293254.588015\n4578    255794.662921\n4579    581717.790262\nName: median_home_value, Length: 4580, dtype: float64\n\n\n\nfj = mapclassify.FisherJenks(hv, k=5)\n\n\nfj\n\nFisherJenks\n\n        Interval           Count\n--------------------------------\n[  10888.42,  266139.70] |   838\n( 266139.70,  413148.13] |  1525\n( 413148.13,  587053.65] |  1129\n( 587053.65,  857984.74] |   750\n( 857984.74, 1088952.40] |   338\n\n\n\nfj.bins\n\narray([ 266139.70037453,  413148.12734082,  587053.65168539,\n        857984.73782772, 1088952.39981273])\n\n\n\nres.bins\n\narray([ 276462.9588015 ,  368936.70411985,  457037.69973266,\n        628216.01123596, 1088952.39981273])\n\n\n\nf, ax = plt.subplots(1, figsize=(12, 8))\ngdf.plot(column=\"median_home_value\",\n         ax=ax, edgecolor='white', legend=True,\n         linewidth=0.3)\nax.set_axis_off()\nplt.show()\n\n\n\n\n\nf, ax = plt.subplots(1, figsize=(12, 8))\ngdf.plot(column=\"median_home_value\", scheme='Quantiles',\n         ax=ax, edgecolor='white', legend=True,\n         linewidth=0.3)\nax.set_axis_off()\nplt.show()\n\n\n\n\n\nf, ax = plt.subplots(1, figsize=(12, 8))\ngdf.plot(column=\"median_home_value\", scheme='Quantiles',\n         ax=ax, edgecolor='white', legend=True,\n         cmap='Blues',\n         linewidth=0.3)\nax.set_axis_off()\nplt.show()\n\n\n\n\n\nf, ax = plt.subplots(1, figsize=(12, 8))\ngdf.plot(column=\"median_home_value\", scheme='Quantiles',\n         ax=ax, edgecolor='white', legend=True,\n         cmap='Greens',\n         linewidth=0.3)\nax.set_axis_off()\nplt.show()\n\n\n\n\n\nmapclassify.Quantiles(hv, k=5)\n\nQuantiles\n\n        Interval           Count\n--------------------------------\n[  10888.42,  276462.96] |   916\n( 276462.96,  368936.70] |   917\n( 368936.70,  457037.70] |   993\n( 457037.70,  628216.01] |   840\n( 628216.01, 1088952.40] |   914"
  },
  {
    "objectID": "week-04/0206_choropleths.html#explore",
    "href": "week-04/0206_choropleths.html#explore",
    "title": "Geovisualization with PySAL I",
    "section": "Explore",
    "text": "Explore\n\ngdf.explore(column='median_home_value')\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\n\n\n\ngdf.head()\n\n\n\n\n\n\n\n\ngeoid\nn_asian_under_15\nn_black_under_15\nn_hispanic_under_15\nn_native_under_15\nn_white_under_15\nn_persons_under_18\nn_asian_over_60\nn_black_over_60\nn_hispanic_over_60\n...\nyear\nn_total_housing_units_sample\np_nonhisp_white_persons\np_white_over_60\np_black_over_60\np_hispanic_over_60\np_native_over_60\np_asian_over_60\np_disabled\ngeometry\n\n\n\n\n0\n06037128702\n58.0\n0.0\n223.0\n0.0\n475.0\n986.0\nNaN\nNaN\nNaN\n...\n2010\n2903.0\n64.726214\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((-13185648.969 4050959.563, -13184676...\n\n\n1\n06037131600\n83.0\n62.0\n777.0\n0.0\n135.0\n1355.0\nNaN\nNaN\nNaN\n...\n2010\n1487.0\n28.679979\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((-13198294.195 4058425.605, -13197807...\n\n\n2\n06037134104\n287.0\n17.0\n816.0\n0.0\n61.0\n1323.0\nNaN\nNaN\nNaN\n...\n2010\n1388.0\n14.846188\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((-13200238.613 4057785.343, -13199752...\n\n\n3\n06037134304\n90.0\n24.0\n298.0\n0.0\n89.0\n520.0\nNaN\nNaN\nNaN\n...\n2010\n928.0\n33.378933\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((-13204130.008 4058317.097, -13203648...\n\n\n4\n06037242000\n0.0\n229.0\n681.0\n0.0\n0.0\n1164.0\nNaN\nNaN\nNaN\n...\n2010\n1054.0\n0.058565\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((-13163992.987 4020589.600, -13163989...\n\n\n\n\n5 rows × 194 columns\n\n\n\n\ngdf.explore(column='median_home_value', tooltip=['median_home_value', 'geoid',  'n_asian_under_15'  ])\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\n\n\n\ngdf = gpd.read_parquet('/home/jupyter-student/data/shared/scag_region.parquet')\n\n\ngdf = gdf.to_crs(3857)"
  },
  {
    "objectID": "week-04/0206_choropleths.html#contextily",
    "href": "week-04/0206_choropleths.html#contextily",
    "title": "Geovisualization with PySAL I",
    "section": "Contextily",
    "text": "Contextily\n\nf, ax = plt.subplots(1, figsize=(12, 8))\ngdf.plot(column='median_home_value', scheme='QUANTILES', alpha=0.6, ax=ax, legend=True)\ncx.add_basemap(ax, crs=gdf.crs.to_string(), source=cx.providers.CartoDB.Positron)\nax.set_axis_off()\nplt.show()\n\n\n\n\n\nf, ax = plt.subplots(1, figsize=(12, 8))\ngdf.plot(column='median_home_value', scheme='QUANTILES', ax=ax,\n        alpha=0.6, legend=True, cmap='Blues')\n\ncx.add_basemap(ax, crs=gdf.crs.to_string(), source=cx.providers.CartoDB.Positron)\n\nax.set_axis_off()\nplt.show()"
  },
  {
    "objectID": "week-03/h0201pandas2.html",
    "href": "week-03/h0201pandas2.html",
    "title": "Pandas Part II",
    "section": "",
    "text": "import requests\nfrom openpyxl import load_workbook\n\n\nurl = 'https://www.ers.usda.gov/webdocs/DataFiles/48747/PovertyEstimates.xlsx?v=9655.3'\noutput_file = 'PovertyEstimates.xlsx'  # Name of the local copy\n\n\nresponse = requests.get(url)\n\n\nif response.status_code == 200:\n    with open(output_file, 'wb') as file:\n        file.write(response.content)\n    print(f\"File '{output_file}' downloaded successfully.\")\n\n    # Optional: Check the content of the downloaded XLSX file\n    wb = load_workbook(output_file)\n    sheets = wb.sheetnames\n    print(f\"Excel file contains the following sheets: {sheets}\")\n    # You can now work with the Excel file as needed\n    \nelse:\n    print(f\"Failed to download the file. Status code: {response.status_code}\")\n\nFile 'PovertyEstimates.xlsx' downloaded successfully.\nExcel file contains the following sheets: ['PovertyEstimates', 'Variable Descriptions']\n\n\n\nimport pandas as pd\nfile_path = 'PovertyEstimates.xlsx'\nxls = pd.ExcelFile(file_path)\n\n\nxls.sheet_names\n\n['PovertyEstimates', 'Variable Descriptions']\n\n\n\nvar_df = pd.read_excel(file_path, 'Variable Descriptions')\n\n\nvar_df.head()\n\n\n\n\n\n\n\n\nColumn variable name\nDescription\n\n\n\n\n0\nFIPS_Code\nState-county Federal Information Processing St...\n\n\n1\nStabr\nState abbreviation\n\n\n2\nArea_name\nArea name\n\n\n3\nRural-urban_Continuum_Code_2003\nRural-Urban Continuum Code, 2003\n\n\n4\nUrban_Influence_Code_2003\nUrban Influence Code, 2003\n\n\n\n\n\n\n\n\nvar_df.shape\n\n(34, 2)\n\n\n\nvar_df\n\n\n\n\n\n\n\n\nColumn variable name\nDescription\n\n\n\n\n0\nFIPS_Code\nState-county Federal Information Processing St...\n\n\n1\nStabr\nState abbreviation\n\n\n2\nArea_name\nArea name\n\n\n3\nRural-urban_Continuum_Code_2003\nRural-Urban Continuum Code, 2003\n\n\n4\nUrban_Influence_Code_2003\nUrban Influence Code, 2003\n\n\n5\nRural-urban_Continuum_Code_2013\nRural-Urban Continuum Code, 2013\n\n\n6\nUrban_Influence_Code_ 2013\nUrban Influence Code, 2013\n\n\n7\nPOVALL_2021\nEstimate of people of all ages in poverty 2021\n\n\n8\nCI90LBALL_2021\n90 percent confidence interval lower bound of ...\n\n\n9\nCI90UBALL_2021\n90 percent confidence interval upper bound of ...\n\n\n10\nPCTPOVALL_2021\nEstimated percent of people of all ages in pov...\n\n\n11\nCI90LBALLP_2021\n90 percent confidence interval lower bound of ...\n\n\n12\nCI90UBALLP_2021\n90 percent confidence interval upper bound of ...\n\n\n13\nPOV017_2021\nEstimate of people age 0-17 in poverty 2021\n\n\n14\nCI90LB017_2021\n90 percent confidence interval lower bound of ...\n\n\n15\nCI90UB017_2021\n90 percent confidence interval upper bound of ...\n\n\n16\nPCTPOV017_2021\nEstimated percent of people age 0-17 in povert...\n\n\n17\nCI90LB017P_2021\n90 percent confidence interval lower bound of ...\n\n\n18\nCI90UB017P_2021\n90 percent confidence interval upper bound of ...\n\n\n19\nPOV517_2021\nEstimate of related children age 5-17 in famil...\n\n\n20\nCI90LB517_2021\n90 percent confidence interval lower bound of ...\n\n\n21\nCI90UB517_2021\n90 percent confidence interval upper bound of ...\n\n\n22\nPCTPOV517_2021\nEstimated percent of related children age 5-17...\n\n\n23\nCI90LB517P_2021\n90 percent confidence interval lower bound of ...\n\n\n24\nCI90UB517P_2021\n90 percent confidence interval upper bound of ...\n\n\n25\nMEDHHINC_2021\nEstimate of median household income 2021\n\n\n26\nCI90LBINC_2021\n90 percent confidence interval lower bound of ...\n\n\n27\nCI90UBINC_2021\n90 percent confidence interval upper bound of ...\n\n\n28\nPOV04_2021\nEstimate of children ages 0 to 4 in poverty 20...\n\n\n29\nCI90LB04_2021\n90 percent confidence interval lower bound of ...\n\n\n30\nCI90UB04_2021\n90 percent confidence interval upper bound of ...\n\n\n31\nPCTPOV04_2021\nEstimated percent of children ages 0 to 4 in p...\n\n\n32\nCI90LB04P_2021\n90 percent confidence interval lower bound of ...\n\n\n33\nCI90UB04P_2021\n90 percent confidence interval upper bound of ...\n\n\n\n\n\n\n\n\ndf = pd.read_excel(file_path, 'PovertyEstimates')\n\n\ndf.head()\n\n\n\n\n\n\n\n\nPoverty estimates for U.S., States, and counties, 2021\nUnnamed: 1\nUnnamed: 2\nUnnamed: 3\nUnnamed: 4\nUnnamed: 5\nUnnamed: 6\nUnnamed: 7\nUnnamed: 8\nUnnamed: 9\n...\nUnnamed: 24\nUnnamed: 25\nUnnamed: 26\nUnnamed: 27\nUnnamed: 28\nUnnamed: 29\nUnnamed: 30\nUnnamed: 31\nUnnamed: 32\nUnnamed: 33\n\n\n\n\n0\nSource: U.S. Department of Commerce, Bureau of...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1\nFor definitions of rural classifications, see ...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n2\nThis table was prepared by USDA, Economic Rese...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n3\nFIPS_Code\nStabr\nArea_name\nRural-urban_Continuum_Code_2003\nUrban_Influence_Code_2003\nRural-urban_Continuum_Code_2013\nUrban_Influence_Code_ 2013\nPOVALL_2021\nCI90LBALL_2021\nCI90UBALL_2021\n...\nCI90UB517P_2021\nMEDHHINC_2021\nCI90LBINC_2021\nCI90UBINC_2021\nPOV04_2021\nCI90LB04_2021\nCI90UB04_2021\nPCTPOV04_2021\nCI90LB04P_2021\nCI90UB04P_2021\n\n\n4\n00000\nUS\nUnited States\nNaN\nNaN\nNaN\nNaN\n41393176\n41149497\n41636855\n...\n16.3\n69717\n69583\n69851\n3349149\n3299669\n3398629\n18.3\n18\n18.6\n\n\n\n\n5 rows × 34 columns\n\n\n\n\ndf = pd.read_excel(file_path, 'PovertyEstimates', skiprows=4)\n\n\ndf.head()\n\n\n\n\n\n\n\n\nFIPS_Code\nStabr\nArea_name\nRural-urban_Continuum_Code_2003\nUrban_Influence_Code_2003\nRural-urban_Continuum_Code_2013\nUrban_Influence_Code_ 2013\nPOVALL_2021\nCI90LBALL_2021\nCI90UBALL_2021\n...\nCI90UB517P_2021\nMEDHHINC_2021\nCI90LBINC_2021\nCI90UBINC_2021\nPOV04_2021\nCI90LB04_2021\nCI90UB04_2021\nPCTPOV04_2021\nCI90LB04P_2021\nCI90UB04P_2021\n\n\n\n\n0\n0\nUS\nUnited States\nNaN\nNaN\nNaN\nNaN\n41393176.0\n41149497.0\n41636855.0\n...\n16.3\n69717.0\n69583.0\n69851.0\n3349149.0\n3299669.0\n3398629.0\n18.3\n18.0\n18.6\n\n\n1\n1000\nAL\nAlabama\nNaN\nNaN\nNaN\nNaN\n800848.0\n782169.0\n819527.0\n...\n22.5\n53990.0\n53218.0\n54762.0\n71220.0\n66888.0\n75552.0\n25.1\n23.6\n26.6\n\n\n2\n1001\nAL\nAutauga County\n2.0\n2.0\n2.0\n2.0\n6296.0\n4772.0\n7820.0\n...\n20.4\n66444.0\n60061.0\n72827.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n3\n1003\nAL\nBaldwin County\n4.0\n5.0\n3.0\n2.0\n25526.0\n21599.0\n29453.0\n...\n18.5\n65658.0\n60723.0\n70593.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n4\n1005\nAL\nBarbour County\n6.0\n6.0\n6.0\n6.0\n5089.0\n3773.0\n6405.0\n...\n44.6\n38649.0\n34308.0\n42990.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n5 rows × 34 columns\n\n\n\n\ndf.shape\n\n(3195, 34)\n\n\n\ndf.dtypes\n\nFIPS_Code                            int64\nStabr                               object\nArea_name                           object\nRural-urban_Continuum_Code_2003    float64\nUrban_Influence_Code_2003          float64\nRural-urban_Continuum_Code_2013    float64\nUrban_Influence_Code_ 2013         float64\nPOVALL_2021                        float64\nCI90LBALL_2021                     float64\nCI90UBALL_2021                     float64\nPCTPOVALL_2021                     float64\nCI90LBALLP_2021                    float64\nCI90UBALLP_2021                    float64\nPOV017_2021                        float64\nCI90LB017_2021                     float64\nCI90UB017_2021                     float64\nPCTPOV017_2021                     float64\nCI90LB017P_2021                    float64\nCI90UB017P_2021                    float64\nPOV517_2021                        float64\nCI90LB517_2021                     float64\nCI90UB517_2021                     float64\nPCTPOV517_2021                     float64\nCI90LB517P_2021                    float64\nCI90UB517P_2021                    float64\nMEDHHINC_2021                      float64\nCI90LBINC_2021                     float64\nCI90UBINC_2021                     float64\nPOV04_2021                         float64\nCI90LB04_2021                      float64\nCI90UB04_2021                      float64\nPCTPOV04_2021                      float64\nCI90LB04P_2021                     float64\nCI90UB04P_2021                     float64\ndtype: object\n\n\n\ndf['fips_str'] = df.FIPS_Code.astype(str).str.zfill(5)\n\n\ndf.fips_str\n\n0       00000\n1       01000\n2       01001\n3       01003\n4       01005\n        ...  \n3190    56037\n3191    56039\n3192    56041\n3193    56043\n3194    56045\nName: fips_str, Length: 3195, dtype: object\n\n\n\ndf[['FIPS_Code', 'fips_str']]\n\n\n\n\n\n\n\n\nFIPS_Code\nfips_str\n\n\n\n\n0\n0\n00000\n\n\n1\n1000\n01000\n\n\n2\n1001\n01001\n\n\n3\n1003\n01003\n\n\n4\n1005\n01005\n\n\n...\n...\n...\n\n\n3190\n56037\n56037\n\n\n3191\n56039\n56039\n\n\n3192\n56041\n56041\n\n\n3193\n56043\n56043\n\n\n3194\n56045\n56045\n\n\n\n\n3195 rows × 2 columns\n\n\n\n\ndf.head()\n\n\n\n\n\n\n\n\nFIPS_Code\nStabr\nArea_name\nRural-urban_Continuum_Code_2003\nUrban_Influence_Code_2003\nRural-urban_Continuum_Code_2013\nUrban_Influence_Code_ 2013\nPOVALL_2021\nCI90LBALL_2021\nCI90UBALL_2021\n...\nMEDHHINC_2021\nCI90LBINC_2021\nCI90UBINC_2021\nPOV04_2021\nCI90LB04_2021\nCI90UB04_2021\nPCTPOV04_2021\nCI90LB04P_2021\nCI90UB04P_2021\nfips_str\n\n\n\n\n0\n0\nUS\nUnited States\nNaN\nNaN\nNaN\nNaN\n41393176.0\n41149497.0\n41636855.0\n...\n69717.0\n69583.0\n69851.0\n3349149.0\n3299669.0\n3398629.0\n18.3\n18.0\n18.6\n00000\n\n\n1\n1000\nAL\nAlabama\nNaN\nNaN\nNaN\nNaN\n800848.0\n782169.0\n819527.0\n...\n53990.0\n53218.0\n54762.0\n71220.0\n66888.0\n75552.0\n25.1\n23.6\n26.6\n01000\n\n\n2\n1001\nAL\nAutauga County\n2.0\n2.0\n2.0\n2.0\n6296.0\n4772.0\n7820.0\n...\n66444.0\n60061.0\n72827.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01001\n\n\n3\n1003\nAL\nBaldwin County\n4.0\n5.0\n3.0\n2.0\n25526.0\n21599.0\n29453.0\n...\n65658.0\n60723.0\n70593.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01003\n\n\n4\n1005\nAL\nBarbour County\n6.0\n6.0\n6.0\n6.0\n5089.0\n3773.0\n6405.0\n...\n38649.0\n34308.0\n42990.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01005\n\n\n\n\n5 rows × 35 columns\n\n\n\n\ndf[df.Stabr=='AL']\n\n\n\n\n\n\n\n\nFIPS_Code\nStabr\nArea_name\nRural-urban_Continuum_Code_2003\nUrban_Influence_Code_2003\nRural-urban_Continuum_Code_2013\nUrban_Influence_Code_ 2013\nPOVALL_2021\nCI90LBALL_2021\nCI90UBALL_2021\n...\nMEDHHINC_2021\nCI90LBINC_2021\nCI90UBINC_2021\nPOV04_2021\nCI90LB04_2021\nCI90UB04_2021\nPCTPOV04_2021\nCI90LB04P_2021\nCI90UB04P_2021\nfips_str\n\n\n\n\n1\n1000\nAL\nAlabama\nNaN\nNaN\nNaN\nNaN\n800848.0\n782169.0\n819527.0\n...\n53990.0\n53218.0\n54762.0\n71220.0\n66888.0\n75552.0\n25.1\n23.6\n26.6\n01000\n\n\n2\n1001\nAL\nAutauga County\n2.0\n2.0\n2.0\n2.0\n6296.0\n4772.0\n7820.0\n...\n66444.0\n60061.0\n72827.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01001\n\n\n3\n1003\nAL\nBaldwin County\n4.0\n5.0\n3.0\n2.0\n25526.0\n21599.0\n29453.0\n...\n65658.0\n60723.0\n70593.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01003\n\n\n4\n1005\nAL\nBarbour County\n6.0\n6.0\n6.0\n6.0\n5089.0\n3773.0\n6405.0\n...\n38649.0\n34308.0\n42990.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01005\n\n\n5\n1007\nAL\nBibb County\n1.0\n1.0\n1.0\n1.0\n4204.0\n3324.0\n5084.0\n...\n48454.0\n42438.0\n54470.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01007\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n64\n1125\nAL\nTuscaloosa County\n3.0\n2.0\n3.0\n2.0\n31735.0\n26867.0\n36603.0\n...\n56274.0\n52677.0\n59871.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01125\n\n\n65\n1127\nAL\nWalker County\n1.0\n1.0\n1.0\n1.0\n12877.0\n10967.0\n14787.0\n...\n46343.0\n41443.0\n51243.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01127\n\n\n66\n1129\nAL\nWashington County\n8.0\n7.0\n8.0\n7.0\n3091.0\n2505.0\n3677.0\n...\n49795.0\n43655.0\n55935.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01129\n\n\n67\n1131\nAL\nWilcox County\n8.0\n7.0\n9.0\n10.0\n3340.0\n2578.0\n4102.0\n...\n30071.0\n26647.0\n33495.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01131\n\n\n68\n1133\nAL\nWinston County\n6.0\n4.0\n6.0\n4.0\n4455.0\n3624.0\n5286.0\n...\n47176.0\n41809.0\n52543.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01133\n\n\n\n\n68 rows × 35 columns\n\n\n\n\ndf[df.Stabr=='CA']\n\n\n\n\n\n\n\n\nFIPS_Code\nStabr\nArea_name\nRural-urban_Continuum_Code_2003\nUrban_Influence_Code_2003\nRural-urban_Continuum_Code_2013\nUrban_Influence_Code_ 2013\nPOVALL_2021\nCI90LBALL_2021\nCI90UBALL_2021\n...\nMEDHHINC_2021\nCI90LBINC_2021\nCI90UBINC_2021\nPOV04_2021\nCI90LB04_2021\nCI90UB04_2021\nPCTPOV04_2021\nCI90LB04P_2021\nCI90UB04P_2021\nfips_str\n\n\n\n\n192\n6000\nCA\nCalifornia\nNaN\nNaN\nNaN\nNaN\n4742405.0\n4689999.0\n4794811.0\n...\n84831.0\n84292.0\n85370.0\n339169.0\n326796.0\n351542.0\n15.8\n15.2\n16.4\n06000\n\n\n193\n6001\nCA\nAlameda County\n1.0\n1.0\n1.0\n1.0\n152654.0\n140318.0\n164990.0\n...\n108971.0\n106170.0\n111772.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06001\n\n\n194\n6003\nCA\nAlpine County\n8.0\n4.0\n8.0\n4.0\n194.0\n148.0\n240.0\n...\n87570.0\n80899.0\n94241.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06003\n\n\n195\n6005\nCA\nAmador County\n6.0\n4.0\n6.0\n4.0\n4104.0\n3139.0\n5069.0\n...\n68159.0\n61507.0\n74811.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06005\n\n\n196\n6007\nCA\nButte County\n3.0\n2.0\n3.0\n2.0\n33874.0\n30026.0\n37722.0\n...\n62982.0\n60248.0\n65716.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06007\n\n\n197\n6009\nCA\nCalaveras County\n6.0\n6.0\n6.0\n6.0\n6198.0\n5078.0\n7318.0\n...\n68298.0\n61082.0\n75514.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06009\n\n\n198\n6011\nCA\nColusa County\n6.0\n4.0\n6.0\n4.0\n2466.0\n1901.0\n3031.0\n...\n60725.0\n53787.0\n67663.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06011\n\n\n199\n6013\nCA\nContra Costa County\n1.0\n1.0\n1.0\n1.0\n100948.0\n92022.0\n109874.0\n...\n110595.0\n107542.0\n113648.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06013\n\n\n200\n6015\nCA\nDel Norte County\n7.0\n8.0\n7.0\n8.0\n5368.0\n4316.0\n6420.0\n...\n48108.0\n42824.0\n53392.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06015\n\n\n201\n6017\nCA\nEl Dorado County\n1.0\n1.0\n1.0\n1.0\n16839.0\n14045.0\n19633.0\n...\n87689.0\n80889.0\n94489.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06017\n\n\n202\n6019\nCA\nFresno County\n2.0\n2.0\n2.0\n2.0\n193449.0\n179983.0\n206915.0\n...\n63140.0\n61332.0\n64948.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06019\n\n\n203\n6021\nCA\nGlenn County\n6.0\n6.0\n6.0\n6.0\n4397.0\n3560.0\n5234.0\n...\n56741.0\n50379.0\n63103.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06021\n\n\n204\n6023\nCA\nHumboldt County\n5.0\n8.0\n5.0\n8.0\n25781.0\n22760.0\n28802.0\n...\n53924.0\n49868.0\n57980.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06023\n\n\n205\n6025\nCA\nImperial County\n3.0\n2.0\n3.0\n2.0\n29738.0\n24540.0\n34936.0\n...\n50970.0\n48099.0\n53841.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06025\n\n\n206\n6027\nCA\nInyo County\n7.0\n8.0\n7.0\n11.0\n2382.0\n1903.0\n2861.0\n...\n62381.0\n55355.0\n69407.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06027\n\n\n207\n6029\nCA\nKern County\n2.0\n2.0\n2.0\n2.0\n164169.0\n149799.0\n178539.0\n...\n57926.0\n54723.0\n61129.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06029\n\n\n208\n6031\nCA\nKings County\n3.0\n2.0\n3.0\n2.0\n24295.0\n20420.0\n28170.0\n...\n60810.0\n57040.0\n64580.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06031\n\n\n209\n6033\nCA\nLake County\n4.0\n5.0\n4.0\n5.0\n11196.0\n8683.0\n13709.0\n...\n55801.0\n51767.0\n59835.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06033\n\n\n210\n6035\nCA\nLassen County\n6.0\n6.0\n7.0\n8.0\n4805.0\n3867.0\n5743.0\n...\n56923.0\n51387.0\n62459.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06035\n\n\n211\n6037\nCA\nLos Angeles County\n1.0\n1.0\n1.0\n1.0\n1365808.0\n1324191.0\n1407425.0\n...\n77356.0\n76664.0\n78048.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06037\n\n\n212\n6039\nCA\nMadera County\n3.0\n2.0\n3.0\n2.0\n31044.0\n27214.0\n34874.0\n...\n60241.0\n54963.0\n65519.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06039\n\n\n213\n6041\nCA\nMarin County\n1.0\n1.0\n1.0\n1.0\n19734.0\n16455.0\n23013.0\n...\n118472.0\n110912.0\n126032.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06041\n\n\n214\n6043\nCA\nMariposa County\n8.0\n7.0\n8.0\n7.0\n2387.0\n1808.0\n2966.0\n...\n60377.0\n54124.0\n66630.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06043\n\n\n215\n6045\nCA\nMendocino County\n4.0\n5.0\n4.0\n5.0\n14539.0\n11887.0\n17191.0\n...\n57516.0\n51658.0\n63374.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06045\n\n\n216\n6047\nCA\nMerced County\n3.0\n2.0\n2.0\n2.0\n61359.0\n55535.0\n67183.0\n...\n54703.0\n51436.0\n57970.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06047\n\n\n217\n6049\nCA\nModoc County\n6.0\n6.0\n6.0\n6.0\n1688.0\n1307.0\n2069.0\n...\n49273.0\n44364.0\n54182.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06049\n\n\n218\n6051\nCA\nMono County\n7.0\n9.0\n7.0\n11.0\n1278.0\n973.0\n1583.0\n...\n70945.0\n62471.0\n79419.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06051\n\n\n219\n6053\nCA\nMonterey County\n2.0\n2.0\n2.0\n2.0\n50725.0\n43455.0\n57995.0\n...\n81404.0\n79343.0\n83465.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06053\n\n\n220\n6055\nCA\nNapa County\n3.0\n2.0\n3.0\n2.0\n11814.0\n9909.0\n13719.0\n...\n94127.0\n88895.0\n99359.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06055\n\n\n221\n6057\nCA\nNevada County\n4.0\n3.0\n4.0\n3.0\n12141.0\n10287.0\n13995.0\n...\n77220.0\n70966.0\n83474.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06057\n\n\n222\n6059\nCA\nOrange County\n1.0\n1.0\n1.0\n1.0\n309402.0\n290860.0\n327944.0\n...\n100210.0\n98704.0\n101716.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06059\n\n\n223\n6061\nCA\nPlacer County\n1.0\n1.0\n1.0\n1.0\n26816.0\n23108.0\n30524.0\n...\n103588.0\n100310.0\n106866.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06061\n\n\n224\n6063\nCA\nPlumas County\n7.0\n12.0\n7.0\n12.0\n2545.0\n1946.0\n3144.0\n...\n58154.0\n52309.0\n63999.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06063\n\n\n225\n6065\nCA\nRiverside County\n1.0\n1.0\n1.0\n1.0\n282068.0\n261203.0\n302933.0\n...\n78690.0\n77268.0\n80112.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06065\n\n\n226\n6067\nCA\nSacramento County\n1.0\n1.0\n1.0\n1.0\n203413.0\n188841.0\n217985.0\n...\n79611.0\n77617.0\n81605.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06067\n\n\n227\n6069\nCA\nSan Benito County\n1.0\n1.0\n1.0\n1.0\n5899.0\n4633.0\n7165.0\n...\n95187.0\n87067.0\n103307.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06069\n\n\n228\n6071\nCA\nSan Bernardino County\n1.0\n1.0\n1.0\n1.0\n285474.0\n263941.0\n307007.0\n...\n74218.0\n72378.0\n76058.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06071\n\n\n229\n6073\nCA\nSan Diego County\n1.0\n1.0\n1.0\n1.0\n340522.0\n320076.0\n360968.0\n...\n90756.0\n89622.0\n91890.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06073\n\n\n230\n6075\nCA\nSan Francisco County\n1.0\n1.0\n1.0\n1.0\n90898.0\n83583.0\n98213.0\n...\n119776.0\n115563.0\n123989.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06075\n\n\n231\n6077\nCA\nSan Joaquin County\n2.0\n2.0\n2.0\n2.0\n95382.0\n83774.0\n106990.0\n...\n79598.0\n77211.0\n81985.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06077\n\n\n232\n6079\nCA\nSan Luis Obispo County\n3.0\n2.0\n2.0\n2.0\n35120.0\n31122.0\n39118.0\n...\n79688.0\n75932.0\n83444.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06079\n\n\n233\n6081\nCA\nSan Mateo County\n1.0\n1.0\n1.0\n1.0\n49900.0\n43747.0\n56053.0\n...\n131151.0\n127714.0\n134588.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06081\n\n\n234\n6083\nCA\nSanta Barbara County\n2.0\n2.0\n2.0\n2.0\n65029.0\n59277.0\n70781.0\n...\n83185.0\n79921.0\n86449.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06083\n\n\n235\n6085\nCA\nSanta Clara County\n1.0\n1.0\n1.0\n1.0\n128955.0\n117767.0\n140143.0\n...\n141161.0\n138832.0\n143490.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06085\n\n\n236\n6087\nCA\nSanta Cruz County\n2.0\n2.0\n2.0\n2.0\n27132.0\n22485.0\n31779.0\n...\n90370.0\n84679.0\n96061.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06087\n\n\n237\n6089\nCA\nShasta County\n3.0\n2.0\n3.0\n2.0\n25141.0\n21256.0\n29026.0\n...\n60187.0\n56764.0\n63610.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06089\n\n\n238\n6091\nCA\nSierra County\n8.0\n7.0\n8.0\n7.0\n398.0\n300.0\n496.0\n...\n60659.0\n53239.0\n68079.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06091\n\n\n239\n6093\nCA\nSiskiyou County\n7.0\n11.0\n6.0\n6.0\n7301.0\n6005.0\n8597.0\n...\n50069.0\n45178.0\n54960.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06093\n\n\n240\n6095\nCA\nSolano County\n2.0\n2.0\n2.0\n2.0\n44037.0\n37963.0\n50111.0\n...\n87348.0\n84016.0\n90680.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06095\n\n\n241\n6097\nCA\nSonoma County\n2.0\n2.0\n2.0\n2.0\n43661.0\n38372.0\n48950.0\n...\n92999.0\n89380.0\n96618.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06097\n\n\n242\n6099\nCA\nStanislaus County\n2.0\n2.0\n2.0\n2.0\n76921.0\n67090.0\n86752.0\n...\n73151.0\n70938.0\n75364.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06099\n\n\n243\n6101\nCA\nSutter County\n3.0\n2.0\n3.0\n2.0\n15224.0\n12930.0\n17518.0\n...\n63246.0\n58462.0\n68030.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06101\n\n\n244\n6103\nCA\nTehama County\n4.0\n5.0\n4.0\n5.0\n10107.0\n8151.0\n12063.0\n...\n53654.0\n47435.0\n59873.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06103\n\n\n245\n6105\nCA\nTrinity County\n8.0\n6.0\n8.0\n6.0\n3010.0\n2307.0\n3713.0\n...\n45508.0\n39960.0\n51056.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06105\n\n\n246\n6107\nCA\nTulare County\n2.0\n2.0\n2.0\n2.0\n88367.0\n78219.0\n98515.0\n...\n57398.0\n54157.0\n60639.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06107\n\n\n247\n6109\nCA\nTuolumne County\n4.0\n5.0\n4.0\n5.0\n6848.0\n5388.0\n8308.0\n...\n61396.0\n54884.0\n67908.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06109\n\n\n248\n6111\nCA\nVentura County\n2.0\n2.0\n2.0\n2.0\n73968.0\n66079.0\n81857.0\n...\n95819.0\n93275.0\n98363.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06111\n\n\n249\n6113\nCA\nYolo County\n1.0\n1.0\n1.0\n1.0\n30708.0\n27369.0\n34047.0\n...\n76247.0\n71083.0\n81411.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06113\n\n\n250\n6115\nCA\nYuba County\n3.0\n2.0\n3.0\n2.0\n12784.0\n10305.0\n15263.0\n...\n60764.0\n56731.0\n64797.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06115\n\n\n\n\n59 rows × 35 columns\n\n\n\n\nstates = df[df.fips_str.str.endswith('000')]\n\n\nstates\n\n\n\n\n\n\n\n\nFIPS_Code\nStabr\nArea_name\nRural-urban_Continuum_Code_2003\nUrban_Influence_Code_2003\nRural-urban_Continuum_Code_2013\nUrban_Influence_Code_ 2013\nPOVALL_2021\nCI90LBALL_2021\nCI90UBALL_2021\n...\nMEDHHINC_2021\nCI90LBINC_2021\nCI90UBINC_2021\nPOV04_2021\nCI90LB04_2021\nCI90UB04_2021\nPCTPOV04_2021\nCI90LB04P_2021\nCI90UB04P_2021\nfips_str\n\n\n\n\n0\n0\nUS\nUnited States\nNaN\nNaN\nNaN\nNaN\n41393176.0\n41149497.0\n41636855.0\n...\n69717.0\n69583.0\n69851.0\n3349149.0\n3299669.0\n3398629.0\n18.3\n18.0\n18.6\n00000\n\n\n1\n1000\nAL\nAlabama\nNaN\nNaN\nNaN\nNaN\n800848.0\n782169.0\n819527.0\n...\n53990.0\n53218.0\n54762.0\n71220.0\n66888.0\n75552.0\n25.1\n23.6\n26.6\n01000\n\n\n69\n2000\nAK\nAlaska\nNaN\nNaN\nNaN\nNaN\n77736.0\n74178.0\n81294.0\n...\n78437.0\n76456.0\n80418.0\n6633.0\n5796.0\n7470.0\n14.1\n12.3\n15.9\n02000\n\n\n100\n4000\nAZ\nArizona\nNaN\nNaN\nNaN\nNaN\n919680.0\n900349.0\n939011.0\n...\n68967.0\n68287.0\n69647.0\n76649.0\n71494.0\n81804.0\n19.7\n18.4\n21.0\n04000\n\n\n116\n5000\nAR\nArkansas\nNaN\nNaN\nNaN\nNaN\n471195.0\n458260.0\n484130.0\n...\n52577.0\n51595.0\n53559.0\n45096.0\n42186.0\n48006.0\n25.5\n23.9\n27.1\n05000\n\n\n192\n6000\nCA\nCalifornia\nNaN\nNaN\nNaN\nNaN\n4742405.0\n4689999.0\n4794811.0\n...\n84831.0\n84292.0\n85370.0\n339169.0\n326796.0\n351542.0\n15.8\n15.2\n16.4\n06000\n\n\n251\n8000\nCO\nColorado\nNaN\nNaN\nNaN\nNaN\n554126.0\n540035.0\n568217.0\n...\n82228.0\n81447.0\n83009.0\n39308.0\n35584.0\n43032.0\n12.8\n11.6\n14.0\n08000\n\n\n316\n9000\nCT\nConnecticut\nNaN\nNaN\nNaN\nNaN\n355861.0\n344138.0\n367584.0\n...\n83628.0\n82542.0\n84714.0\n24150.0\n21569.0\n26731.0\n13.9\n12.4\n15.4\n09000\n\n\n325\n10000\nDE\nDelaware\nNaN\nNaN\nNaN\nNaN\n113026.0\n107766.0\n118286.0\n...\n71636.0\n69940.0\n73332.0\n9694.0\n8679.0\n10709.0\n18.6\n16.6\n20.6\n10000\n\n\n329\n11000\nDC\nDistrict of Columbia\nNaN\nNaN\nNaN\nNaN\n107307.0\n101426.0\n113188.0\n...\n91072.0\n88170.0\n93974.0\n9444.0\n8334.0\n10554.0\n24.3\n21.4\n27.2\n11000\n\n\n331\n12000\nFL\nFlorida\nNaN\nNaN\nNaN\nNaN\n2830813.0\n2790138.0\n2871488.0\n...\n63054.0\n62631.0\n63477.0\n212346.0\n200017.0\n224675.0\n19.8\n18.7\n20.9\n12000\n\n\n399\n13000\nGA\nGeorgia\nNaN\nNaN\nNaN\nNaN\n1493837.0\n1463589.0\n1524085.0\n...\n66507.0\n65802.0\n67212.0\n135538.0\n128008.0\n143068.0\n22.0\n20.8\n23.2\n13000\n\n\n559\n15000\nHI\nHawaii\nNaN\nNaN\nNaN\nNaN\n152656.0\n146272.0\n159040.0\n...\n85547.0\n83548.0\n87546.0\n10150.0\n8658.0\n11642.0\n12.9\n11.0\n14.8\n15000\n\n\n565\n16000\nID\nIdaho\nNaN\nNaN\nNaN\nNaN\n202091.0\n193474.0\n210708.0\n...\n66318.0\n64668.0\n67968.0\n17074.0\n15118.0\n19030.0\n15.4\n13.6\n17.2\n16000\n\n\n610\n17000\nIL\nIllinois\nNaN\nNaN\nNaN\nNaN\n1493042.0\n1465135.0\n1520949.0\n...\n72215.0\n71645.0\n72785.0\n120015.0\n114563.0\n125467.0\n17.5\n16.7\n18.3\n17000\n\n\n713\n18000\nIN\nIndiana\nNaN\nNaN\nNaN\nNaN\n799733.0\n782428.0\n817038.0\n...\n62723.0\n62015.0\n63431.0\n69805.0\n64751.0\n74859.0\n17.7\n16.4\n19.0\n18000\n\n\n806\n19000\nIA\nIowa\nNaN\nNaN\nNaN\nNaN\n340626.0\n329373.0\n351879.0\n...\n65645.0\n64876.0\n66414.0\n24541.0\n22373.0\n26709.0\n13.3\n12.1\n14.5\n19000\n\n\n906\n20000\nKS\nKansas\nNaN\nNaN\nNaN\nNaN\n332457.0\n322234.0\n342680.0\n...\n64128.0\n63194.0\n65062.0\n27811.0\n25370.0\n30252.0\n16.0\n14.6\n17.4\n20000\n\n\n1012\n21000\nKY\nKentucky\nNaN\nNaN\nNaN\nNaN\n712023.0\n697813.0\n726233.0\n...\n55532.0\n54838.0\n56226.0\n60772.0\n57134.0\n64410.0\n23.6\n22.2\n25.0\n21000\n\n\n1133\n22000\nLA\nLouisiana\nNaN\nNaN\nNaN\nNaN\n878477.0\n859106.0\n897848.0\n...\n52090.0\n51348.0\n52832.0\n80375.0\n76164.0\n84586.0\n28.8\n27.3\n30.3\n22000\n\n\n1198\n23000\nME\nMaine\nNaN\nNaN\nNaN\nNaN\n149571.0\n143213.0\n155929.0\n...\n64823.0\n63604.0\n66042.0\n8895.0\n7789.0\n10001.0\n14.7\n12.9\n16.5\n23000\n\n\n1215\n24000\nMD\nMaryland\nNaN\nNaN\nNaN\nNaN\n620829.0\n603853.0\n637805.0\n...\n90129.0\n89087.0\n91171.0\n51970.0\n47916.0\n56024.0\n15.0\n13.8\n16.2\n24000\n\n\n1240\n25000\nMA\nMassachusetts\nNaN\nNaN\nNaN\nNaN\n701700.0\n685529.0\n717871.0\n...\n89577.0\n88330.0\n90824.0\n44332.0\n40364.0\n48300.0\n13.1\n11.9\n14.3\n25000\n\n\n1255\n26000\nMI\nMichigan\nNaN\nNaN\nNaN\nNaN\n1283086.0\n1261685.0\n1304487.0\n...\n63444.0\n62920.0\n63968.0\n104555.0\n98778.0\n110332.0\n19.5\n18.4\n20.6\n26000\n\n\n1339\n27000\nMN\nMinnesota\nNaN\nNaN\nNaN\nNaN\n519437.0\n507482.0\n531392.0\n...\n77712.0\n76812.0\n78612.0\n36651.0\n33066.0\n40236.0\n11.1\n10.0\n12.2\n27000\n\n\n1427\n28000\nMS\nMississippi\nNaN\nNaN\nNaN\nNaN\n549710.0\n536691.0\n562729.0\n...\n48871.0\n47663.0\n50079.0\n51862.0\n48648.0\n55076.0\n30.3\n28.4\n32.2\n28000\n\n\n1510\n29000\nMO\nMissouri\nNaN\nNaN\nNaN\nNaN\n765097.0\n748927.0\n781267.0\n...\n61815.0\n61152.0\n62478.0\n63067.0\n58984.0\n67150.0\n18.1\n16.9\n19.3\n29000\n\n\n1626\n30000\nMT\nMontana\nNaN\nNaN\nNaN\nNaN\n129910.0\n124852.0\n134968.0\n...\n63357.0\n61990.0\n64724.0\n9726.0\n8698.0\n10754.0\n17.2\n15.4\n19.0\n30000\n\n\n1683\n31000\nNE\nNebraska\nNaN\nNaN\nNaN\nNaN\n201627.0\n194607.0\n208647.0\n...\n66949.0\n65911.0\n67987.0\n16432.0\n14419.0\n18445.0\n13.4\n11.8\n15.0\n31000\n\n\n1777\n32000\nNV\nNevada\nNaN\nNaN\nNaN\nNaN\n433095.0\n420882.0\n445308.0\n...\n66194.0\n65202.0\n67186.0\n36365.0\n33278.0\n39452.0\n21.0\n19.2\n22.8\n32000\n\n\n1795\n33000\nNH\nNew Hampshire\nNaN\nNaN\nNaN\nNaN\n99562.0\n94623.0\n104501.0\n...\n88268.0\n86293.0\n90243.0\n5622.0\n4665.0\n6579.0\n9.4\n7.8\n11.0\n33000\n\n\n1806\n34000\nNJ\nNew Jersey\nNaN\nNaN\nNaN\nNaN\n925852.0\n905573.0\n946131.0\n...\n89227.0\n88164.0\n90290.0\n76282.0\n70767.0\n81797.0\n15.0\n13.9\n16.1\n34000\n\n\n1828\n35000\nNM\nNew Mexico\nNaN\nNaN\nNaN\nNaN\n367050.0\n354401.0\n379699.0\n...\n54304.0\n52878.0\n55730.0\n28231.0\n25602.0\n30860.0\n25.1\n22.8\n27.4\n35000\n\n\n1862\n36000\nNY\nNew York\nNaN\nNaN\nNaN\nNaN\n2703053.0\n2668539.0\n2737567.0\n...\n74230.0\n73620.0\n74840.0\n207920.0\n197263.0\n218577.0\n19.5\n18.5\n20.5\n36000\n\n\n1925\n37000\nNC\nNorth Carolina\nNaN\nNaN\nNaN\nNaN\n1383626.0\n1357735.0\n1409517.0\n...\n61997.0\n61459.0\n62535.0\n116355.0\n109438.0\n123272.0\n20.2\n19.0\n21.4\n37000\n\n\n2026\n38000\nND\nNorth Dakota\nNaN\nNaN\nNaN\nNaN\n82270.0\n78002.0\n86538.0\n...\n67603.0\n65854.0\n69352.0\n6455.0\n5510.0\n7400.0\n12.9\n11.0\n14.8\n38000\n\n\n2080\n39000\nOH\nOhio\nNaN\nNaN\nNaN\nNaN\n1523366.0\n1498525.0\n1548207.0\n...\n62286.0\n61832.0\n62740.0\n135658.0\n129038.0\n142278.0\n20.7\n19.7\n21.7\n39000\n\n\n2169\n40000\nOK\nOklahoma\nNaN\nNaN\nNaN\nNaN\n599003.0\n587366.0\n610640.0\n...\n55829.0\n55210.0\n56448.0\n56598.0\n53190.0\n60006.0\n23.6\n22.2\n25.0\n40000\n\n\n2247\n41000\nOR\nOregon\nNaN\nNaN\nNaN\nNaN\n507504.0\n493784.0\n521224.0\n...\n71441.0\n70406.0\n72476.0\n29637.0\n26737.0\n32537.0\n14.6\n13.2\n16.0\n41000\n\n\n2284\n42000\nPA\nPennsylvania\nNaN\nNaN\nNaN\nNaN\n1503929.0\n1480307.0\n1527551.0\n...\n68931.0\n68429.0\n69433.0\n116290.0\n109264.0\n123316.0\n17.5\n16.4\n18.6\n42000\n\n\n2352\n44000\nRI\nRhode Island\nNaN\nNaN\nNaN\nNaN\n126971.0\n121343.0\n132599.0\n...\n73324.0\n71173.0\n75475.0\n9556.0\n8437.0\n10675.0\n18.6\n16.4\n20.8\n44000\n\n\n2358\n45000\nSC\nSouth Carolina\nNaN\nNaN\nNaN\nNaN\n736098.0\n719691.0\n752505.0\n...\n59447.0\n58606.0\n60288.0\n59011.0\n55007.0\n63015.0\n21.5\n20.0\n23.0\n45000\n\n\n2405\n46000\nSD\nSouth Dakota\nNaN\nNaN\nNaN\nNaN\n103337.0\n99076.0\n107598.0\n...\n66843.0\n64779.0\n68907.0\n9423.0\n8334.0\n10512.0\n16.5\n14.6\n18.4\n46000\n\n\n2472\n47000\nTN\nTennessee\nNaN\nNaN\nNaN\nNaN\n934856.0\n915693.0\n954019.0\n...\n59698.0\n58920.0\n60476.0\n75501.0\n70440.0\n80562.0\n19.3\n18.0\n20.6\n47000\n\n\n2568\n48000\nTX\nTexas\nNaN\nNaN\nNaN\nNaN\n4122799.0\n4067445.0\n4178153.0\n...\n66959.0\n66448.0\n67470.0\n393888.0\n378420.0\n409356.0\n21.2\n20.4\n22.0\n48000\n\n\n2823\n49000\nUT\nUtah\nNaN\nNaN\nNaN\nNaN\n286086.0\n273709.0\n298463.0\n...\n79449.0\n78242.0\n80656.0\n22873.0\n20451.0\n25295.0\n9.8\n8.8\n10.8\n49000\n\n\n2853\n50000\nVT\nVermont\nNaN\nNaN\nNaN\nNaN\n63208.0\n59860.0\n66556.0\n...\n72415.0\n70396.0\n74434.0\n3196.0\n2682.0\n3710.0\n11.6\n9.7\n13.5\n50000\n\n\n2868\n51000\nVA\nVirginia\nNaN\nNaN\nNaN\nNaN\n862792.0\n843622.0\n881962.0\n...\n80926.0\n80203.0\n81649.0\n69303.0\n64164.0\n74442.0\n14.4\n13.3\n15.5\n51000\n\n\n3002\n53000\nWA\nWashington\nNaN\nNaN\nNaN\nNaN\n755589.0\n738622.0\n772556.0\n...\n84155.0\n83322.0\n84988.0\n53637.0\n48940.0\n58334.0\n12.7\n11.6\n13.8\n53000\n\n\n3042\n54000\nWV\nWest Virginia\nNaN\nNaN\nNaN\nNaN\n291051.0\n282054.0\n300048.0\n...\n51122.0\n50059.0\n52185.0\n21090.0\n19436.0\n22744.0\n24.7\n22.8\n26.6\n54000\n\n\n3098\n55000\nWI\nWisconsin\nNaN\nNaN\nNaN\nNaN\n622948.0\n610655.0\n635241.0\n...\n67150.0\n66549.0\n67751.0\n44523.0\n41734.0\n47312.0\n14.3\n13.4\n15.2\n55000\n\n\n3171\n56000\nWY\nWyoming\nNaN\nNaN\nNaN\nNaN\n60226.0\n56527.0\n63925.0\n...\n66508.0\n64077.0\n68939.0\n4455.0\n3781.0\n5129.0\n14.2\n12.0\n16.4\n56000\n\n\n\n\n52 rows × 35 columns\n\n\n\n\ncounties = df[~df.fips_str.str.endswith('000')]\n\n\ncounties.head()\n\n\n\n\n\n\n\n\nFIPS_Code\nStabr\nArea_name\nRural-urban_Continuum_Code_2003\nUrban_Influence_Code_2003\nRural-urban_Continuum_Code_2013\nUrban_Influence_Code_ 2013\nPOVALL_2021\nCI90LBALL_2021\nCI90UBALL_2021\n...\nMEDHHINC_2021\nCI90LBINC_2021\nCI90UBINC_2021\nPOV04_2021\nCI90LB04_2021\nCI90UB04_2021\nPCTPOV04_2021\nCI90LB04P_2021\nCI90UB04P_2021\nfips_str\n\n\n\n\n2\n1001\nAL\nAutauga County\n2.0\n2.0\n2.0\n2.0\n6296.0\n4772.0\n7820.0\n...\n66444.0\n60061.0\n72827.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01001\n\n\n3\n1003\nAL\nBaldwin County\n4.0\n5.0\n3.0\n2.0\n25526.0\n21599.0\n29453.0\n...\n65658.0\n60723.0\n70593.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01003\n\n\n4\n1005\nAL\nBarbour County\n6.0\n6.0\n6.0\n6.0\n5089.0\n3773.0\n6405.0\n...\n38649.0\n34308.0\n42990.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01005\n\n\n5\n1007\nAL\nBibb County\n1.0\n1.0\n1.0\n1.0\n4204.0\n3324.0\n5084.0\n...\n48454.0\n42438.0\n54470.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01007\n\n\n6\n1009\nAL\nBlount County\n1.0\n1.0\n1.0\n1.0\n6992.0\n5516.0\n8468.0\n...\n56894.0\n52632.0\n61156.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01009\n\n\n\n\n5 rows × 35 columns\n\n\n\n\ncounties.shape\n\n(3143, 35)\n\n\n\ncounties.groupby(by='Stabr').count()\n\n\n\n\n\n\n\n\nFIPS_Code\nArea_name\nRural-urban_Continuum_Code_2003\nUrban_Influence_Code_2003\nRural-urban_Continuum_Code_2013\nUrban_Influence_Code_ 2013\nPOVALL_2021\nCI90LBALL_2021\nCI90UBALL_2021\nPCTPOVALL_2021\n...\nMEDHHINC_2021\nCI90LBINC_2021\nCI90UBINC_2021\nPOV04_2021\nCI90LB04_2021\nCI90UB04_2021\nPCTPOV04_2021\nCI90LB04P_2021\nCI90UB04P_2021\nfips_str\n\n\nStabr\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAK\n30\n30\n23\n23\n28\n28\n30\n30\n30\n30\n...\n30\n30\n30\n0\n0\n0\n0\n0\n0\n30\n\n\nAL\n67\n67\n67\n67\n67\n67\n67\n67\n67\n67\n...\n67\n67\n67\n0\n0\n0\n0\n0\n0\n67\n\n\nAR\n75\n75\n75\n75\n75\n75\n75\n75\n75\n75\n...\n75\n75\n75\n0\n0\n0\n0\n0\n0\n75\n\n\nAZ\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n...\n15\n15\n15\n0\n0\n0\n0\n0\n0\n15\n\n\nCA\n58\n58\n58\n58\n58\n58\n58\n58\n58\n58\n...\n58\n58\n58\n0\n0\n0\n0\n0\n0\n58\n\n\nCO\n64\n64\n64\n64\n64\n64\n64\n64\n64\n64\n...\n64\n64\n64\n0\n0\n0\n0\n0\n0\n64\n\n\nCT\n8\n8\n8\n8\n8\n8\n8\n8\n8\n8\n...\n8\n8\n8\n0\n0\n0\n0\n0\n0\n8\n\n\nDC\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n...\n1\n1\n1\n0\n0\n0\n0\n0\n0\n1\n\n\nDE\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n...\n3\n3\n3\n0\n0\n0\n0\n0\n0\n3\n\n\nFL\n67\n67\n67\n67\n67\n67\n67\n67\n67\n67\n...\n67\n67\n67\n0\n0\n0\n0\n0\n0\n67\n\n\nGA\n159\n159\n159\n159\n159\n159\n159\n159\n159\n159\n...\n159\n159\n159\n0\n0\n0\n0\n0\n0\n159\n\n\nHI\n5\n5\n5\n5\n5\n5\n4\n4\n4\n4\n...\n4\n4\n4\n0\n0\n0\n0\n0\n0\n5\n\n\nIA\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n...\n99\n99\n99\n0\n0\n0\n0\n0\n0\n99\n\n\nID\n44\n44\n44\n44\n44\n44\n44\n44\n44\n44\n...\n44\n44\n44\n0\n0\n0\n0\n0\n0\n44\n\n\nIL\n102\n102\n102\n102\n102\n102\n102\n102\n102\n102\n...\n102\n102\n102\n0\n0\n0\n0\n0\n0\n102\n\n\nIN\n92\n92\n92\n92\n92\n92\n92\n92\n92\n92\n...\n92\n92\n92\n0\n0\n0\n0\n0\n0\n92\n\n\nKS\n105\n105\n105\n105\n105\n105\n105\n105\n105\n105\n...\n105\n105\n105\n0\n0\n0\n0\n0\n0\n105\n\n\nKY\n120\n120\n120\n120\n120\n120\n120\n120\n120\n120\n...\n120\n120\n120\n0\n0\n0\n0\n0\n0\n120\n\n\nLA\n64\n64\n64\n64\n64\n64\n64\n64\n64\n64\n...\n64\n64\n64\n0\n0\n0\n0\n0\n0\n64\n\n\nMA\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n...\n14\n14\n14\n0\n0\n0\n0\n0\n0\n14\n\n\nMD\n24\n24\n24\n24\n24\n24\n24\n24\n24\n24\n...\n24\n24\n24\n0\n0\n0\n0\n0\n0\n24\n\n\nME\n16\n16\n16\n16\n16\n16\n16\n16\n16\n16\n...\n16\n16\n16\n0\n0\n0\n0\n0\n0\n16\n\n\nMI\n83\n83\n83\n83\n83\n83\n83\n83\n83\n83\n...\n83\n83\n83\n0\n0\n0\n0\n0\n0\n83\n\n\nMN\n87\n87\n87\n87\n87\n87\n87\n87\n87\n87\n...\n87\n87\n87\n0\n0\n0\n0\n0\n0\n87\n\n\nMO\n115\n115\n115\n115\n115\n115\n115\n115\n115\n115\n...\n115\n115\n115\n0\n0\n0\n0\n0\n0\n115\n\n\nMS\n82\n82\n82\n82\n82\n82\n82\n82\n82\n82\n...\n82\n82\n82\n0\n0\n0\n0\n0\n0\n82\n\n\nMT\n56\n56\n56\n56\n56\n56\n56\n56\n56\n56\n...\n56\n56\n56\n0\n0\n0\n0\n0\n0\n56\n\n\nNC\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n...\n100\n100\n100\n0\n0\n0\n0\n0\n0\n100\n\n\nND\n53\n53\n53\n53\n53\n53\n53\n53\n53\n53\n...\n53\n53\n53\n0\n0\n0\n0\n0\n0\n53\n\n\nNE\n93\n93\n93\n93\n93\n93\n93\n93\n93\n93\n...\n93\n93\n93\n0\n0\n0\n0\n0\n0\n93\n\n\nNH\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n...\n10\n10\n10\n0\n0\n0\n0\n0\n0\n10\n\n\nNJ\n21\n21\n21\n21\n21\n21\n21\n21\n21\n21\n...\n21\n21\n21\n0\n0\n0\n0\n0\n0\n21\n\n\nNM\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n...\n33\n33\n33\n0\n0\n0\n0\n0\n0\n33\n\n\nNV\n17\n17\n17\n17\n17\n17\n17\n17\n17\n17\n...\n17\n17\n17\n0\n0\n0\n0\n0\n0\n17\n\n\nNY\n62\n62\n62\n62\n62\n62\n62\n62\n62\n62\n...\n62\n62\n62\n0\n0\n0\n0\n0\n0\n62\n\n\nOH\n88\n88\n88\n88\n88\n88\n88\n88\n88\n88\n...\n88\n88\n88\n0\n0\n0\n0\n0\n0\n88\n\n\nOK\n77\n77\n77\n77\n77\n77\n77\n77\n77\n77\n...\n77\n77\n77\n0\n0\n0\n0\n0\n0\n77\n\n\nOR\n36\n36\n36\n36\n36\n36\n36\n36\n36\n36\n...\n36\n36\n36\n0\n0\n0\n0\n0\n0\n36\n\n\nPA\n67\n67\n67\n67\n67\n67\n67\n67\n67\n67\n...\n67\n67\n67\n0\n0\n0\n0\n0\n0\n67\n\n\nRI\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n...\n5\n5\n5\n0\n0\n0\n0\n0\n0\n5\n\n\nSC\n46\n46\n46\n46\n46\n46\n46\n46\n46\n46\n...\n46\n46\n46\n0\n0\n0\n0\n0\n0\n46\n\n\nSD\n66\n66\n66\n66\n66\n66\n66\n66\n66\n66\n...\n66\n66\n66\n0\n0\n0\n0\n0\n0\n66\n\n\nTN\n95\n95\n95\n95\n95\n95\n95\n95\n95\n95\n...\n95\n95\n95\n0\n0\n0\n0\n0\n0\n95\n\n\nTX\n254\n254\n254\n254\n254\n254\n254\n254\n254\n254\n...\n254\n254\n254\n0\n0\n0\n0\n0\n0\n254\n\n\nUT\n29\n29\n29\n29\n29\n29\n29\n29\n29\n29\n...\n29\n29\n29\n0\n0\n0\n0\n0\n0\n29\n\n\nVA\n133\n133\n133\n133\n133\n133\n133\n133\n133\n133\n...\n133\n133\n133\n0\n0\n0\n0\n0\n0\n133\n\n\nVT\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n...\n14\n14\n14\n0\n0\n0\n0\n0\n0\n14\n\n\nWA\n39\n39\n39\n39\n39\n39\n39\n39\n39\n39\n...\n39\n39\n39\n0\n0\n0\n0\n0\n0\n39\n\n\nWI\n72\n72\n72\n72\n72\n72\n72\n72\n72\n72\n...\n72\n72\n72\n0\n0\n0\n0\n0\n0\n72\n\n\nWV\n55\n55\n55\n55\n55\n55\n55\n55\n55\n55\n...\n55\n55\n55\n0\n0\n0\n0\n0\n0\n55\n\n\nWY\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n...\n23\n23\n23\n0\n0\n0\n0\n0\n0\n23\n\n\n\n\n51 rows × 34 columns\n\n\n\n\ncounties.columns\n\nIndex(['FIPS_Code', 'Stabr', 'Area_name', 'Rural-urban_Continuum_Code_2003',\n       'Urban_Influence_Code_2003', 'Rural-urban_Continuum_Code_2013',\n       'Urban_Influence_Code_ 2013', 'POVALL_2021', 'CI90LBALL_2021',\n       'CI90UBALL_2021', 'PCTPOVALL_2021', 'CI90LBALLP_2021',\n       'CI90UBALLP_2021', 'POV017_2021', 'CI90LB017_2021', 'CI90UB017_2021',\n       'PCTPOV017_2021', 'CI90LB017P_2021', 'CI90UB017P_2021', 'POV517_2021',\n       'CI90LB517_2021', 'CI90UB517_2021', 'PCTPOV517_2021', 'CI90LB517P_2021',\n       'CI90UB517P_2021', 'MEDHHINC_2021', 'CI90LBINC_2021', 'CI90UBINC_2021',\n       'POV04_2021', 'CI90LB04_2021', 'CI90UB04_2021', 'PCTPOV04_2021',\n       'CI90LB04P_2021', 'CI90UB04P_2021', 'fips_str'],\n      dtype='object')\n\n\n\ncounties[['Stabr', 'Area_name', 'PCTPOVALL_2021']]\n\n\n\n\n\n\n\n\nStabr\nArea_name\nPCTPOVALL_2021\n\n\n\n\n2\nAL\nAutauga County\n10.7\n\n\n3\nAL\nBaldwin County\n10.8\n\n\n4\nAL\nBarbour County\n23.0\n\n\n5\nAL\nBibb County\n20.6\n\n\n6\nAL\nBlount County\n12.0\n\n\n...\n...\n...\n...\n\n\n3190\nWY\nSweetwater County\n9.2\n\n\n3191\nWY\nTeton County\n5.9\n\n\n3192\nWY\nUinta County\n9.4\n\n\n3193\nWY\nWashakie County\n10.2\n\n\n3194\nWY\nWeston County\n10.4\n\n\n\n\n3143 rows × 3 columns\n\n\n\n\ncounties[['Stabr', 'PCTPOVALL_2021']].groupby(by='Stabr').mean()\n\n\n\n\n\n\n\n\nPCTPOVALL_2021\n\n\nStabr\n\n\n\n\n\nAK\n13.750000\n\n\nAL\n19.455224\n\n\nAR\n18.750667\n\n\nAZ\n17.273333\n\n\nCA\n13.631034\n\n\nCO\n12.567188\n\n\nCT\n9.812500\n\n\nDC\n16.800000\n\n\nDE\n11.700000\n\n\nFL\n15.588060\n\n\nGA\n18.422642\n\n\nHI\n11.825000\n\n\nIA\n10.714141\n\n\nID\n11.970455\n\n\nIL\n12.804902\n\n\nIN\n11.515217\n\n\nKS\n11.903810\n\n\nKY\n19.189167\n\n\nLA\n21.618750\n\n\nMA\n10.278571\n\n\nMD\n10.991667\n\n\nME\n12.318750\n\n\nMI\n13.059036\n\n\nMN\n10.154023\n\n\nMO\n14.923478\n\n\nMS\n22.253659\n\n\nMT\n13.532143\n\n\nNC\n15.931000\n\n\nND\n12.286792\n\n\nNE\n10.847312\n\n\nNH\n8.510000\n\n\nNJ\n9.880952\n\n\nNM\n20.169697\n\n\nNV\n12.111765\n\n\nNY\n12.964516\n\n\nOH\n12.935227\n\n\nOK\n16.790909\n\n\nOR\n13.936111\n\n\nPA\n12.043284\n\n\nRI\n9.760000\n\n\nSC\n18.200000\n\n\nSD\n14.921212\n\n\nTN\n15.463158\n\n\nTX\n15.837008\n\n\nUT\n10.206897\n\n\nVA\n13.260902\n\n\nVT\n10.435714\n\n\nWA\n12.215385\n\n\nWI\n10.695833\n\n\nWV\n18.060000\n\n\nWY\n10.773913\n\n\n\n\n\n\n\n\ncounties[['Stabr', 'PCTPOVALL_2021']].groupby(by='Stabr').max()\n\n\n\n\n\n\n\n\nPCTPOVALL_2021\n\n\nStabr\n\n\n\n\n\nAK\n30.4\n\n\nAL\n35.1\n\n\nAR\n35.7\n\n\nAZ\n28.4\n\n\nCA\n21.9\n\n\nCO\n37.8\n\n\nCT\n12.0\n\n\nDC\n16.8\n\n\nDE\n12.2\n\n\nFL\n26.3\n\n\nGA\n34.0\n\n\nHI\n14.7\n\n\nIA\n17.9\n\n\nID\n17.9\n\n\nIL\n22.3\n\n\nIN\n21.1\n\n\nKS\n21.3\n\n\nKY\n40.5\n\n\nLA\n39.9\n\n\nMA\n18.5\n\n\nMD\n23.6\n\n\nME\n18.2\n\n\nMI\n20.7\n\n\nMN\n18.7\n\n\nMO\n23.9\n\n\nMS\n43.9\n\n\nMT\n25.7\n\n\nNC\n27.9\n\n\nND\n42.8\n\n\nNE\n19.3\n\n\nNH\n12.5\n\n\nNJ\n15.9\n\n\nNM\n30.3\n\n\nNV\n18.3\n\n\nNY\n26.4\n\n\nOH\n23.9\n\n\nOK\n27.8\n\n\nOR\n20.0\n\n\nPA\n22.3\n\n\nRI\n14.3\n\n\nSC\n35.4\n\n\nSD\n43.5\n\n\nTN\n33.4\n\n\nTX\n34.3\n\n\nUT\n26.8\n\n\nVA\n25.6\n\n\nVT\n14.4\n\n\nWA\n18.1\n\n\nWI\n24.2\n\n\nWV\n31.7\n\n\nWY\n17.7"
  },
  {
    "objectID": "week-03/h0201pandas2.html#reading-external-files-xlsx",
    "href": "week-03/h0201pandas2.html#reading-external-files-xlsx",
    "title": "Pandas Part II",
    "section": "",
    "text": "import requests\nfrom openpyxl import load_workbook\n\n\nurl = 'https://www.ers.usda.gov/webdocs/DataFiles/48747/PovertyEstimates.xlsx?v=9655.3'\noutput_file = 'PovertyEstimates.xlsx'  # Name of the local copy\n\n\nresponse = requests.get(url)\n\n\nif response.status_code == 200:\n    with open(output_file, 'wb') as file:\n        file.write(response.content)\n    print(f\"File '{output_file}' downloaded successfully.\")\n\n    # Optional: Check the content of the downloaded XLSX file\n    wb = load_workbook(output_file)\n    sheets = wb.sheetnames\n    print(f\"Excel file contains the following sheets: {sheets}\")\n    # You can now work with the Excel file as needed\n    \nelse:\n    print(f\"Failed to download the file. Status code: {response.status_code}\")\n\nFile 'PovertyEstimates.xlsx' downloaded successfully.\nExcel file contains the following sheets: ['PovertyEstimates', 'Variable Descriptions']\n\n\n\nimport pandas as pd\nfile_path = 'PovertyEstimates.xlsx'\nxls = pd.ExcelFile(file_path)\n\n\nxls.sheet_names\n\n['PovertyEstimates', 'Variable Descriptions']\n\n\n\nvar_df = pd.read_excel(file_path, 'Variable Descriptions')\n\n\nvar_df.head()\n\n\n\n\n\n\n\n\nColumn variable name\nDescription\n\n\n\n\n0\nFIPS_Code\nState-county Federal Information Processing St...\n\n\n1\nStabr\nState abbreviation\n\n\n2\nArea_name\nArea name\n\n\n3\nRural-urban_Continuum_Code_2003\nRural-Urban Continuum Code, 2003\n\n\n4\nUrban_Influence_Code_2003\nUrban Influence Code, 2003\n\n\n\n\n\n\n\n\nvar_df.shape\n\n(34, 2)\n\n\n\nvar_df\n\n\n\n\n\n\n\n\nColumn variable name\nDescription\n\n\n\n\n0\nFIPS_Code\nState-county Federal Information Processing St...\n\n\n1\nStabr\nState abbreviation\n\n\n2\nArea_name\nArea name\n\n\n3\nRural-urban_Continuum_Code_2003\nRural-Urban Continuum Code, 2003\n\n\n4\nUrban_Influence_Code_2003\nUrban Influence Code, 2003\n\n\n5\nRural-urban_Continuum_Code_2013\nRural-Urban Continuum Code, 2013\n\n\n6\nUrban_Influence_Code_ 2013\nUrban Influence Code, 2013\n\n\n7\nPOVALL_2021\nEstimate of people of all ages in poverty 2021\n\n\n8\nCI90LBALL_2021\n90 percent confidence interval lower bound of ...\n\n\n9\nCI90UBALL_2021\n90 percent confidence interval upper bound of ...\n\n\n10\nPCTPOVALL_2021\nEstimated percent of people of all ages in pov...\n\n\n11\nCI90LBALLP_2021\n90 percent confidence interval lower bound of ...\n\n\n12\nCI90UBALLP_2021\n90 percent confidence interval upper bound of ...\n\n\n13\nPOV017_2021\nEstimate of people age 0-17 in poverty 2021\n\n\n14\nCI90LB017_2021\n90 percent confidence interval lower bound of ...\n\n\n15\nCI90UB017_2021\n90 percent confidence interval upper bound of ...\n\n\n16\nPCTPOV017_2021\nEstimated percent of people age 0-17 in povert...\n\n\n17\nCI90LB017P_2021\n90 percent confidence interval lower bound of ...\n\n\n18\nCI90UB017P_2021\n90 percent confidence interval upper bound of ...\n\n\n19\nPOV517_2021\nEstimate of related children age 5-17 in famil...\n\n\n20\nCI90LB517_2021\n90 percent confidence interval lower bound of ...\n\n\n21\nCI90UB517_2021\n90 percent confidence interval upper bound of ...\n\n\n22\nPCTPOV517_2021\nEstimated percent of related children age 5-17...\n\n\n23\nCI90LB517P_2021\n90 percent confidence interval lower bound of ...\n\n\n24\nCI90UB517P_2021\n90 percent confidence interval upper bound of ...\n\n\n25\nMEDHHINC_2021\nEstimate of median household income 2021\n\n\n26\nCI90LBINC_2021\n90 percent confidence interval lower bound of ...\n\n\n27\nCI90UBINC_2021\n90 percent confidence interval upper bound of ...\n\n\n28\nPOV04_2021\nEstimate of children ages 0 to 4 in poverty 20...\n\n\n29\nCI90LB04_2021\n90 percent confidence interval lower bound of ...\n\n\n30\nCI90UB04_2021\n90 percent confidence interval upper bound of ...\n\n\n31\nPCTPOV04_2021\nEstimated percent of children ages 0 to 4 in p...\n\n\n32\nCI90LB04P_2021\n90 percent confidence interval lower bound of ...\n\n\n33\nCI90UB04P_2021\n90 percent confidence interval upper bound of ...\n\n\n\n\n\n\n\n\ndf = pd.read_excel(file_path, 'PovertyEstimates')\n\n\ndf.head()\n\n\n\n\n\n\n\n\nPoverty estimates for U.S., States, and counties, 2021\nUnnamed: 1\nUnnamed: 2\nUnnamed: 3\nUnnamed: 4\nUnnamed: 5\nUnnamed: 6\nUnnamed: 7\nUnnamed: 8\nUnnamed: 9\n...\nUnnamed: 24\nUnnamed: 25\nUnnamed: 26\nUnnamed: 27\nUnnamed: 28\nUnnamed: 29\nUnnamed: 30\nUnnamed: 31\nUnnamed: 32\nUnnamed: 33\n\n\n\n\n0\nSource: U.S. Department of Commerce, Bureau of...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1\nFor definitions of rural classifications, see ...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n2\nThis table was prepared by USDA, Economic Rese...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n3\nFIPS_Code\nStabr\nArea_name\nRural-urban_Continuum_Code_2003\nUrban_Influence_Code_2003\nRural-urban_Continuum_Code_2013\nUrban_Influence_Code_ 2013\nPOVALL_2021\nCI90LBALL_2021\nCI90UBALL_2021\n...\nCI90UB517P_2021\nMEDHHINC_2021\nCI90LBINC_2021\nCI90UBINC_2021\nPOV04_2021\nCI90LB04_2021\nCI90UB04_2021\nPCTPOV04_2021\nCI90LB04P_2021\nCI90UB04P_2021\n\n\n4\n00000\nUS\nUnited States\nNaN\nNaN\nNaN\nNaN\n41393176\n41149497\n41636855\n...\n16.3\n69717\n69583\n69851\n3349149\n3299669\n3398629\n18.3\n18\n18.6\n\n\n\n\n5 rows × 34 columns\n\n\n\n\ndf = pd.read_excel(file_path, 'PovertyEstimates', skiprows=4)\n\n\ndf.head()\n\n\n\n\n\n\n\n\nFIPS_Code\nStabr\nArea_name\nRural-urban_Continuum_Code_2003\nUrban_Influence_Code_2003\nRural-urban_Continuum_Code_2013\nUrban_Influence_Code_ 2013\nPOVALL_2021\nCI90LBALL_2021\nCI90UBALL_2021\n...\nCI90UB517P_2021\nMEDHHINC_2021\nCI90LBINC_2021\nCI90UBINC_2021\nPOV04_2021\nCI90LB04_2021\nCI90UB04_2021\nPCTPOV04_2021\nCI90LB04P_2021\nCI90UB04P_2021\n\n\n\n\n0\n0\nUS\nUnited States\nNaN\nNaN\nNaN\nNaN\n41393176.0\n41149497.0\n41636855.0\n...\n16.3\n69717.0\n69583.0\n69851.0\n3349149.0\n3299669.0\n3398629.0\n18.3\n18.0\n18.6\n\n\n1\n1000\nAL\nAlabama\nNaN\nNaN\nNaN\nNaN\n800848.0\n782169.0\n819527.0\n...\n22.5\n53990.0\n53218.0\n54762.0\n71220.0\n66888.0\n75552.0\n25.1\n23.6\n26.6\n\n\n2\n1001\nAL\nAutauga County\n2.0\n2.0\n2.0\n2.0\n6296.0\n4772.0\n7820.0\n...\n20.4\n66444.0\n60061.0\n72827.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n3\n1003\nAL\nBaldwin County\n4.0\n5.0\n3.0\n2.0\n25526.0\n21599.0\n29453.0\n...\n18.5\n65658.0\n60723.0\n70593.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n4\n1005\nAL\nBarbour County\n6.0\n6.0\n6.0\n6.0\n5089.0\n3773.0\n6405.0\n...\n44.6\n38649.0\n34308.0\n42990.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n5 rows × 34 columns\n\n\n\n\ndf.shape\n\n(3195, 34)\n\n\n\ndf.dtypes\n\nFIPS_Code                            int64\nStabr                               object\nArea_name                           object\nRural-urban_Continuum_Code_2003    float64\nUrban_Influence_Code_2003          float64\nRural-urban_Continuum_Code_2013    float64\nUrban_Influence_Code_ 2013         float64\nPOVALL_2021                        float64\nCI90LBALL_2021                     float64\nCI90UBALL_2021                     float64\nPCTPOVALL_2021                     float64\nCI90LBALLP_2021                    float64\nCI90UBALLP_2021                    float64\nPOV017_2021                        float64\nCI90LB017_2021                     float64\nCI90UB017_2021                     float64\nPCTPOV017_2021                     float64\nCI90LB017P_2021                    float64\nCI90UB017P_2021                    float64\nPOV517_2021                        float64\nCI90LB517_2021                     float64\nCI90UB517_2021                     float64\nPCTPOV517_2021                     float64\nCI90LB517P_2021                    float64\nCI90UB517P_2021                    float64\nMEDHHINC_2021                      float64\nCI90LBINC_2021                     float64\nCI90UBINC_2021                     float64\nPOV04_2021                         float64\nCI90LB04_2021                      float64\nCI90UB04_2021                      float64\nPCTPOV04_2021                      float64\nCI90LB04P_2021                     float64\nCI90UB04P_2021                     float64\ndtype: object\n\n\n\ndf['fips_str'] = df.FIPS_Code.astype(str).str.zfill(5)\n\n\ndf.fips_str\n\n0       00000\n1       01000\n2       01001\n3       01003\n4       01005\n        ...  \n3190    56037\n3191    56039\n3192    56041\n3193    56043\n3194    56045\nName: fips_str, Length: 3195, dtype: object\n\n\n\ndf[['FIPS_Code', 'fips_str']]\n\n\n\n\n\n\n\n\nFIPS_Code\nfips_str\n\n\n\n\n0\n0\n00000\n\n\n1\n1000\n01000\n\n\n2\n1001\n01001\n\n\n3\n1003\n01003\n\n\n4\n1005\n01005\n\n\n...\n...\n...\n\n\n3190\n56037\n56037\n\n\n3191\n56039\n56039\n\n\n3192\n56041\n56041\n\n\n3193\n56043\n56043\n\n\n3194\n56045\n56045\n\n\n\n\n3195 rows × 2 columns\n\n\n\n\ndf.head()\n\n\n\n\n\n\n\n\nFIPS_Code\nStabr\nArea_name\nRural-urban_Continuum_Code_2003\nUrban_Influence_Code_2003\nRural-urban_Continuum_Code_2013\nUrban_Influence_Code_ 2013\nPOVALL_2021\nCI90LBALL_2021\nCI90UBALL_2021\n...\nMEDHHINC_2021\nCI90LBINC_2021\nCI90UBINC_2021\nPOV04_2021\nCI90LB04_2021\nCI90UB04_2021\nPCTPOV04_2021\nCI90LB04P_2021\nCI90UB04P_2021\nfips_str\n\n\n\n\n0\n0\nUS\nUnited States\nNaN\nNaN\nNaN\nNaN\n41393176.0\n41149497.0\n41636855.0\n...\n69717.0\n69583.0\n69851.0\n3349149.0\n3299669.0\n3398629.0\n18.3\n18.0\n18.6\n00000\n\n\n1\n1000\nAL\nAlabama\nNaN\nNaN\nNaN\nNaN\n800848.0\n782169.0\n819527.0\n...\n53990.0\n53218.0\n54762.0\n71220.0\n66888.0\n75552.0\n25.1\n23.6\n26.6\n01000\n\n\n2\n1001\nAL\nAutauga County\n2.0\n2.0\n2.0\n2.0\n6296.0\n4772.0\n7820.0\n...\n66444.0\n60061.0\n72827.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01001\n\n\n3\n1003\nAL\nBaldwin County\n4.0\n5.0\n3.0\n2.0\n25526.0\n21599.0\n29453.0\n...\n65658.0\n60723.0\n70593.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01003\n\n\n4\n1005\nAL\nBarbour County\n6.0\n6.0\n6.0\n6.0\n5089.0\n3773.0\n6405.0\n...\n38649.0\n34308.0\n42990.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01005\n\n\n\n\n5 rows × 35 columns\n\n\n\n\ndf[df.Stabr=='AL']\n\n\n\n\n\n\n\n\nFIPS_Code\nStabr\nArea_name\nRural-urban_Continuum_Code_2003\nUrban_Influence_Code_2003\nRural-urban_Continuum_Code_2013\nUrban_Influence_Code_ 2013\nPOVALL_2021\nCI90LBALL_2021\nCI90UBALL_2021\n...\nMEDHHINC_2021\nCI90LBINC_2021\nCI90UBINC_2021\nPOV04_2021\nCI90LB04_2021\nCI90UB04_2021\nPCTPOV04_2021\nCI90LB04P_2021\nCI90UB04P_2021\nfips_str\n\n\n\n\n1\n1000\nAL\nAlabama\nNaN\nNaN\nNaN\nNaN\n800848.0\n782169.0\n819527.0\n...\n53990.0\n53218.0\n54762.0\n71220.0\n66888.0\n75552.0\n25.1\n23.6\n26.6\n01000\n\n\n2\n1001\nAL\nAutauga County\n2.0\n2.0\n2.0\n2.0\n6296.0\n4772.0\n7820.0\n...\n66444.0\n60061.0\n72827.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01001\n\n\n3\n1003\nAL\nBaldwin County\n4.0\n5.0\n3.0\n2.0\n25526.0\n21599.0\n29453.0\n...\n65658.0\n60723.0\n70593.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01003\n\n\n4\n1005\nAL\nBarbour County\n6.0\n6.0\n6.0\n6.0\n5089.0\n3773.0\n6405.0\n...\n38649.0\n34308.0\n42990.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01005\n\n\n5\n1007\nAL\nBibb County\n1.0\n1.0\n1.0\n1.0\n4204.0\n3324.0\n5084.0\n...\n48454.0\n42438.0\n54470.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01007\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n64\n1125\nAL\nTuscaloosa County\n3.0\n2.0\n3.0\n2.0\n31735.0\n26867.0\n36603.0\n...\n56274.0\n52677.0\n59871.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01125\n\n\n65\n1127\nAL\nWalker County\n1.0\n1.0\n1.0\n1.0\n12877.0\n10967.0\n14787.0\n...\n46343.0\n41443.0\n51243.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01127\n\n\n66\n1129\nAL\nWashington County\n8.0\n7.0\n8.0\n7.0\n3091.0\n2505.0\n3677.0\n...\n49795.0\n43655.0\n55935.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01129\n\n\n67\n1131\nAL\nWilcox County\n8.0\n7.0\n9.0\n10.0\n3340.0\n2578.0\n4102.0\n...\n30071.0\n26647.0\n33495.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01131\n\n\n68\n1133\nAL\nWinston County\n6.0\n4.0\n6.0\n4.0\n4455.0\n3624.0\n5286.0\n...\n47176.0\n41809.0\n52543.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01133\n\n\n\n\n68 rows × 35 columns\n\n\n\n\ndf[df.Stabr=='CA']\n\n\n\n\n\n\n\n\nFIPS_Code\nStabr\nArea_name\nRural-urban_Continuum_Code_2003\nUrban_Influence_Code_2003\nRural-urban_Continuum_Code_2013\nUrban_Influence_Code_ 2013\nPOVALL_2021\nCI90LBALL_2021\nCI90UBALL_2021\n...\nMEDHHINC_2021\nCI90LBINC_2021\nCI90UBINC_2021\nPOV04_2021\nCI90LB04_2021\nCI90UB04_2021\nPCTPOV04_2021\nCI90LB04P_2021\nCI90UB04P_2021\nfips_str\n\n\n\n\n192\n6000\nCA\nCalifornia\nNaN\nNaN\nNaN\nNaN\n4742405.0\n4689999.0\n4794811.0\n...\n84831.0\n84292.0\n85370.0\n339169.0\n326796.0\n351542.0\n15.8\n15.2\n16.4\n06000\n\n\n193\n6001\nCA\nAlameda County\n1.0\n1.0\n1.0\n1.0\n152654.0\n140318.0\n164990.0\n...\n108971.0\n106170.0\n111772.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06001\n\n\n194\n6003\nCA\nAlpine County\n8.0\n4.0\n8.0\n4.0\n194.0\n148.0\n240.0\n...\n87570.0\n80899.0\n94241.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06003\n\n\n195\n6005\nCA\nAmador County\n6.0\n4.0\n6.0\n4.0\n4104.0\n3139.0\n5069.0\n...\n68159.0\n61507.0\n74811.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06005\n\n\n196\n6007\nCA\nButte County\n3.0\n2.0\n3.0\n2.0\n33874.0\n30026.0\n37722.0\n...\n62982.0\n60248.0\n65716.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06007\n\n\n197\n6009\nCA\nCalaveras County\n6.0\n6.0\n6.0\n6.0\n6198.0\n5078.0\n7318.0\n...\n68298.0\n61082.0\n75514.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06009\n\n\n198\n6011\nCA\nColusa County\n6.0\n4.0\n6.0\n4.0\n2466.0\n1901.0\n3031.0\n...\n60725.0\n53787.0\n67663.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06011\n\n\n199\n6013\nCA\nContra Costa County\n1.0\n1.0\n1.0\n1.0\n100948.0\n92022.0\n109874.0\n...\n110595.0\n107542.0\n113648.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06013\n\n\n200\n6015\nCA\nDel Norte County\n7.0\n8.0\n7.0\n8.0\n5368.0\n4316.0\n6420.0\n...\n48108.0\n42824.0\n53392.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06015\n\n\n201\n6017\nCA\nEl Dorado County\n1.0\n1.0\n1.0\n1.0\n16839.0\n14045.0\n19633.0\n...\n87689.0\n80889.0\n94489.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06017\n\n\n202\n6019\nCA\nFresno County\n2.0\n2.0\n2.0\n2.0\n193449.0\n179983.0\n206915.0\n...\n63140.0\n61332.0\n64948.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06019\n\n\n203\n6021\nCA\nGlenn County\n6.0\n6.0\n6.0\n6.0\n4397.0\n3560.0\n5234.0\n...\n56741.0\n50379.0\n63103.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06021\n\n\n204\n6023\nCA\nHumboldt County\n5.0\n8.0\n5.0\n8.0\n25781.0\n22760.0\n28802.0\n...\n53924.0\n49868.0\n57980.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06023\n\n\n205\n6025\nCA\nImperial County\n3.0\n2.0\n3.0\n2.0\n29738.0\n24540.0\n34936.0\n...\n50970.0\n48099.0\n53841.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06025\n\n\n206\n6027\nCA\nInyo County\n7.0\n8.0\n7.0\n11.0\n2382.0\n1903.0\n2861.0\n...\n62381.0\n55355.0\n69407.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06027\n\n\n207\n6029\nCA\nKern County\n2.0\n2.0\n2.0\n2.0\n164169.0\n149799.0\n178539.0\n...\n57926.0\n54723.0\n61129.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06029\n\n\n208\n6031\nCA\nKings County\n3.0\n2.0\n3.0\n2.0\n24295.0\n20420.0\n28170.0\n...\n60810.0\n57040.0\n64580.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06031\n\n\n209\n6033\nCA\nLake County\n4.0\n5.0\n4.0\n5.0\n11196.0\n8683.0\n13709.0\n...\n55801.0\n51767.0\n59835.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06033\n\n\n210\n6035\nCA\nLassen County\n6.0\n6.0\n7.0\n8.0\n4805.0\n3867.0\n5743.0\n...\n56923.0\n51387.0\n62459.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06035\n\n\n211\n6037\nCA\nLos Angeles County\n1.0\n1.0\n1.0\n1.0\n1365808.0\n1324191.0\n1407425.0\n...\n77356.0\n76664.0\n78048.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06037\n\n\n212\n6039\nCA\nMadera County\n3.0\n2.0\n3.0\n2.0\n31044.0\n27214.0\n34874.0\n...\n60241.0\n54963.0\n65519.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06039\n\n\n213\n6041\nCA\nMarin County\n1.0\n1.0\n1.0\n1.0\n19734.0\n16455.0\n23013.0\n...\n118472.0\n110912.0\n126032.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06041\n\n\n214\n6043\nCA\nMariposa County\n8.0\n7.0\n8.0\n7.0\n2387.0\n1808.0\n2966.0\n...\n60377.0\n54124.0\n66630.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06043\n\n\n215\n6045\nCA\nMendocino County\n4.0\n5.0\n4.0\n5.0\n14539.0\n11887.0\n17191.0\n...\n57516.0\n51658.0\n63374.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06045\n\n\n216\n6047\nCA\nMerced County\n3.0\n2.0\n2.0\n2.0\n61359.0\n55535.0\n67183.0\n...\n54703.0\n51436.0\n57970.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06047\n\n\n217\n6049\nCA\nModoc County\n6.0\n6.0\n6.0\n6.0\n1688.0\n1307.0\n2069.0\n...\n49273.0\n44364.0\n54182.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06049\n\n\n218\n6051\nCA\nMono County\n7.0\n9.0\n7.0\n11.0\n1278.0\n973.0\n1583.0\n...\n70945.0\n62471.0\n79419.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06051\n\n\n219\n6053\nCA\nMonterey County\n2.0\n2.0\n2.0\n2.0\n50725.0\n43455.0\n57995.0\n...\n81404.0\n79343.0\n83465.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06053\n\n\n220\n6055\nCA\nNapa County\n3.0\n2.0\n3.0\n2.0\n11814.0\n9909.0\n13719.0\n...\n94127.0\n88895.0\n99359.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06055\n\n\n221\n6057\nCA\nNevada County\n4.0\n3.0\n4.0\n3.0\n12141.0\n10287.0\n13995.0\n...\n77220.0\n70966.0\n83474.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06057\n\n\n222\n6059\nCA\nOrange County\n1.0\n1.0\n1.0\n1.0\n309402.0\n290860.0\n327944.0\n...\n100210.0\n98704.0\n101716.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06059\n\n\n223\n6061\nCA\nPlacer County\n1.0\n1.0\n1.0\n1.0\n26816.0\n23108.0\n30524.0\n...\n103588.0\n100310.0\n106866.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06061\n\n\n224\n6063\nCA\nPlumas County\n7.0\n12.0\n7.0\n12.0\n2545.0\n1946.0\n3144.0\n...\n58154.0\n52309.0\n63999.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06063\n\n\n225\n6065\nCA\nRiverside County\n1.0\n1.0\n1.0\n1.0\n282068.0\n261203.0\n302933.0\n...\n78690.0\n77268.0\n80112.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06065\n\n\n226\n6067\nCA\nSacramento County\n1.0\n1.0\n1.0\n1.0\n203413.0\n188841.0\n217985.0\n...\n79611.0\n77617.0\n81605.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06067\n\n\n227\n6069\nCA\nSan Benito County\n1.0\n1.0\n1.0\n1.0\n5899.0\n4633.0\n7165.0\n...\n95187.0\n87067.0\n103307.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06069\n\n\n228\n6071\nCA\nSan Bernardino County\n1.0\n1.0\n1.0\n1.0\n285474.0\n263941.0\n307007.0\n...\n74218.0\n72378.0\n76058.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06071\n\n\n229\n6073\nCA\nSan Diego County\n1.0\n1.0\n1.0\n1.0\n340522.0\n320076.0\n360968.0\n...\n90756.0\n89622.0\n91890.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06073\n\n\n230\n6075\nCA\nSan Francisco County\n1.0\n1.0\n1.0\n1.0\n90898.0\n83583.0\n98213.0\n...\n119776.0\n115563.0\n123989.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06075\n\n\n231\n6077\nCA\nSan Joaquin County\n2.0\n2.0\n2.0\n2.0\n95382.0\n83774.0\n106990.0\n...\n79598.0\n77211.0\n81985.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06077\n\n\n232\n6079\nCA\nSan Luis Obispo County\n3.0\n2.0\n2.0\n2.0\n35120.0\n31122.0\n39118.0\n...\n79688.0\n75932.0\n83444.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06079\n\n\n233\n6081\nCA\nSan Mateo County\n1.0\n1.0\n1.0\n1.0\n49900.0\n43747.0\n56053.0\n...\n131151.0\n127714.0\n134588.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06081\n\n\n234\n6083\nCA\nSanta Barbara County\n2.0\n2.0\n2.0\n2.0\n65029.0\n59277.0\n70781.0\n...\n83185.0\n79921.0\n86449.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06083\n\n\n235\n6085\nCA\nSanta Clara County\n1.0\n1.0\n1.0\n1.0\n128955.0\n117767.0\n140143.0\n...\n141161.0\n138832.0\n143490.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06085\n\n\n236\n6087\nCA\nSanta Cruz County\n2.0\n2.0\n2.0\n2.0\n27132.0\n22485.0\n31779.0\n...\n90370.0\n84679.0\n96061.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06087\n\n\n237\n6089\nCA\nShasta County\n3.0\n2.0\n3.0\n2.0\n25141.0\n21256.0\n29026.0\n...\n60187.0\n56764.0\n63610.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06089\n\n\n238\n6091\nCA\nSierra County\n8.0\n7.0\n8.0\n7.0\n398.0\n300.0\n496.0\n...\n60659.0\n53239.0\n68079.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06091\n\n\n239\n6093\nCA\nSiskiyou County\n7.0\n11.0\n6.0\n6.0\n7301.0\n6005.0\n8597.0\n...\n50069.0\n45178.0\n54960.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06093\n\n\n240\n6095\nCA\nSolano County\n2.0\n2.0\n2.0\n2.0\n44037.0\n37963.0\n50111.0\n...\n87348.0\n84016.0\n90680.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06095\n\n\n241\n6097\nCA\nSonoma County\n2.0\n2.0\n2.0\n2.0\n43661.0\n38372.0\n48950.0\n...\n92999.0\n89380.0\n96618.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06097\n\n\n242\n6099\nCA\nStanislaus County\n2.0\n2.0\n2.0\n2.0\n76921.0\n67090.0\n86752.0\n...\n73151.0\n70938.0\n75364.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06099\n\n\n243\n6101\nCA\nSutter County\n3.0\n2.0\n3.0\n2.0\n15224.0\n12930.0\n17518.0\n...\n63246.0\n58462.0\n68030.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06101\n\n\n244\n6103\nCA\nTehama County\n4.0\n5.0\n4.0\n5.0\n10107.0\n8151.0\n12063.0\n...\n53654.0\n47435.0\n59873.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06103\n\n\n245\n6105\nCA\nTrinity County\n8.0\n6.0\n8.0\n6.0\n3010.0\n2307.0\n3713.0\n...\n45508.0\n39960.0\n51056.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06105\n\n\n246\n6107\nCA\nTulare County\n2.0\n2.0\n2.0\n2.0\n88367.0\n78219.0\n98515.0\n...\n57398.0\n54157.0\n60639.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06107\n\n\n247\n6109\nCA\nTuolumne County\n4.0\n5.0\n4.0\n5.0\n6848.0\n5388.0\n8308.0\n...\n61396.0\n54884.0\n67908.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06109\n\n\n248\n6111\nCA\nVentura County\n2.0\n2.0\n2.0\n2.0\n73968.0\n66079.0\n81857.0\n...\n95819.0\n93275.0\n98363.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06111\n\n\n249\n6113\nCA\nYolo County\n1.0\n1.0\n1.0\n1.0\n30708.0\n27369.0\n34047.0\n...\n76247.0\n71083.0\n81411.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06113\n\n\n250\n6115\nCA\nYuba County\n3.0\n2.0\n3.0\n2.0\n12784.0\n10305.0\n15263.0\n...\n60764.0\n56731.0\n64797.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06115\n\n\n\n\n59 rows × 35 columns\n\n\n\n\nstates = df[df.fips_str.str.endswith('000')]\n\n\nstates\n\n\n\n\n\n\n\n\nFIPS_Code\nStabr\nArea_name\nRural-urban_Continuum_Code_2003\nUrban_Influence_Code_2003\nRural-urban_Continuum_Code_2013\nUrban_Influence_Code_ 2013\nPOVALL_2021\nCI90LBALL_2021\nCI90UBALL_2021\n...\nMEDHHINC_2021\nCI90LBINC_2021\nCI90UBINC_2021\nPOV04_2021\nCI90LB04_2021\nCI90UB04_2021\nPCTPOV04_2021\nCI90LB04P_2021\nCI90UB04P_2021\nfips_str\n\n\n\n\n0\n0\nUS\nUnited States\nNaN\nNaN\nNaN\nNaN\n41393176.0\n41149497.0\n41636855.0\n...\n69717.0\n69583.0\n69851.0\n3349149.0\n3299669.0\n3398629.0\n18.3\n18.0\n18.6\n00000\n\n\n1\n1000\nAL\nAlabama\nNaN\nNaN\nNaN\nNaN\n800848.0\n782169.0\n819527.0\n...\n53990.0\n53218.0\n54762.0\n71220.0\n66888.0\n75552.0\n25.1\n23.6\n26.6\n01000\n\n\n69\n2000\nAK\nAlaska\nNaN\nNaN\nNaN\nNaN\n77736.0\n74178.0\n81294.0\n...\n78437.0\n76456.0\n80418.0\n6633.0\n5796.0\n7470.0\n14.1\n12.3\n15.9\n02000\n\n\n100\n4000\nAZ\nArizona\nNaN\nNaN\nNaN\nNaN\n919680.0\n900349.0\n939011.0\n...\n68967.0\n68287.0\n69647.0\n76649.0\n71494.0\n81804.0\n19.7\n18.4\n21.0\n04000\n\n\n116\n5000\nAR\nArkansas\nNaN\nNaN\nNaN\nNaN\n471195.0\n458260.0\n484130.0\n...\n52577.0\n51595.0\n53559.0\n45096.0\n42186.0\n48006.0\n25.5\n23.9\n27.1\n05000\n\n\n192\n6000\nCA\nCalifornia\nNaN\nNaN\nNaN\nNaN\n4742405.0\n4689999.0\n4794811.0\n...\n84831.0\n84292.0\n85370.0\n339169.0\n326796.0\n351542.0\n15.8\n15.2\n16.4\n06000\n\n\n251\n8000\nCO\nColorado\nNaN\nNaN\nNaN\nNaN\n554126.0\n540035.0\n568217.0\n...\n82228.0\n81447.0\n83009.0\n39308.0\n35584.0\n43032.0\n12.8\n11.6\n14.0\n08000\n\n\n316\n9000\nCT\nConnecticut\nNaN\nNaN\nNaN\nNaN\n355861.0\n344138.0\n367584.0\n...\n83628.0\n82542.0\n84714.0\n24150.0\n21569.0\n26731.0\n13.9\n12.4\n15.4\n09000\n\n\n325\n10000\nDE\nDelaware\nNaN\nNaN\nNaN\nNaN\n113026.0\n107766.0\n118286.0\n...\n71636.0\n69940.0\n73332.0\n9694.0\n8679.0\n10709.0\n18.6\n16.6\n20.6\n10000\n\n\n329\n11000\nDC\nDistrict of Columbia\nNaN\nNaN\nNaN\nNaN\n107307.0\n101426.0\n113188.0\n...\n91072.0\n88170.0\n93974.0\n9444.0\n8334.0\n10554.0\n24.3\n21.4\n27.2\n11000\n\n\n331\n12000\nFL\nFlorida\nNaN\nNaN\nNaN\nNaN\n2830813.0\n2790138.0\n2871488.0\n...\n63054.0\n62631.0\n63477.0\n212346.0\n200017.0\n224675.0\n19.8\n18.7\n20.9\n12000\n\n\n399\n13000\nGA\nGeorgia\nNaN\nNaN\nNaN\nNaN\n1493837.0\n1463589.0\n1524085.0\n...\n66507.0\n65802.0\n67212.0\n135538.0\n128008.0\n143068.0\n22.0\n20.8\n23.2\n13000\n\n\n559\n15000\nHI\nHawaii\nNaN\nNaN\nNaN\nNaN\n152656.0\n146272.0\n159040.0\n...\n85547.0\n83548.0\n87546.0\n10150.0\n8658.0\n11642.0\n12.9\n11.0\n14.8\n15000\n\n\n565\n16000\nID\nIdaho\nNaN\nNaN\nNaN\nNaN\n202091.0\n193474.0\n210708.0\n...\n66318.0\n64668.0\n67968.0\n17074.0\n15118.0\n19030.0\n15.4\n13.6\n17.2\n16000\n\n\n610\n17000\nIL\nIllinois\nNaN\nNaN\nNaN\nNaN\n1493042.0\n1465135.0\n1520949.0\n...\n72215.0\n71645.0\n72785.0\n120015.0\n114563.0\n125467.0\n17.5\n16.7\n18.3\n17000\n\n\n713\n18000\nIN\nIndiana\nNaN\nNaN\nNaN\nNaN\n799733.0\n782428.0\n817038.0\n...\n62723.0\n62015.0\n63431.0\n69805.0\n64751.0\n74859.0\n17.7\n16.4\n19.0\n18000\n\n\n806\n19000\nIA\nIowa\nNaN\nNaN\nNaN\nNaN\n340626.0\n329373.0\n351879.0\n...\n65645.0\n64876.0\n66414.0\n24541.0\n22373.0\n26709.0\n13.3\n12.1\n14.5\n19000\n\n\n906\n20000\nKS\nKansas\nNaN\nNaN\nNaN\nNaN\n332457.0\n322234.0\n342680.0\n...\n64128.0\n63194.0\n65062.0\n27811.0\n25370.0\n30252.0\n16.0\n14.6\n17.4\n20000\n\n\n1012\n21000\nKY\nKentucky\nNaN\nNaN\nNaN\nNaN\n712023.0\n697813.0\n726233.0\n...\n55532.0\n54838.0\n56226.0\n60772.0\n57134.0\n64410.0\n23.6\n22.2\n25.0\n21000\n\n\n1133\n22000\nLA\nLouisiana\nNaN\nNaN\nNaN\nNaN\n878477.0\n859106.0\n897848.0\n...\n52090.0\n51348.0\n52832.0\n80375.0\n76164.0\n84586.0\n28.8\n27.3\n30.3\n22000\n\n\n1198\n23000\nME\nMaine\nNaN\nNaN\nNaN\nNaN\n149571.0\n143213.0\n155929.0\n...\n64823.0\n63604.0\n66042.0\n8895.0\n7789.0\n10001.0\n14.7\n12.9\n16.5\n23000\n\n\n1215\n24000\nMD\nMaryland\nNaN\nNaN\nNaN\nNaN\n620829.0\n603853.0\n637805.0\n...\n90129.0\n89087.0\n91171.0\n51970.0\n47916.0\n56024.0\n15.0\n13.8\n16.2\n24000\n\n\n1240\n25000\nMA\nMassachusetts\nNaN\nNaN\nNaN\nNaN\n701700.0\n685529.0\n717871.0\n...\n89577.0\n88330.0\n90824.0\n44332.0\n40364.0\n48300.0\n13.1\n11.9\n14.3\n25000\n\n\n1255\n26000\nMI\nMichigan\nNaN\nNaN\nNaN\nNaN\n1283086.0\n1261685.0\n1304487.0\n...\n63444.0\n62920.0\n63968.0\n104555.0\n98778.0\n110332.0\n19.5\n18.4\n20.6\n26000\n\n\n1339\n27000\nMN\nMinnesota\nNaN\nNaN\nNaN\nNaN\n519437.0\n507482.0\n531392.0\n...\n77712.0\n76812.0\n78612.0\n36651.0\n33066.0\n40236.0\n11.1\n10.0\n12.2\n27000\n\n\n1427\n28000\nMS\nMississippi\nNaN\nNaN\nNaN\nNaN\n549710.0\n536691.0\n562729.0\n...\n48871.0\n47663.0\n50079.0\n51862.0\n48648.0\n55076.0\n30.3\n28.4\n32.2\n28000\n\n\n1510\n29000\nMO\nMissouri\nNaN\nNaN\nNaN\nNaN\n765097.0\n748927.0\n781267.0\n...\n61815.0\n61152.0\n62478.0\n63067.0\n58984.0\n67150.0\n18.1\n16.9\n19.3\n29000\n\n\n1626\n30000\nMT\nMontana\nNaN\nNaN\nNaN\nNaN\n129910.0\n124852.0\n134968.0\n...\n63357.0\n61990.0\n64724.0\n9726.0\n8698.0\n10754.0\n17.2\n15.4\n19.0\n30000\n\n\n1683\n31000\nNE\nNebraska\nNaN\nNaN\nNaN\nNaN\n201627.0\n194607.0\n208647.0\n...\n66949.0\n65911.0\n67987.0\n16432.0\n14419.0\n18445.0\n13.4\n11.8\n15.0\n31000\n\n\n1777\n32000\nNV\nNevada\nNaN\nNaN\nNaN\nNaN\n433095.0\n420882.0\n445308.0\n...\n66194.0\n65202.0\n67186.0\n36365.0\n33278.0\n39452.0\n21.0\n19.2\n22.8\n32000\n\n\n1795\n33000\nNH\nNew Hampshire\nNaN\nNaN\nNaN\nNaN\n99562.0\n94623.0\n104501.0\n...\n88268.0\n86293.0\n90243.0\n5622.0\n4665.0\n6579.0\n9.4\n7.8\n11.0\n33000\n\n\n1806\n34000\nNJ\nNew Jersey\nNaN\nNaN\nNaN\nNaN\n925852.0\n905573.0\n946131.0\n...\n89227.0\n88164.0\n90290.0\n76282.0\n70767.0\n81797.0\n15.0\n13.9\n16.1\n34000\n\n\n1828\n35000\nNM\nNew Mexico\nNaN\nNaN\nNaN\nNaN\n367050.0\n354401.0\n379699.0\n...\n54304.0\n52878.0\n55730.0\n28231.0\n25602.0\n30860.0\n25.1\n22.8\n27.4\n35000\n\n\n1862\n36000\nNY\nNew York\nNaN\nNaN\nNaN\nNaN\n2703053.0\n2668539.0\n2737567.0\n...\n74230.0\n73620.0\n74840.0\n207920.0\n197263.0\n218577.0\n19.5\n18.5\n20.5\n36000\n\n\n1925\n37000\nNC\nNorth Carolina\nNaN\nNaN\nNaN\nNaN\n1383626.0\n1357735.0\n1409517.0\n...\n61997.0\n61459.0\n62535.0\n116355.0\n109438.0\n123272.0\n20.2\n19.0\n21.4\n37000\n\n\n2026\n38000\nND\nNorth Dakota\nNaN\nNaN\nNaN\nNaN\n82270.0\n78002.0\n86538.0\n...\n67603.0\n65854.0\n69352.0\n6455.0\n5510.0\n7400.0\n12.9\n11.0\n14.8\n38000\n\n\n2080\n39000\nOH\nOhio\nNaN\nNaN\nNaN\nNaN\n1523366.0\n1498525.0\n1548207.0\n...\n62286.0\n61832.0\n62740.0\n135658.0\n129038.0\n142278.0\n20.7\n19.7\n21.7\n39000\n\n\n2169\n40000\nOK\nOklahoma\nNaN\nNaN\nNaN\nNaN\n599003.0\n587366.0\n610640.0\n...\n55829.0\n55210.0\n56448.0\n56598.0\n53190.0\n60006.0\n23.6\n22.2\n25.0\n40000\n\n\n2247\n41000\nOR\nOregon\nNaN\nNaN\nNaN\nNaN\n507504.0\n493784.0\n521224.0\n...\n71441.0\n70406.0\n72476.0\n29637.0\n26737.0\n32537.0\n14.6\n13.2\n16.0\n41000\n\n\n2284\n42000\nPA\nPennsylvania\nNaN\nNaN\nNaN\nNaN\n1503929.0\n1480307.0\n1527551.0\n...\n68931.0\n68429.0\n69433.0\n116290.0\n109264.0\n123316.0\n17.5\n16.4\n18.6\n42000\n\n\n2352\n44000\nRI\nRhode Island\nNaN\nNaN\nNaN\nNaN\n126971.0\n121343.0\n132599.0\n...\n73324.0\n71173.0\n75475.0\n9556.0\n8437.0\n10675.0\n18.6\n16.4\n20.8\n44000\n\n\n2358\n45000\nSC\nSouth Carolina\nNaN\nNaN\nNaN\nNaN\n736098.0\n719691.0\n752505.0\n...\n59447.0\n58606.0\n60288.0\n59011.0\n55007.0\n63015.0\n21.5\n20.0\n23.0\n45000\n\n\n2405\n46000\nSD\nSouth Dakota\nNaN\nNaN\nNaN\nNaN\n103337.0\n99076.0\n107598.0\n...\n66843.0\n64779.0\n68907.0\n9423.0\n8334.0\n10512.0\n16.5\n14.6\n18.4\n46000\n\n\n2472\n47000\nTN\nTennessee\nNaN\nNaN\nNaN\nNaN\n934856.0\n915693.0\n954019.0\n...\n59698.0\n58920.0\n60476.0\n75501.0\n70440.0\n80562.0\n19.3\n18.0\n20.6\n47000\n\n\n2568\n48000\nTX\nTexas\nNaN\nNaN\nNaN\nNaN\n4122799.0\n4067445.0\n4178153.0\n...\n66959.0\n66448.0\n67470.0\n393888.0\n378420.0\n409356.0\n21.2\n20.4\n22.0\n48000\n\n\n2823\n49000\nUT\nUtah\nNaN\nNaN\nNaN\nNaN\n286086.0\n273709.0\n298463.0\n...\n79449.0\n78242.0\n80656.0\n22873.0\n20451.0\n25295.0\n9.8\n8.8\n10.8\n49000\n\n\n2853\n50000\nVT\nVermont\nNaN\nNaN\nNaN\nNaN\n63208.0\n59860.0\n66556.0\n...\n72415.0\n70396.0\n74434.0\n3196.0\n2682.0\n3710.0\n11.6\n9.7\n13.5\n50000\n\n\n2868\n51000\nVA\nVirginia\nNaN\nNaN\nNaN\nNaN\n862792.0\n843622.0\n881962.0\n...\n80926.0\n80203.0\n81649.0\n69303.0\n64164.0\n74442.0\n14.4\n13.3\n15.5\n51000\n\n\n3002\n53000\nWA\nWashington\nNaN\nNaN\nNaN\nNaN\n755589.0\n738622.0\n772556.0\n...\n84155.0\n83322.0\n84988.0\n53637.0\n48940.0\n58334.0\n12.7\n11.6\n13.8\n53000\n\n\n3042\n54000\nWV\nWest Virginia\nNaN\nNaN\nNaN\nNaN\n291051.0\n282054.0\n300048.0\n...\n51122.0\n50059.0\n52185.0\n21090.0\n19436.0\n22744.0\n24.7\n22.8\n26.6\n54000\n\n\n3098\n55000\nWI\nWisconsin\nNaN\nNaN\nNaN\nNaN\n622948.0\n610655.0\n635241.0\n...\n67150.0\n66549.0\n67751.0\n44523.0\n41734.0\n47312.0\n14.3\n13.4\n15.2\n55000\n\n\n3171\n56000\nWY\nWyoming\nNaN\nNaN\nNaN\nNaN\n60226.0\n56527.0\n63925.0\n...\n66508.0\n64077.0\n68939.0\n4455.0\n3781.0\n5129.0\n14.2\n12.0\n16.4\n56000\n\n\n\n\n52 rows × 35 columns\n\n\n\n\ncounties = df[~df.fips_str.str.endswith('000')]\n\n\ncounties.head()\n\n\n\n\n\n\n\n\nFIPS_Code\nStabr\nArea_name\nRural-urban_Continuum_Code_2003\nUrban_Influence_Code_2003\nRural-urban_Continuum_Code_2013\nUrban_Influence_Code_ 2013\nPOVALL_2021\nCI90LBALL_2021\nCI90UBALL_2021\n...\nMEDHHINC_2021\nCI90LBINC_2021\nCI90UBINC_2021\nPOV04_2021\nCI90LB04_2021\nCI90UB04_2021\nPCTPOV04_2021\nCI90LB04P_2021\nCI90UB04P_2021\nfips_str\n\n\n\n\n2\n1001\nAL\nAutauga County\n2.0\n2.0\n2.0\n2.0\n6296.0\n4772.0\n7820.0\n...\n66444.0\n60061.0\n72827.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01001\n\n\n3\n1003\nAL\nBaldwin County\n4.0\n5.0\n3.0\n2.0\n25526.0\n21599.0\n29453.0\n...\n65658.0\n60723.0\n70593.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01003\n\n\n4\n1005\nAL\nBarbour County\n6.0\n6.0\n6.0\n6.0\n5089.0\n3773.0\n6405.0\n...\n38649.0\n34308.0\n42990.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01005\n\n\n5\n1007\nAL\nBibb County\n1.0\n1.0\n1.0\n1.0\n4204.0\n3324.0\n5084.0\n...\n48454.0\n42438.0\n54470.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01007\n\n\n6\n1009\nAL\nBlount County\n1.0\n1.0\n1.0\n1.0\n6992.0\n5516.0\n8468.0\n...\n56894.0\n52632.0\n61156.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01009\n\n\n\n\n5 rows × 35 columns\n\n\n\n\ncounties.shape\n\n(3143, 35)\n\n\n\ncounties.groupby(by='Stabr').count()\n\n\n\n\n\n\n\n\nFIPS_Code\nArea_name\nRural-urban_Continuum_Code_2003\nUrban_Influence_Code_2003\nRural-urban_Continuum_Code_2013\nUrban_Influence_Code_ 2013\nPOVALL_2021\nCI90LBALL_2021\nCI90UBALL_2021\nPCTPOVALL_2021\n...\nMEDHHINC_2021\nCI90LBINC_2021\nCI90UBINC_2021\nPOV04_2021\nCI90LB04_2021\nCI90UB04_2021\nPCTPOV04_2021\nCI90LB04P_2021\nCI90UB04P_2021\nfips_str\n\n\nStabr\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAK\n30\n30\n23\n23\n28\n28\n30\n30\n30\n30\n...\n30\n30\n30\n0\n0\n0\n0\n0\n0\n30\n\n\nAL\n67\n67\n67\n67\n67\n67\n67\n67\n67\n67\n...\n67\n67\n67\n0\n0\n0\n0\n0\n0\n67\n\n\nAR\n75\n75\n75\n75\n75\n75\n75\n75\n75\n75\n...\n75\n75\n75\n0\n0\n0\n0\n0\n0\n75\n\n\nAZ\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n...\n15\n15\n15\n0\n0\n0\n0\n0\n0\n15\n\n\nCA\n58\n58\n58\n58\n58\n58\n58\n58\n58\n58\n...\n58\n58\n58\n0\n0\n0\n0\n0\n0\n58\n\n\nCO\n64\n64\n64\n64\n64\n64\n64\n64\n64\n64\n...\n64\n64\n64\n0\n0\n0\n0\n0\n0\n64\n\n\nCT\n8\n8\n8\n8\n8\n8\n8\n8\n8\n8\n...\n8\n8\n8\n0\n0\n0\n0\n0\n0\n8\n\n\nDC\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n...\n1\n1\n1\n0\n0\n0\n0\n0\n0\n1\n\n\nDE\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n...\n3\n3\n3\n0\n0\n0\n0\n0\n0\n3\n\n\nFL\n67\n67\n67\n67\n67\n67\n67\n67\n67\n67\n...\n67\n67\n67\n0\n0\n0\n0\n0\n0\n67\n\n\nGA\n159\n159\n159\n159\n159\n159\n159\n159\n159\n159\n...\n159\n159\n159\n0\n0\n0\n0\n0\n0\n159\n\n\nHI\n5\n5\n5\n5\n5\n5\n4\n4\n4\n4\n...\n4\n4\n4\n0\n0\n0\n0\n0\n0\n5\n\n\nIA\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n...\n99\n99\n99\n0\n0\n0\n0\n0\n0\n99\n\n\nID\n44\n44\n44\n44\n44\n44\n44\n44\n44\n44\n...\n44\n44\n44\n0\n0\n0\n0\n0\n0\n44\n\n\nIL\n102\n102\n102\n102\n102\n102\n102\n102\n102\n102\n...\n102\n102\n102\n0\n0\n0\n0\n0\n0\n102\n\n\nIN\n92\n92\n92\n92\n92\n92\n92\n92\n92\n92\n...\n92\n92\n92\n0\n0\n0\n0\n0\n0\n92\n\n\nKS\n105\n105\n105\n105\n105\n105\n105\n105\n105\n105\n...\n105\n105\n105\n0\n0\n0\n0\n0\n0\n105\n\n\nKY\n120\n120\n120\n120\n120\n120\n120\n120\n120\n120\n...\n120\n120\n120\n0\n0\n0\n0\n0\n0\n120\n\n\nLA\n64\n64\n64\n64\n64\n64\n64\n64\n64\n64\n...\n64\n64\n64\n0\n0\n0\n0\n0\n0\n64\n\n\nMA\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n...\n14\n14\n14\n0\n0\n0\n0\n0\n0\n14\n\n\nMD\n24\n24\n24\n24\n24\n24\n24\n24\n24\n24\n...\n24\n24\n24\n0\n0\n0\n0\n0\n0\n24\n\n\nME\n16\n16\n16\n16\n16\n16\n16\n16\n16\n16\n...\n16\n16\n16\n0\n0\n0\n0\n0\n0\n16\n\n\nMI\n83\n83\n83\n83\n83\n83\n83\n83\n83\n83\n...\n83\n83\n83\n0\n0\n0\n0\n0\n0\n83\n\n\nMN\n87\n87\n87\n87\n87\n87\n87\n87\n87\n87\n...\n87\n87\n87\n0\n0\n0\n0\n0\n0\n87\n\n\nMO\n115\n115\n115\n115\n115\n115\n115\n115\n115\n115\n...\n115\n115\n115\n0\n0\n0\n0\n0\n0\n115\n\n\nMS\n82\n82\n82\n82\n82\n82\n82\n82\n82\n82\n...\n82\n82\n82\n0\n0\n0\n0\n0\n0\n82\n\n\nMT\n56\n56\n56\n56\n56\n56\n56\n56\n56\n56\n...\n56\n56\n56\n0\n0\n0\n0\n0\n0\n56\n\n\nNC\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n...\n100\n100\n100\n0\n0\n0\n0\n0\n0\n100\n\n\nND\n53\n53\n53\n53\n53\n53\n53\n53\n53\n53\n...\n53\n53\n53\n0\n0\n0\n0\n0\n0\n53\n\n\nNE\n93\n93\n93\n93\n93\n93\n93\n93\n93\n93\n...\n93\n93\n93\n0\n0\n0\n0\n0\n0\n93\n\n\nNH\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n...\n10\n10\n10\n0\n0\n0\n0\n0\n0\n10\n\n\nNJ\n21\n21\n21\n21\n21\n21\n21\n21\n21\n21\n...\n21\n21\n21\n0\n0\n0\n0\n0\n0\n21\n\n\nNM\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n...\n33\n33\n33\n0\n0\n0\n0\n0\n0\n33\n\n\nNV\n17\n17\n17\n17\n17\n17\n17\n17\n17\n17\n...\n17\n17\n17\n0\n0\n0\n0\n0\n0\n17\n\n\nNY\n62\n62\n62\n62\n62\n62\n62\n62\n62\n62\n...\n62\n62\n62\n0\n0\n0\n0\n0\n0\n62\n\n\nOH\n88\n88\n88\n88\n88\n88\n88\n88\n88\n88\n...\n88\n88\n88\n0\n0\n0\n0\n0\n0\n88\n\n\nOK\n77\n77\n77\n77\n77\n77\n77\n77\n77\n77\n...\n77\n77\n77\n0\n0\n0\n0\n0\n0\n77\n\n\nOR\n36\n36\n36\n36\n36\n36\n36\n36\n36\n36\n...\n36\n36\n36\n0\n0\n0\n0\n0\n0\n36\n\n\nPA\n67\n67\n67\n67\n67\n67\n67\n67\n67\n67\n...\n67\n67\n67\n0\n0\n0\n0\n0\n0\n67\n\n\nRI\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n...\n5\n5\n5\n0\n0\n0\n0\n0\n0\n5\n\n\nSC\n46\n46\n46\n46\n46\n46\n46\n46\n46\n46\n...\n46\n46\n46\n0\n0\n0\n0\n0\n0\n46\n\n\nSD\n66\n66\n66\n66\n66\n66\n66\n66\n66\n66\n...\n66\n66\n66\n0\n0\n0\n0\n0\n0\n66\n\n\nTN\n95\n95\n95\n95\n95\n95\n95\n95\n95\n95\n...\n95\n95\n95\n0\n0\n0\n0\n0\n0\n95\n\n\nTX\n254\n254\n254\n254\n254\n254\n254\n254\n254\n254\n...\n254\n254\n254\n0\n0\n0\n0\n0\n0\n254\n\n\nUT\n29\n29\n29\n29\n29\n29\n29\n29\n29\n29\n...\n29\n29\n29\n0\n0\n0\n0\n0\n0\n29\n\n\nVA\n133\n133\n133\n133\n133\n133\n133\n133\n133\n133\n...\n133\n133\n133\n0\n0\n0\n0\n0\n0\n133\n\n\nVT\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n...\n14\n14\n14\n0\n0\n0\n0\n0\n0\n14\n\n\nWA\n39\n39\n39\n39\n39\n39\n39\n39\n39\n39\n...\n39\n39\n39\n0\n0\n0\n0\n0\n0\n39\n\n\nWI\n72\n72\n72\n72\n72\n72\n72\n72\n72\n72\n...\n72\n72\n72\n0\n0\n0\n0\n0\n0\n72\n\n\nWV\n55\n55\n55\n55\n55\n55\n55\n55\n55\n55\n...\n55\n55\n55\n0\n0\n0\n0\n0\n0\n55\n\n\nWY\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n...\n23\n23\n23\n0\n0\n0\n0\n0\n0\n23\n\n\n\n\n51 rows × 34 columns\n\n\n\n\ncounties.columns\n\nIndex(['FIPS_Code', 'Stabr', 'Area_name', 'Rural-urban_Continuum_Code_2003',\n       'Urban_Influence_Code_2003', 'Rural-urban_Continuum_Code_2013',\n       'Urban_Influence_Code_ 2013', 'POVALL_2021', 'CI90LBALL_2021',\n       'CI90UBALL_2021', 'PCTPOVALL_2021', 'CI90LBALLP_2021',\n       'CI90UBALLP_2021', 'POV017_2021', 'CI90LB017_2021', 'CI90UB017_2021',\n       'PCTPOV017_2021', 'CI90LB017P_2021', 'CI90UB017P_2021', 'POV517_2021',\n       'CI90LB517_2021', 'CI90UB517_2021', 'PCTPOV517_2021', 'CI90LB517P_2021',\n       'CI90UB517P_2021', 'MEDHHINC_2021', 'CI90LBINC_2021', 'CI90UBINC_2021',\n       'POV04_2021', 'CI90LB04_2021', 'CI90UB04_2021', 'PCTPOV04_2021',\n       'CI90LB04P_2021', 'CI90UB04P_2021', 'fips_str'],\n      dtype='object')\n\n\n\ncounties[['Stabr', 'Area_name', 'PCTPOVALL_2021']]\n\n\n\n\n\n\n\n\nStabr\nArea_name\nPCTPOVALL_2021\n\n\n\n\n2\nAL\nAutauga County\n10.7\n\n\n3\nAL\nBaldwin County\n10.8\n\n\n4\nAL\nBarbour County\n23.0\n\n\n5\nAL\nBibb County\n20.6\n\n\n6\nAL\nBlount County\n12.0\n\n\n...\n...\n...\n...\n\n\n3190\nWY\nSweetwater County\n9.2\n\n\n3191\nWY\nTeton County\n5.9\n\n\n3192\nWY\nUinta County\n9.4\n\n\n3193\nWY\nWashakie County\n10.2\n\n\n3194\nWY\nWeston County\n10.4\n\n\n\n\n3143 rows × 3 columns\n\n\n\n\ncounties[['Stabr', 'PCTPOVALL_2021']].groupby(by='Stabr').mean()\n\n\n\n\n\n\n\n\nPCTPOVALL_2021\n\n\nStabr\n\n\n\n\n\nAK\n13.750000\n\n\nAL\n19.455224\n\n\nAR\n18.750667\n\n\nAZ\n17.273333\n\n\nCA\n13.631034\n\n\nCO\n12.567188\n\n\nCT\n9.812500\n\n\nDC\n16.800000\n\n\nDE\n11.700000\n\n\nFL\n15.588060\n\n\nGA\n18.422642\n\n\nHI\n11.825000\n\n\nIA\n10.714141\n\n\nID\n11.970455\n\n\nIL\n12.804902\n\n\nIN\n11.515217\n\n\nKS\n11.903810\n\n\nKY\n19.189167\n\n\nLA\n21.618750\n\n\nMA\n10.278571\n\n\nMD\n10.991667\n\n\nME\n12.318750\n\n\nMI\n13.059036\n\n\nMN\n10.154023\n\n\nMO\n14.923478\n\n\nMS\n22.253659\n\n\nMT\n13.532143\n\n\nNC\n15.931000\n\n\nND\n12.286792\n\n\nNE\n10.847312\n\n\nNH\n8.510000\n\n\nNJ\n9.880952\n\n\nNM\n20.169697\n\n\nNV\n12.111765\n\n\nNY\n12.964516\n\n\nOH\n12.935227\n\n\nOK\n16.790909\n\n\nOR\n13.936111\n\n\nPA\n12.043284\n\n\nRI\n9.760000\n\n\nSC\n18.200000\n\n\nSD\n14.921212\n\n\nTN\n15.463158\n\n\nTX\n15.837008\n\n\nUT\n10.206897\n\n\nVA\n13.260902\n\n\nVT\n10.435714\n\n\nWA\n12.215385\n\n\nWI\n10.695833\n\n\nWV\n18.060000\n\n\nWY\n10.773913\n\n\n\n\n\n\n\n\ncounties[['Stabr', 'PCTPOVALL_2021']].groupby(by='Stabr').max()\n\n\n\n\n\n\n\n\nPCTPOVALL_2021\n\n\nStabr\n\n\n\n\n\nAK\n30.4\n\n\nAL\n35.1\n\n\nAR\n35.7\n\n\nAZ\n28.4\n\n\nCA\n21.9\n\n\nCO\n37.8\n\n\nCT\n12.0\n\n\nDC\n16.8\n\n\nDE\n12.2\n\n\nFL\n26.3\n\n\nGA\n34.0\n\n\nHI\n14.7\n\n\nIA\n17.9\n\n\nID\n17.9\n\n\nIL\n22.3\n\n\nIN\n21.1\n\n\nKS\n21.3\n\n\nKY\n40.5\n\n\nLA\n39.9\n\n\nMA\n18.5\n\n\nMD\n23.6\n\n\nME\n18.2\n\n\nMI\n20.7\n\n\nMN\n18.7\n\n\nMO\n23.9\n\n\nMS\n43.9\n\n\nMT\n25.7\n\n\nNC\n27.9\n\n\nND\n42.8\n\n\nNE\n19.3\n\n\nNH\n12.5\n\n\nNJ\n15.9\n\n\nNM\n30.3\n\n\nNV\n18.3\n\n\nNY\n26.4\n\n\nOH\n23.9\n\n\nOK\n27.8\n\n\nOR\n20.0\n\n\nPA\n22.3\n\n\nRI\n14.3\n\n\nSC\n35.4\n\n\nSD\n43.5\n\n\nTN\n33.4\n\n\nTX\n34.3\n\n\nUT\n26.8\n\n\nVA\n25.6\n\n\nVT\n14.4\n\n\nWA\n18.1\n\n\nWI\n24.2\n\n\nWV\n31.7\n\n\nWY\n17.7"
  },
  {
    "objectID": "week-03/0201_geopandas.html",
    "href": "week-03/0201_geopandas.html",
    "title": "GeoPandas",
    "section": "",
    "text": "import os\n\nos.environ['PROJ_LIB'] = '/opt/tljh/user/share/proj'\n\n\nimport requests\n\nurl=\"https://raw.githubusercontent.com/plotly/datasets/master/geojson-counties-fips.json\"\noutput_file = 'counties-fips.json'\n\n\nresponse = requests.get(url)\n\nif response.status_code == 200:\n    with open(output_file, 'wb') as file:\n        file.write(response.content)\n    print(f\"File downloaded as '{output_file}'\")\nelse:\n    print(f\"Failed to download file. Status code: {response.status_code}\")\n\nFile downloaded as 'counties-fips.json'\n\n\n\nimport geopandas as gpd\n\n\nimport pandas as pd\n\n\ngdf = gpd.read_file(\"counties-fips.json\")\n\n\ngdf.shape\n\n(3221, 8)\n\n\n\ntype(gdf)\n\ngeopandas.geodataframe.GeoDataFrame\n\n\n\ngdf.head()\n\n\n\n\n\n\n\n\nid\nGEO_ID\nSTATE\nCOUNTY\nNAME\nLSAD\nCENSUSAREA\ngeometry\n\n\n\n\n0\n01001\n0500000US01001\n01\n001\nAutauga\nCounty\n594.436\nPOLYGON ((-86.49677 32.34444, -86.71790 32.402...\n\n\n1\n01009\n0500000US01009\n01\n009\nBlount\nCounty\n644.776\nPOLYGON ((-86.57780 33.76532, -86.75914 33.840...\n\n\n2\n01017\n0500000US01017\n01\n017\nChambers\nCounty\n596.531\nPOLYGON ((-85.18413 32.87053, -85.12342 32.772...\n\n\n3\n01021\n0500000US01021\n01\n021\nChilton\nCounty\n692.854\nPOLYGON ((-86.51734 33.02057, -86.51596 32.929...\n\n\n4\n01033\n0500000US01033\n01\n033\nColbert\nCounty\n592.619\nPOLYGON ((-88.13999 34.58170, -88.13925 34.587...\n\n\n\n\n\n\n\n\ngdf.dtypes\n\nid              object\nGEO_ID          object\nSTATE           object\nCOUNTY          object\nNAME            object\nLSAD            object\nCENSUSAREA     float64\ngeometry      geometry\ndtype: object\n\n\n\ngdf.plot()\n\n&lt;Axes: &gt;\n\n\n\n\n\n\ngdf.shape\n\n(3221, 8)\n\n\n\ngdf.columns\n\nIndex(['id', 'GEO_ID', 'STATE', 'COUNTY', 'NAME', 'LSAD', 'CENSUSAREA',\n       'geometry'],\n      dtype='object')\n\n\n\ndf = pd.read_excel('PovertyEstimates.xlsx', 'PovertyEstimates', skiprows=4)\n\n\ndf.head()\n\n\n\n\n\n\n\n\nFIPS_Code\nStabr\nArea_name\nRural-urban_Continuum_Code_2003\nUrban_Influence_Code_2003\nRural-urban_Continuum_Code_2013\nUrban_Influence_Code_ 2013\nPOVALL_2021\nCI90LBALL_2021\nCI90UBALL_2021\n...\nCI90UB517P_2021\nMEDHHINC_2021\nCI90LBINC_2021\nCI90UBINC_2021\nPOV04_2021\nCI90LB04_2021\nCI90UB04_2021\nPCTPOV04_2021\nCI90LB04P_2021\nCI90UB04P_2021\n\n\n\n\n0\n0\nUS\nUnited States\nNaN\nNaN\nNaN\nNaN\n41393176.0\n41149497.0\n41636855.0\n...\n16.3\n69717.0\n69583.0\n69851.0\n3349149.0\n3299669.0\n3398629.0\n18.3\n18.0\n18.6\n\n\n1\n1000\nAL\nAlabama\nNaN\nNaN\nNaN\nNaN\n800848.0\n782169.0\n819527.0\n...\n22.5\n53990.0\n53218.0\n54762.0\n71220.0\n66888.0\n75552.0\n25.1\n23.6\n26.6\n\n\n2\n1001\nAL\nAutauga County\n2.0\n2.0\n2.0\n2.0\n6296.0\n4772.0\n7820.0\n...\n20.4\n66444.0\n60061.0\n72827.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n3\n1003\nAL\nBaldwin County\n4.0\n5.0\n3.0\n2.0\n25526.0\n21599.0\n29453.0\n...\n18.5\n65658.0\n60723.0\n70593.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n4\n1005\nAL\nBarbour County\n6.0\n6.0\n6.0\n6.0\n5089.0\n3773.0\n6405.0\n...\n44.6\n38649.0\n34308.0\n42990.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n5 rows × 34 columns\n\n\n\n\ngdf.head()\n\n\n\n\n\n\n\n\nid\nGEO_ID\nSTATE\nCOUNTY\nNAME\nLSAD\nCENSUSAREA\ngeometry\n\n\n\n\n0\n01001\n0500000US01001\n01\n001\nAutauga\nCounty\n594.436\nPOLYGON ((-86.49677 32.34444, -86.71790 32.402...\n\n\n1\n01009\n0500000US01009\n01\n009\nBlount\nCounty\n644.776\nPOLYGON ((-86.57780 33.76532, -86.75914 33.840...\n\n\n2\n01017\n0500000US01017\n01\n017\nChambers\nCounty\n596.531\nPOLYGON ((-85.18413 32.87053, -85.12342 32.772...\n\n\n3\n01021\n0500000US01021\n01\n021\nChilton\nCounty\n692.854\nPOLYGON ((-86.51734 33.02057, -86.51596 32.929...\n\n\n4\n01033\n0500000US01033\n01\n033\nColbert\nCounty\n592.619\nPOLYGON ((-88.13999 34.58170, -88.13925 34.587...\n\n\n\n\n\n\n\n\ndf['fips'] = df.FIPS_Code.astype(str).str.zfill(5)\n\n\ndf.fips\n\n0       00000\n1       01000\n2       01001\n3       01003\n4       01005\n        ...  \n3190    56037\n3191    56039\n3192    56041\n3193    56043\n3194    56045\nName: fips, Length: 3195, dtype: object\n\n\n\ngdf1 = gdf.merge(df, left_on='id', right_on='fips', how='left')\n\n\ngdf1.shape\n\n(3221, 43)\n\n\n\ngdf.shape\n\n(3221, 8)\n\n\n\ngdf1.head()\n\n\n\n\n\n\n\n\nid\nGEO_ID\nSTATE\nCOUNTY\nNAME\nLSAD\nCENSUSAREA\ngeometry\nFIPS_Code\nStabr\n...\nMEDHHINC_2021\nCI90LBINC_2021\nCI90UBINC_2021\nPOV04_2021\nCI90LB04_2021\nCI90UB04_2021\nPCTPOV04_2021\nCI90LB04P_2021\nCI90UB04P_2021\nfips\n\n\n\n\n0\n01001\n0500000US01001\n01\n001\nAutauga\nCounty\n594.436\nPOLYGON ((-86.49677 32.34444, -86.71790 32.402...\n1001.0\nAL\n...\n66444.0\n60061.0\n72827.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01001\n\n\n1\n01009\n0500000US01009\n01\n009\nBlount\nCounty\n644.776\nPOLYGON ((-86.57780 33.76532, -86.75914 33.840...\n1009.0\nAL\n...\n56894.0\n52632.0\n61156.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01009\n\n\n2\n01017\n0500000US01017\n01\n017\nChambers\nCounty\n596.531\nPOLYGON ((-85.18413 32.87053, -85.12342 32.772...\n1017.0\nAL\n...\n45447.0\n40729.0\n50165.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01017\n\n\n3\n01021\n0500000US01021\n01\n021\nChilton\nCounty\n692.854\nPOLYGON ((-86.51734 33.02057, -86.51596 32.929...\n1021.0\nAL\n...\n55142.0\n49687.0\n60597.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01021\n\n\n4\n01033\n0500000US01033\n01\n033\nColbert\nCounty\n592.619\nPOLYGON ((-88.13999 34.58170, -88.13925 34.587...\n1033.0\nAL\n...\n53341.0\n48729.0\n57953.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01033\n\n\n\n\n5 rows × 43 columns\n\n\n\n\ngdf1.columns\n\nIndex(['id', 'GEO_ID', 'STATE', 'COUNTY', 'NAME', 'LSAD', 'CENSUSAREA',\n       'geometry', 'FIPS_Code', 'Stabr', 'Area_name',\n       'Rural-urban_Continuum_Code_2003', 'Urban_Influence_Code_2003',\n       'Rural-urban_Continuum_Code_2013', 'Urban_Influence_Code_ 2013',\n       'POVALL_2021', 'CI90LBALL_2021', 'CI90UBALL_2021', 'PCTPOVALL_2021',\n       'CI90LBALLP_2021', 'CI90UBALLP_2021', 'POV017_2021', 'CI90LB017_2021',\n       'CI90UB017_2021', 'PCTPOV017_2021', 'CI90LB017P_2021',\n       'CI90UB017P_2021', 'POV517_2021', 'CI90LB517_2021', 'CI90UB517_2021',\n       'PCTPOV517_2021', 'CI90LB517P_2021', 'CI90UB517P_2021', 'MEDHHINC_2021',\n       'CI90LBINC_2021', 'CI90UBINC_2021', 'POV04_2021', 'CI90LB04_2021',\n       'CI90UB04_2021', 'PCTPOV04_2021', 'CI90LB04P_2021', 'CI90UB04P_2021',\n       'fips'],\n      dtype='object')\n\n\n\ngdf.columns\n\nIndex(['id', 'GEO_ID', 'STATE', 'COUNTY', 'NAME', 'LSAD', 'CENSUSAREA',\n       'geometry'],\n      dtype='object')\n\n\n\nca = gdf1[gdf1.STATE=='06']\n\n\nca.shape\n\n(58, 43)\n\n\n\nca.plot(column='PCTPOVALL_2021')\n\n&lt;Axes: &gt;"
  },
  {
    "objectID": "week-02/files-dirs.html#what-is-unix",
    "href": "week-02/files-dirs.html#what-is-unix",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "What is Unix?",
    "text": "What is Unix?\n\nUnix is a powerful operating system used in many fields, including data science and computer science.\nUnderstanding its file system is crucial for efficient work."
  },
  {
    "objectID": "week-02/files-dirs.html#unix-file-system-basics",
    "href": "week-02/files-dirs.html#unix-file-system-basics",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "Unix File System Basics",
    "text": "Unix File System Basics\n\nThe Unix file system is hierarchical.\nIt consists of directories and files organized in a tree-like structure."
  },
  {
    "objectID": "week-02/files-dirs.html#directory-structure",
    "href": "week-02/files-dirs.html#directory-structure",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "Directory Structure",
    "text": "Directory Structure\n\nThe root directory is the top-level directory.\nHome directories are where users have their own spaces."
  },
  {
    "objectID": "week-02/files-dirs.html#where-am-i",
    "href": "week-02/files-dirs.html#where-am-i",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "Where am I?",
    "text": "Where am I?\nUsing the File Browser\n\n\n\n\n\n\n\n(a) home\n\n\n\n\nFigure 1:"
  },
  {
    "objectID": "week-02/files-dirs.html#where-am-i-1",
    "href": "week-02/files-dirs.html#where-am-i-1",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "Where am I?",
    "text": "Where am I?\nUsing the terminal\n\n\n\n\n\n\n\n(a) terminal home\n\n\n\n\nFigure 2:"
  },
  {
    "objectID": "week-02/files-dirs.html#navigating-the-file-system",
    "href": "week-02/files-dirs.html#navigating-the-file-system",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "Navigating the File System",
    "text": "Navigating the File System\n\nUse ls to list the contents of a directory.\nUse tree to list the hierarchical structure of the directory\nLearn how to change directories using cd."
  },
  {
    "objectID": "week-02/files-dirs.html#ls",
    "href": "week-02/files-dirs.html#ls",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "ls",
    "text": "ls\nls lists the contents of the pwd"
  },
  {
    "objectID": "week-02/files-dirs.html#tree",
    "href": "week-02/files-dirs.html#tree",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "tree",
    "text": "tree\ntree lists the directory structure/tree of the pwd"
  },
  {
    "objectID": "week-02/files-dirs.html#first-level-tree-of-the-root-system",
    "href": "week-02/files-dirs.html#first-level-tree-of-the-root-system",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "First level tree of the root system",
    "text": "First level tree of the root system"
  },
  {
    "objectID": "week-02/files-dirs.html#first-level-tree-of-the-home-directory",
    "href": "week-02/files-dirs.html#first-level-tree-of-the-home-directory",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "First level tree of the /home directory",
    "text": "First level tree of the /home directory"
  },
  {
    "objectID": "week-02/files-dirs.html#my-home",
    "href": "week-02/files-dirs.html#my-home",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "My Home",
    "text": "My Home"
  },
  {
    "objectID": "week-02/files-dirs.html#all-homes",
    "href": "week-02/files-dirs.html#all-homes",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "All Home(s)",
    "text": "All Home(s)"
  },
  {
    "objectID": "week-02/files-dirs.html#clearing-the-terminal",
    "href": "week-02/files-dirs.html#clearing-the-terminal",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "Clearing the terminal",
    "text": "Clearing the terminal\n\nclear will clear the terminal"
  },
  {
    "objectID": "week-02/files-dirs.html#history",
    "href": "week-02/files-dirs.html#history",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "history",
    "text": "history\nTo recall what you have done, use history"
  },
  {
    "objectID": "week-02/files-dirs.html#rerunning-a-command",
    "href": "week-02/files-dirs.html#rerunning-a-command",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "Rerunning a command",
    "text": "Rerunning a command\nAfter using history you can rerun a command without having to retype it:\n\n\n\n\n\n\n\n(a) recall\n\n\n\n\nFigure 3:"
  },
  {
    "objectID": "week-02/files-dirs.html#tab-completion",
    "href": "week-02/files-dirs.html#tab-completion",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "Tab completion",
    "text": "Tab completion\nAnother efficiency feature is tab completion:\n\n\n\n\n\n\n\n(a) tab start\n\n\n\n\nFigure 4:"
  },
  {
    "objectID": "week-02/files-dirs.html#paths",
    "href": "week-02/files-dirs.html#paths",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "Paths",
    "text": "Paths\n\nPaths are used to specify the location of files and directories.\nThere are relative and absolute paths."
  },
  {
    "objectID": "week-02/files-dirs.html#cd-change-directory",
    "href": "week-02/files-dirs.html#cd-change-directory",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "cd change directory",
    "text": "cd change directory"
  },
  {
    "objectID": "week-02/files-dirs.html#cd-shortcuts",
    "href": "week-02/files-dirs.html#cd-shortcuts",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "cd shortcuts",
    "text": "cd shortcuts\n\n\ncd .. moves up one directory to the parent of the current directory\ncd will move you back to your home"
  },
  {
    "objectID": "week-02/files-dirs.html#creating-and-managing-directories-1",
    "href": "week-02/files-dirs.html#creating-and-managing-directories-1",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "Creating and Managing Directories",
    "text": "Creating and Managing Directories\n\nLearn how to create directories using mkdir.\nUse rmdir and rm -r to remove directories."
  },
  {
    "objectID": "week-02/files-dirs.html#mkdir",
    "href": "week-02/files-dirs.html#mkdir",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "mkdir",
    "text": "mkdir\n\n\n\n\n\n\n\n(a) before\n\n\n\n\nFigure 5:"
  },
  {
    "objectID": "week-02/files-dirs.html#file-operations-1",
    "href": "week-02/files-dirs.html#file-operations-1",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "File Operations",
    "text": "File Operations\n\nCreating files with touch.\nCopying, moving, and deleting files."
  },
  {
    "objectID": "week-02/files-dirs.html#creating-a-file-in-a-directory",
    "href": "week-02/files-dirs.html#creating-a-file-in-a-directory",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "Creating a file in a directory",
    "text": "Creating a file in a directory\ncd handson\ntouch data.txt"
  },
  {
    "objectID": "week-02/files-dirs.html#creating-a-file-in-a-directory-2",
    "href": "week-02/files-dirs.html#creating-a-file-in-a-directory-2",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "Creating a file in a directory (2)",
    "text": "Creating a file in a directory (2)\nYou can also create a file in the current directory by selecting the + in the toolbar and selecting Markdown File\n\nFigure 6: File Browser"
  },
  {
    "objectID": "week-02/files-dirs.html#creating-a-file-in-a-directory-2-1",
    "href": "week-02/files-dirs.html#creating-a-file-in-a-directory-2-1",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "Creating a file in a directory (2)",
    "text": "Creating a file in a directory (2)\nYou can also create a file in the current directory by selecting the + in the toolbar and selecting Markdown File\n\nFigure 7: README.md"
  },
  {
    "objectID": "week-02/files-dirs.html#copying-files",
    "href": "week-02/files-dirs.html#copying-files",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "Copying Files",
    "text": "Copying Files\ncp data.txt data.txt.bak"
  },
  {
    "objectID": "week-02/files-dirs.html#deleting-files",
    "href": "week-02/files-dirs.html#deleting-files",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "Deleting Files",
    "text": "Deleting Files\nrm data.txt"
  },
  {
    "objectID": "week-02/files-dirs.html#copying-again",
    "href": "week-02/files-dirs.html#copying-again",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "Copying Again",
    "text": "Copying Again\nLet’s restore our backup"
  },
  {
    "objectID": "week-02/files-dirs.html#copying-between-directories",
    "href": "week-02/files-dirs.html#copying-between-directories",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "Copying Between Directories",
    "text": "Copying Between Directories"
  },
  {
    "objectID": "week-02/files-dirs.html#moving-files-between-directories",
    "href": "week-02/files-dirs.html#moving-files-between-directories",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "Moving Files Between Directories",
    "text": "Moving Files Between Directories"
  },
  {
    "objectID": "week-02/files-dirs.html#creating-and-removing-directories",
    "href": "week-02/files-dirs.html#creating-and-removing-directories",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "Creating and Removing Directories",
    "text": "Creating and Removing Directories"
  },
  {
    "objectID": "week-02/files-dirs.html#creating-and-removing-directories-1",
    "href": "week-02/files-dirs.html#creating-and-removing-directories-1",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "Creating and Removing Directories",
    "text": "Creating and Removing Directories"
  },
  {
    "objectID": "week-02/files-dirs.html#exercise-0",
    "href": "week-02/files-dirs.html#exercise-0",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "Exercise 0",
    "text": "Exercise 0\n\nCreate a directory called notes\nIn that directory create a new jupyter notebook and rename it to files.ipynb\nPractice using Markdown in files.ipynb to structure your notes with headings\nPractice taking screenshots and dragging the images into your notebook.\nPractice formatting code in Markdown cells.\n\nYou will use this notebook to take notes on the remaining exercises."
  },
  {
    "objectID": "week-02/files-dirs.html#exercise-2",
    "href": "week-02/files-dirs.html#exercise-2",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "Exercise 2",
    "text": "Exercise 2\nUsing the File Browser, delete your handson directory and the files living in there"
  },
  {
    "objectID": "week-02/files-dirs.html#exercise-3",
    "href": "week-02/files-dirs.html#exercise-3",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "Exercise 3",
    "text": "Exercise 3\nUsing a terminal:\n\nCreate a directory called handson in your home directory\nSelect the new directory in the File Browser\nFrom the Launcher create a new Markdown file with the name README.md\nAdd some content (using Markdown) inside the README.md file\nBefore using any unix commands, ask youself what the path is for the README.md file."
  },
  {
    "objectID": "week-02/files-dirs.html#exercise-4",
    "href": "week-02/files-dirs.html#exercise-4",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "Exercise 4",
    "text": "Exercise 4\nUsing a terminal:\n\nCreate a directory called week_2 inside your handson directory\nCopy the README.md file into the week_2 directory."
  },
  {
    "objectID": "week-02/files-dirs.html#exercise-5",
    "href": "week-02/files-dirs.html#exercise-5",
    "title": "Introduction to Unix File System with Jupyter Lab",
    "section": "Exercise 5",
    "text": "Exercise 5\nUsing a terminal\n\nCreate a directory called temp in the week_2 directory.\nCreate a file in the temp directory called data.txt\nDelete the directory temp in the week_2 directory"
  },
  {
    "objectID": "week-05/00_geoprocessing.html",
    "href": "week-05/00_geoprocessing.html",
    "title": "Geoprocessing",
    "section": "",
    "text": "import warnings\nwarnings.simplefilter(\"ignore\")"
  },
  {
    "objectID": "week-05/00_geoprocessing.html#reading-parquet-files",
    "href": "week-05/00_geoprocessing.html#reading-parquet-files",
    "title": "Geoprocessing",
    "section": "Reading Parquet Files",
    "text": "Reading Parquet Files\nWe begin with our first dataset that contains socieconomic data for census tracts in Southern California. The data are for the census year 2010 and are provided from the package GeoSNAP as a Parquet File.\n\nimport geopandas as gpd\n\n\nscag = gpd.read_parquet(\"data/scag_region.parquet\") # read the geopackage \n\n\ntype(scag)\n\ngeopandas.geodataframe.GeoDataFrame\n\n\n\nscag.columns\n\nIndex(['geoid', 'n_asian_under_15', 'n_black_under_15', 'n_hispanic_under_15',\n       'n_native_under_15', 'n_white_under_15', 'n_persons_under_18',\n       'n_asian_over_60', 'n_black_over_60', 'n_hispanic_over_60',\n       ...\n       'year', 'n_total_housing_units_sample', 'p_nonhisp_white_persons',\n       'p_white_over_60', 'p_black_over_60', 'p_hispanic_over_60',\n       'p_native_over_60', 'p_asian_over_60', 'p_disabled', 'geometry'],\n      dtype='object', length=194)\n\n\n\ntype(scag)\n\ngeopandas.geodataframe.GeoDataFrame\n\n\n\nscag.head()\n\n\n\n\n\n\n\n\ngeoid\nn_asian_under_15\nn_black_under_15\nn_hispanic_under_15\nn_native_under_15\nn_white_under_15\nn_persons_under_18\nn_asian_over_60\nn_black_over_60\nn_hispanic_over_60\n...\nyear\nn_total_housing_units_sample\np_nonhisp_white_persons\np_white_over_60\np_black_over_60\np_hispanic_over_60\np_native_over_60\np_asian_over_60\np_disabled\ngeometry\n\n\n\n\n0\n06037128702\n58.0\n0.0\n223.0\n0.0\n475.0\n986.0\nNaN\nNaN\nNaN\n...\n2010\n2903.0\n64.726214\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((-118.44870 34.16485, -118.43997 34.1...\n\n\n1\n06037131600\n83.0\n62.0\n777.0\n0.0\n135.0\n1355.0\nNaN\nNaN\nNaN\n...\n2010\n1487.0\n28.679979\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((-118.56229 34.22033, -118.55792 34.2...\n\n\n2\n06037134104\n287.0\n17.0\n816.0\n0.0\n61.0\n1323.0\nNaN\nNaN\nNaN\n...\n2010\n1388.0\n14.846188\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((-118.57976 34.21558, -118.57539 34.2...\n\n\n3\n06037134304\n90.0\n24.0\n298.0\n0.0\n89.0\n520.0\nNaN\nNaN\nNaN\n...\n2010\n928.0\n33.378933\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((-118.61472 34.21952, -118.61039 34.2...\n\n\n4\n06037242000\n0.0\n229.0\n681.0\n0.0\n0.0\n1164.0\nNaN\nNaN\nNaN\n...\n2010\n1054.0\n0.058565\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((-118.25416 33.93882, -118.25413 33.9...\n\n\n\n\n5 rows × 194 columns\n\n\n\n\nscag.shape \n\n(4580, 194)\n\n\nThis tells us there are 4580 census tracts and 194 attributes measured for each tract.\n\nscag.columns\n\nIndex(['geoid', 'n_asian_under_15', 'n_black_under_15', 'n_hispanic_under_15',\n       'n_native_under_15', 'n_white_under_15', 'n_persons_under_18',\n       'n_asian_over_60', 'n_black_over_60', 'n_hispanic_over_60',\n       ...\n       'year', 'n_total_housing_units_sample', 'p_nonhisp_white_persons',\n       'p_white_over_60', 'p_black_over_60', 'p_hispanic_over_60',\n       'p_native_over_60', 'p_asian_over_60', 'p_disabled', 'geometry'],\n      dtype='object', length=194)\n\n\nAt least one of the attributes (columns) in the GeoDataFrame holds the geometries for the observations. In our case, this column is named geometry:\n\nscag.geometry\n\n0       POLYGON ((-118.44870 34.16485, -118.43997 34.1...\n1       POLYGON ((-118.56229 34.22033, -118.55792 34.2...\n2       POLYGON ((-118.57976 34.21558, -118.57539 34.2...\n3       POLYGON ((-118.61472 34.21952, -118.61039 34.2...\n4       POLYGON ((-118.25416 33.93882, -118.25413 33.9...\n                              ...                        \n4575    POLYGON ((-118.50373 34.42607, -118.50050 34.4...\n4576    POLYGON ((-118.20731 33.90754, -118.20641 33.9...\n4577    POLYGON ((-119.22134 34.18130, -119.21727 34.1...\n4578    POLYGON ((-116.51068 33.80502, -116.51069 33.8...\n4579    POLYGON ((-118.41379 34.17940, -118.41160 34.1...\nName: geometry, Length: 4580, dtype: geometry\n\n\nThis shows us that each of our observations is encoded as a Polygon geometry.\nWe can call the plot method of the GeoDataFrame to visualize these geometries:\n\nscag.plot()\n\n&lt;Axes: &gt;\n\n\n\n\n\nNote that the tract identifier column is geoid which encodes the 11-digit FIPS code."
  },
  {
    "objectID": "week-05/00_geoprocessing.html#reading-shapefiles",
    "href": "week-05/00_geoprocessing.html#reading-shapefiles",
    "title": "Geoprocessing",
    "section": "Reading shapefiles",
    "text": "Reading shapefiles\nshapefiles are a common legacy spatial data format for vector data. Let’s explore a second data set that encodes mental health provider locations in Riverside County, California as points in a shapefile:\n\nReading a point shapefile\n\nclinics_df = gpd.read_parquet('data/behavioralHealth.parquet')\nclinics_df.columns\n\nIndex(['OBJECTID', 'SITE_TYPE', 'SITE_NAME', 'ADDRESS', 'CITY', 'ZIPCODE',\n       'PHONE', 'geometry'],\n      dtype='object')\n\n\n\nclinics_df.head()\n\n\n\n\n\n\n\n\nOBJECTID\nSITE_TYPE\nSITE_NAME\nADDRESS\nCITY\nZIPCODE\nPHONE\ngeometry\n\n\n\n\n0\n149.0\nBehavioral Health\nOlder Adult Services\n6355 Riverside Ave\nRiverside\n92506\n951-369-0219\nPOINT (6216487.156 2291913.664)\n\n\n1\n150.0\nBehavioral Health\nChildren'S Treatment Services\n9990 County Farm Rd\nRiverside\n92503\n951-358-4840\nPOINT (6195566.226 2280519.190)\n\n\n2\n151.0\nBehavioral Health\nFamily, Adolescent, And Children'S Treatment\n1195 Magnolia Ave\nCorona\n91719\n951-273-0608\nPOINT (6168252.101 2261023.951)\n\n\n3\n447.0\nBehavioral Health\nBlythe Clinic\n1297 W Hobson Way\nBlythe\n92225\n760-770-2222\nPOINT (7059944.605 2169652.046)\n\n\n4\n152.0\nBehavioral Health\nInteragency Services For Families\n9890 County Farm Rd\nRiverside\n92503\n951-358-4850\nPOINT (6195949.672 2280510.302)\n\n\n\n\n\n\n\n\nclinics_df.plot()\n\n&lt;Axes: &gt;\n\n\n\n\n\n\nclinics_df.geometry\n\n0     POINT (6216487.156 2291913.664)\n1     POINT (6195566.226 2280519.190)\n2     POINT (6168252.101 2261023.951)\n3     POINT (7059944.605 2169652.046)\n4     POINT (6195949.672 2280510.302)\n5     POINT (6195566.226 2280519.190)\n6     POINT (6255240.101 2281392.265)\n7     POINT (6162865.861 2269381.489)\n8     POINT (6195182.779 2280509.032)\n9     POINT (6342387.266 2220024.356)\n10    POINT (6195566.226 2280519.190)\n11    POINT (6577094.185 2205388.907)\n12    POINT (6195566.226 2280519.190)\n13    POINT (6283871.161 2136729.378)\n14    POINT (6229918.194 2307140.803)\n15    POINT (6496477.603 2228753.546)\n16    POINT (6342390.651 2220029.434)\n17    POINT (6265042.293 2237006.918)\n18    POINT (6341877.001 2233915.961)\n19    POINT (6283867.341 2136731.288)\n20    POINT (6367147.411 2280861.442)\n21    POINT (6496480.142 2228757.355)\n22    POINT (6570450.368 2198847.190)\n23    POINT (6234956.516 2303352.150)\n24    POINT (6195566.226 2280520.460)\n25    POINT (6216489.695 2291912.394)\n26    POINT (6229918.194 2307139.534)\n27    POINT (6229920.733 2307139.534)\nName: geometry, dtype: geometry\n\n\n\nclinics_df.ADDRESS\n\n0         6355 Riverside Ave\n1        9990 County Farm Rd\n2          1195 Magnolia Ave\n3          1297 W Hobson Way\n4        9890 County Farm Rd\n5        9990 County Farm Rd\n6       23119 Cottonwood Ave\n7              623 N Main St\n8       10000 County Farm Rd\n9             650 N State St\n10       9990 County Farm Rd\n11             83-912 Ave 45\n12       9990 County Farm Rd\n13    41002 County Center Dr\n14          1827 Atlanta Ave\n15           68-615 Perez Rd\n16            650 N State St\n17        1688 N Perris Blvd\n18         950 N Ramona Blvd\n19    41002 County Center Dr\n20          1330 W Ramsey St\n21           68-615 Perez Rd\n22           47-825 Oasis St\n23             769 Blaine St\n24       9990 County Farm Rd\n25        6355 Riverside Ave\n26          1827 Atlanta Ave\n27          1827 Atlanta Ave\nName: ADDRESS, dtype: object\n\n\n\nlen(clinics_df.ADDRESS.unique()) # note some clinics have the same address (different types of services provided at same location)\n\n18"
  },
  {
    "objectID": "week-05/00_geoprocessing.html#integrating-spatial-datasets",
    "href": "week-05/00_geoprocessing.html#integrating-spatial-datasets",
    "title": "Geoprocessing",
    "section": "Integrating spatial datasets",
    "text": "Integrating spatial datasets\nLet’s assume the role of a public health epidemiologist who is interested in equity issues surrounding access to mental health services. We have two datasets to work with here:\n\nthe clinics (points in Riverside County)\nthe tracts for all of Southern California\n\nWe will thus want to narrow down the focus to Riverside county. So first, we need to extract the tracts for the county from the larger region:"
  },
  {
    "objectID": "week-05/00_geoprocessing.html#extracting-riverside-county-tracts",
    "href": "week-05/00_geoprocessing.html#extracting-riverside-county-tracts",
    "title": "Geoprocessing",
    "section": "Extracting Riverside County Tracts",
    "text": "Extracting Riverside County Tracts\n\nrc = scag[scag['geoid'].str.match(\"^06065\")]\n\nrc.plot()\n\n&lt;Axes: &gt;"
  },
  {
    "objectID": "week-05/00_geoprocessing.html#spatial-joins",
    "href": "week-05/00_geoprocessing.html#spatial-joins",
    "title": "Geoprocessing",
    "section": "Spatial Joins",
    "text": "Spatial Joins\nWith the two datasets in hand, we would like to know the answer to the following question:\n\nHow many clinics are in each census tract in Riverside County?\n\nTo get at this answer will can use a spatial join. The idea here is to create a linkage between each clinic (point) and the tract (polygon) that the clinic lies within.\nThe answer to our question will be the number of matches found for each census tract.\nIn geopandas the spatial join is done with the sjoin method of the GeoDataFrame:\n\nclinics_tracts = gpd.sjoin(clinics_df, rc, op='within')\n\nWe see a warning here, that alerts us to a mismatch between the CRS: Coordinate Reference Systems of the two GeoDataFrames. We can inspect these to see what is going on:\n\nclinics_df.crs\n\n&lt;Projected CRS: EPSG:2230&gt;\nName: NAD83 / California zone 6 (ftUS)\nAxis Info [cartesian]:\n- X[east]: Easting (US survey foot)\n- Y[north]: Northing (US survey foot)\nArea of Use:\n- name: United States (USA) - California - counties Imperial; Orange; Riverside; San Diego.\n- bounds: (-118.15, 32.53, -114.42, 34.08)\nCoordinate Operation:\n- name: SPCS83 California zone 6 (US Survey feet)\n- method: Lambert Conic Conformal (2SP)\nDatum: North American Datum 1983\n- Ellipsoid: GRS 1980\n- Prime Meridian: Greenwich\n\n\n\nrc.crs\n\n&lt;Geographic 2D CRS: EPSG:4326&gt;\nName: WGS 84\nAxis Info [ellipsoidal]:\n- Lat[north]: Geodetic latitude (degree)\n- Lon[east]: Geodetic longitude (degree)\nArea of Use:\n- name: World.\n- bounds: (-180.0, -90.0, 180.0, 90.0)\nDatum: World Geodetic System 1984 ensemble\n- Ellipsoid: WGS 84\n- Prime Meridian: Greenwich\n\n\nSo the clinics have a unit of feet, while the tracts are in degrees. The spatial join will be incorrect because of this since the observations from the two dataframes are in different coordinate systems:\n\nclinics_tracts\n\n\n\n\n\n\n\n\nOBJECTID\nSITE_TYPE\nSITE_NAME\nADDRESS\nCITY\nZIPCODE\nPHONE\ngeometry\nindex_right\ngeoid\n...\nn_white_persons\nyear\nn_total_housing_units_sample\np_nonhisp_white_persons\np_white_over_60\np_black_over_60\np_hispanic_over_60\np_native_over_60\np_asian_over_60\np_disabled\n\n\n\n\n\n\n0 rows × 202 columns\n\n\n\nTo rectify this, we need to have both GeoDataFrames in the same CRS. Let’s change the CRS of the tracts GeoDataFrame which is currently:\n\nrc.plot()\n\n&lt;Axes: &gt;\n\n\n\n\n\nTo change this, we notice the helpful suggestion in the warning above to use the to_crs method. Let’s try it to see how this works:\n\nrc.to_crs(clinics_df.crs).plot()\n\n&lt;Axes: &gt;\n\n\n\n\n\nComparison of the two plots shows us that the CRS has been changed. We did not assign the object yet (which is good practice when experimenting). But it does what we need, so lets assign the result to redefine our tracts GeoDataFrame:\n\nrc = rc.to_crs(clinics_df.crs)\n\n\nclinics_tracts = gpd.sjoin(clinics_df, rc, op='within')\n\n\nclinics_tracts\n\n\n\n\n\n\n\n\nOBJECTID\nSITE_TYPE\nSITE_NAME\nADDRESS\nCITY\nZIPCODE\nPHONE\ngeometry\nindex_right\ngeoid\n...\nn_white_persons\nyear\nn_total_housing_units_sample\np_nonhisp_white_persons\np_white_over_60\np_black_over_60\np_hispanic_over_60\np_native_over_60\np_asian_over_60\np_disabled\n\n\n\n\n0\n149.0\nBehavioral Health\nOlder Adult Services\n6355 Riverside Ave\nRiverside\n92506\n951-369-0219\nPOINT (6216487.156 2291913.664)\n661\n06065031100\n...\nNaN\n2010\n1715.0\n49.159311\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n25\n146.0\nBehavioral Health\nAdult Mental Health Services - Central Clinic\n6355 Riverside Ave\nRiverside\n92506\n951-369-5714\nPOINT (6216489.695 2291912.394)\n661\n06065031100\n...\nNaN\n2010\n1715.0\n49.159311\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1\n150.0\nBehavioral Health\nChildren'S Treatment Services\n9990 County Farm Rd\nRiverside\n92503\n951-358-4840\nPOINT (6195566.226 2280519.190)\n1798\n06065041201\n...\nNaN\n2010\n1135.0\n25.836431\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n4\n152.0\nBehavioral Health\nInteragency Services For Families\n9890 County Farm Rd\nRiverside\n92503\n951-358-4850\nPOINT (6195949.672 2280510.302)\n1798\n06065041201\n...\nNaN\n2010\n1135.0\n25.836431\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n5\n448.0\nBehavioral Health\nChildren'S Evaluation Services Unite\n9990 County Farm Rd\nRiverside\n92503\n951-358-7380\nPOINT (6195566.226 2280519.190)\n1798\n06065041201\n...\nNaN\n2010\n1135.0\n25.836431\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n8\n154.0\nBehavioral Health\nVan Horn Counseling Center\n10000 County Farm Rd\nRiverside\n92503\n951-358-4390\nPOINT (6195182.779 2280509.032)\n1798\n06065041201\n...\nNaN\n2010\n1135.0\n25.836431\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n10\n155.0\nBehavioral Health\nInpatient Treatment Facility\n9990 County Farm Rd\nRiverside\n92503\n951-358-4700\nPOINT (6195566.226 2280519.190)\n1798\n06065041201\n...\nNaN\n2010\n1135.0\n25.836431\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n12\n156.0\nBehavioral Health\nEmergency Treatment Services\n9990 County Farm Rd\nRiverside\n92503\n951-358-4881\nPOINT (6195566.226 2280519.190)\n1798\n06065041201\n...\nNaN\n2010\n1135.0\n25.836431\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n24\n145.0\nBehavioral Health\nAdult Mental Health Services - West Clinic\n9990 County Farm Rd\nRiverside\n92503\n951-358-4647\nPOINT (6195566.226 2280520.460)\n1798\n06065041201\n...\nNaN\n2010\n1135.0\n25.836431\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n2\n151.0\nBehavioral Health\nFamily, Adolescent, And Children'S Treatment\n1195 Magnolia Ave\nCorona\n91719\n951-273-0608\nPOINT (6168252.101 2261023.951)\n517\n06065041813\n...\nNaN\n2010\n2084.0\n28.686088\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n3\n447.0\nBehavioral Health\nBlythe Clinic\n1297 W Hobson Way\nBlythe\n92225\n760-770-2222\nPOINT (7059944.605 2169652.046)\n242\n06065046102\n...\nNaN\n2010\n887.0\n14.184009\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n6\n153.0\nBehavioral Health\nChildren'S Interagency Program\n23119 Cottonwood Ave\nMoreno Valley\n92553\n951-413-5678\nPOINT (6255240.101 2281392.265)\n1818\n06065042512\n...\nNaN\n2010\n968.0\n9.930314\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n7\n449.0\nBehavioral Health\nSubstance Abuse Outpatient Program\n623 N Main St\nCorona\n92880\n951-737-2962\nPOINT (6162865.861 2269381.489)\n1875\n06065040809\n...\nNaN\n2010\n1026.0\n29.670330\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n9\n450.0\nBehavioral Health\nSubstance Abuse Outpatient Program\n650 N State St\nHemet\n92543\n951-791-3350\nPOINT (6342387.266 2220024.356)\n1212\n06065043507\n...\nNaN\n2010\n2674.0\n39.315175\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n16\n137.0\nBehavioral Health\nHemet Clinic\n650 N State St\nHemet\n92543\n951-971-3300\nPOINT (6342390.651 2220029.434)\n1212\n06065043507\n...\nNaN\n2010\n2674.0\n39.315175\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n11\n451.0\nBehavioral Health\nSubstance Abuse Outpatient Program\n83-912 Ave 45\nIndio\n92201\n760-347-0754\nPOINT (6577094.185 2205388.907)\n2466\n06065045303\n...\nNaN\n2010\n843.0\n4.670699\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n13\n452.0\nBehavioral Health\nSubstance Abuse Outpatient Program\n41002 County Center Dr\nTemecula\n92591\n951-600-6360\nPOINT (6283871.161 2136729.378)\n4266\n06065049600\n...\nNaN\n2010\n2443.0\n58.274250\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n19\n140.0\nBehavioral Health\nTemecula Clinic\n41002 County Center Dr\nTemecula\n92590\n951-600-6355\nPOINT (6283867.341 2136731.288)\n4266\n06065049600\n...\nNaN\n2010\n2443.0\n58.274250\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n14\n157.0\nBehavioral Health\nSubstance Abuse Outpatient Program\n1827 Atlanta Ave\nRiverside\n92503\n951-955-2105\nPOINT (6229918.194 2307140.803)\n1546\n06065042209\n...\nNaN\n2010\n1586.0\n31.134793\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n26\n147.0\nBehavioral Health\nAdult System Of Care\n1827 Atlanta Ave\nRiverside\n92507\n951-955-8000\nPOINT (6229918.194 2307139.534)\n1546\n06065042209\n...\nNaN\n2010\n1586.0\n31.134793\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n27\n148.0\nBehavioral Health\nJefferson Wellness Center\n1827 Atlanta Ave\nRiverside\n92507\n951-955-8000\nPOINT (6229920.733 2307139.534)\n1546\n06065042209\n...\nNaN\n2010\n1586.0\n31.134793\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n15\n158.0\nBehavioral Health\nSubstance Abuse Outpatient Program\n68-615 Perez Rd\nCathedral City\n92234\n760-770-2222\nPOINT (6496477.603 2228753.546)\n2453\n06065045000\n...\nNaN\n2010\n1820.0\n43.139842\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n21\n142.0\nBehavioral Health\nCathedral City Clinic\n68-615 Perez Rd\nCathedral City\n92234\n760-770-2222\nPOINT (6496480.142 2228757.355)\n2453\n06065045000\n...\nNaN\n2010\n1820.0\n43.139842\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n17\n138.0\nBehavioral Health\nPerris Clinic\n1688 N Perris Blvd\nPerris\n92570\n951-443-2200\nPOINT (6265042.293 2237006.918)\n4515\n06065042620\n...\nNaN\n2010\n2671.0\n17.630000\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n18\n139.0\nBehavioral Health\nSan Jacinto Clinic\n950 N Ramona Blvd\nSan Jacinto\n92582\n951-487-2674\nPOINT (6341877.001 2233915.961)\n2955\n06065051300\n...\nNaN\n2010\n3064.0\n45.269270\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n20\n141.0\nBehavioral Health\nBanning Clinic\n1330 W Ramsey St\nBanning\n92220\n951-849-7142\nPOINT (6367147.411 2280861.442)\n231\n06065044101\n...\nNaN\n2010\n1223.0\n35.014233\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n22\n143.0\nBehavioral Health\nIndio Clinic\n47-825 Oasis St\nIndio\n92201\n760-863-8455\nPOINT (6570450.368 2198847.190)\n2467\n06065045501\n...\nNaN\n2010\n1615.0\n8.739635\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n23\n144.0\nBehavioral Health\nAdult Mental Health Services - Blaine Clinic\n769 Blaine St\nRiverside\n92507\n951-358-4705\nPOINT (6234956.516 2303352.150)\n172\n06065042210\n...\nNaN\n2010\n2047.0\n26.254459\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n28 rows × 202 columns\n\n\n\nNow we see the spatial join has worked. There are 28 matches (one for each clinic) and this is stored in a new GeoDataFrame called: clinics_tracts."
  },
  {
    "objectID": "week-05/00_geoprocessing.html#determine-the-number-of-clinics-in-each-tract",
    "href": "week-05/00_geoprocessing.html#determine-the-number-of-clinics-in-each-tract",
    "title": "Geoprocessing",
    "section": "Determine the number of clinics in each tract",
    "text": "Determine the number of clinics in each tract\nReturning to our question, we can find the number of clinics in each of the tracts in this new GeoDataFrame by using the group_by method:\n\nclinics_tracts[['geoid', 'index_right']].groupby('geoid').agg('count')\n\n\n\n\n\n\n\n\nindex_right\n\n\ngeoid\n\n\n\n\n\n06065031100\n2\n\n\n06065040809\n1\n\n\n06065041201\n7\n\n\n06065041813\n1\n\n\n06065042209\n3\n\n\n06065042210\n1\n\n\n06065042512\n1\n\n\n06065042620\n1\n\n\n06065043507\n2\n\n\n06065044101\n1\n\n\n06065045000\n2\n\n\n06065045303\n1\n\n\n06065045501\n1\n\n\n06065046102\n1\n\n\n06065049600\n2\n\n\n06065051300\n1\n\n\n\n\n\n\n\nThis works, so let’s create another DataFrame to store these counts:\n\nct = clinics_tracts[['geoid', 'index_right']].groupby('geoid').agg('count')\nct.shape\n\n(16, 1)"
  },
  {
    "objectID": "week-05/00_geoprocessing.html#table-join",
    "href": "week-05/00_geoprocessing.html#table-join",
    "title": "Geoprocessing",
    "section": "Table Join",
    "text": "Table Join\nWe now know for the tracts that contain at least one clinic, how many clinics they contain. This implies that the tracts that are not in the ct GeoDataFrame do not contain a clinic. What we would like to have is an additional attribute on our rc tracts GeoDataFrame that stores the number of clinics in each tract - for all tracts in Riverside County.\nWe can do this in two remaining steps:\n\na table join on the geoid column\nsetting NA values to 0\n\n\nrc.merge(ct, on='geoid')\n\n\n\n\n\n\n\n\ngeoid\nn_asian_under_15\nn_black_under_15\nn_hispanic_under_15\nn_native_under_15\nn_white_under_15\nn_persons_under_18\nn_asian_over_60\nn_black_over_60\nn_hispanic_over_60\n...\nn_total_housing_units_sample\np_nonhisp_white_persons\np_white_over_60\np_black_over_60\np_hispanic_over_60\np_native_over_60\np_asian_over_60\np_disabled\ngeometry\nindex_right\n\n\n\n\n0\n06065042210\n14.0\n4.0\n392.0\n0.0\n49.0\n626.0\nNaN\nNaN\nNaN\n...\n2047.0\n26.254459\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((6231281.704 2304380.325, 6231334.275...\n1\n\n\n1\n06065044101\n0.0\n0.0\n441.0\n0.0\n90.0\n643.0\nNaN\nNaN\nNaN\n...\n1223.0\n35.014233\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((6360916.988 2282317.240, 6368904.754...\n1\n\n\n2\n06065046102\n0.0\n16.0\n409.0\n0.0\n8.0\n500.0\nNaN\nNaN\nNaN\n...\n887.0\n14.184009\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((7056901.702 2172059.918, 7059550.089...\n1\n\n\n3\n06065041813\n22.0\n0.0\n1385.0\n0.0\n218.0\n2055.0\nNaN\nNaN\nNaN\n...\n2084.0\n28.686088\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((6163401.241 2262775.155, 6163930.681...\n1\n\n\n4\n06065031100\n0.0\n35.0\n686.0\n0.0\n322.0\n1383.0\nNaN\nNaN\nNaN\n...\n1715.0\n49.159311\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((6212596.847 2292503.681, 6212608.840...\n2\n\n\n5\n06065043507\n13.0\n56.0\n1180.0\n62.0\n148.0\n1806.0\nNaN\nNaN\nNaN\n...\n2674.0\n39.315175\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((6338337.356 2228280.689, 6339766.244...\n2\n\n\n6\n06065042209\n0.0\n17.0\n276.0\n0.0\n99.0\n604.0\nNaN\nNaN\nNaN\n...\n1586.0\n31.134793\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((6227628.847 2309774.902, 6229897.721...\n3\n\n\n7\n06065041201\n66.0\n14.0\n704.0\n0.0\n94.0\n1235.0\nNaN\nNaN\nNaN\n...\n1135.0\n25.836431\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((6191323.029 2284972.603, 6191482.639...\n7\n\n\n8\n06065042512\n115.0\n220.0\n674.0\n0.0\n56.0\n1239.0\nNaN\nNaN\nNaN\n...\n968.0\n9.930314\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((6254926.536 2282777.436, 6255161.965...\n1\n\n\n9\n06065040809\n92.0\n79.0\n328.0\n12.0\n129.0\n952.0\nNaN\nNaN\nNaN\n...\n1026.0\n29.670330\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((6161525.232 2270923.411, 6162129.783...\n1\n\n\n10\n06065045000\n0.0\n0.0\n696.0\n0.0\n115.0\n1013.0\nNaN\nNaN\nNaN\n...\n1820.0\n43.139842\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((6491233.939 2220786.970, 6491908.163...\n2\n\n\n11\n06065045303\n0.0\n0.0\n822.0\n0.0\n0.0\n1190.0\nNaN\nNaN\nNaN\n...\n843.0\n4.670699\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((6566733.269 2209587.002, 6567651.882...\n1\n\n\n12\n06065045501\n0.0\n12.0\n1621.0\n10.0\n96.0\n2097.0\nNaN\nNaN\nNaN\n...\n1615.0\n8.739635\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((6566573.447 2201041.319, 6566587.043...\n1\n\n\n13\n06065051300\n109.0\n58.0\n1348.0\n164.0\n635.0\n2563.0\nNaN\nNaN\nNaN\n...\n3064.0\n45.269270\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((6331082.861 2256322.304, 6333704.092...\n1\n\n\n14\n06065049600\n224.0\n53.0\n521.0\n37.0\n989.0\n2182.0\nNaN\nNaN\nNaN\n...\n2443.0\n58.274250\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((6280386.943 2140389.101, 6280920.820...\n2\n\n\n15\n06065042620\n77.0\n383.0\n2143.0\n43.0\n237.0\n3436.0\nNaN\nNaN\nNaN\n...\n2671.0\n17.630000\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((6254341.213 2261739.227, 6256667.021...\n1\n\n\n\n\n16 rows × 195 columns\n\n\n\nNote that this isn’t quite what we want as it only matches the 16 tracts containing clinics. We can change the how argument to outer to include all tracts:\n\nrc.merge(ct, on='geoid', how='outer')\n\n\n\n\n\n\n\n\ngeoid\nn_asian_under_15\nn_black_under_15\nn_hispanic_under_15\nn_native_under_15\nn_white_under_15\nn_persons_under_18\nn_asian_over_60\nn_black_over_60\nn_hispanic_over_60\n...\nn_total_housing_units_sample\np_nonhisp_white_persons\np_white_over_60\np_black_over_60\np_hispanic_over_60\np_native_over_60\np_asian_over_60\np_disabled\ngeometry\nindex_right\n\n\n\n\n0\n06065042005\n7.0\n157.0\n259.0\n0.0\n540.0\n1472.0\nNaN\nNaN\nNaN\n...\n1511.0\n52.240247\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((6220451.886 2273544.863, 6222975.821...\nNaN\n\n\n1\n06065042210\n14.0\n4.0\n392.0\n0.0\n49.0\n626.0\nNaN\nNaN\nNaN\n...\n2047.0\n26.254459\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((6231281.704 2304380.325, 6231334.275...\n1.0\n\n\n2\n06065042403\n10.0\n62.0\n604.0\n0.0\n142.0\n1153.0\nNaN\nNaN\nNaN\n...\n1194.0\n27.105703\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((6265534.814 2293274.461, 6268193.946...\nNaN\n\n\n3\n06065042405\n17.0\n570.0\n877.0\n0.0\n140.0\n1949.0\nNaN\nNaN\nNaN\n...\n1960.0\n12.679643\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((6254901.013 2289559.243, 6257552.324...\nNaN\n\n\n4\n06065042507\n6.0\n196.0\n1132.0\n0.0\n47.0\n1778.0\nNaN\nNaN\nNaN\n...\n1209.0\n11.965812\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((6260074.881 2265634.857, 6260130.853...\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n448\n06065040603\n0.0\n0.0\n354.0\n0.0\n26.0\n544.0\nNaN\nNaN\nNaN\n...\n663.0\n23.933856\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((6170360.166 2300927.182, 6175629.477...\nNaN\n\n\n449\n06065040701\n17.0\n0.0\n142.0\n0.0\n332.0\n669.0\nNaN\nNaN\nNaN\n...\n694.0\n78.002378\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((6152825.515 2282403.524, 6153252.517...\nNaN\n\n\n450\n06065042738\n149.0\n65.0\n549.0\n0.0\n531.0\n1709.0\nNaN\nNaN\nNaN\n...\n2076.0\n56.894592\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((6281402.995 2194126.577, 6286714.535...\nNaN\n\n\n451\n06065043309\n0.0\n59.0\n493.0\n6.0\n204.0\n855.0\nNaN\nNaN\nNaN\n...\n1165.0\n44.564120\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((6346253.508 2219037.609, 6347578.743...\nNaN\n\n\n452\n06065044804\n178.0\n0.0\n452.0\n0.0\n80.0\n794.0\nNaN\nNaN\nNaN\n...\n1162.0\n27.977189\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((6482476.986 2236646.419, 6482483.878...\nNaN\n\n\n\n\n453 rows × 195 columns\n\n\n\nOk now we have all the tracts covered. But if you scroll to the right we will see NaN values for the tracts that do not contain a clinic. What remains is to replace the\n\nrc.merge(ct, on='geoid', how='outer').fillna(0)\n\n\n\n\n\n\n\n\ngeoid\nn_asian_under_15\nn_black_under_15\nn_hispanic_under_15\nn_native_under_15\nn_white_under_15\nn_persons_under_18\nn_asian_over_60\nn_black_over_60\nn_hispanic_over_60\n...\nn_total_housing_units_sample\np_nonhisp_white_persons\np_white_over_60\np_black_over_60\np_hispanic_over_60\np_native_over_60\np_asian_over_60\np_disabled\ngeometry\nindex_right\n\n\n\n\n0\n06065042005\n7.0\n157.0\n259.0\n0.0\n540.0\n1472.0\n0.0\n0.0\n0.0\n...\n1511.0\n52.240247\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\nPOLYGON ((6220451.886 2273544.863, 6222975.821...\n0.0\n\n\n1\n06065042210\n14.0\n4.0\n392.0\n0.0\n49.0\n626.0\n0.0\n0.0\n0.0\n...\n2047.0\n26.254459\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\nPOLYGON ((6231281.704 2304380.325, 6231334.275...\n1.0\n\n\n2\n06065042403\n10.0\n62.0\n604.0\n0.0\n142.0\n1153.0\n0.0\n0.0\n0.0\n...\n1194.0\n27.105703\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\nPOLYGON ((6265534.814 2293274.461, 6268193.946...\n0.0\n\n\n3\n06065042405\n17.0\n570.0\n877.0\n0.0\n140.0\n1949.0\n0.0\n0.0\n0.0\n...\n1960.0\n12.679643\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\nPOLYGON ((6254901.013 2289559.243, 6257552.324...\n0.0\n\n\n4\n06065042507\n6.0\n196.0\n1132.0\n0.0\n47.0\n1778.0\n0.0\n0.0\n0.0\n...\n1209.0\n11.965812\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\nPOLYGON ((6260074.881 2265634.857, 6260130.853...\n0.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n448\n06065040603\n0.0\n0.0\n354.0\n0.0\n26.0\n544.0\n0.0\n0.0\n0.0\n...\n663.0\n23.933856\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\nPOLYGON ((6170360.166 2300927.182, 6175629.477...\n0.0\n\n\n449\n06065040701\n17.0\n0.0\n142.0\n0.0\n332.0\n669.0\n0.0\n0.0\n0.0\n...\n694.0\n78.002378\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\nPOLYGON ((6152825.515 2282403.524, 6153252.517...\n0.0\n\n\n450\n06065042738\n149.0\n65.0\n549.0\n0.0\n531.0\n1709.0\n0.0\n0.0\n0.0\n...\n2076.0\n56.894592\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\nPOLYGON ((6281402.995 2194126.577, 6286714.535...\n0.0\n\n\n451\n06065043309\n0.0\n59.0\n493.0\n6.0\n204.0\n855.0\n0.0\n0.0\n0.0\n...\n1165.0\n44.564120\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\nPOLYGON ((6346253.508 2219037.609, 6347578.743...\n0.0\n\n\n452\n06065044804\n178.0\n0.0\n452.0\n0.0\n80.0\n794.0\n0.0\n0.0\n0.0\n...\n1162.0\n27.977189\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\nPOLYGON ((6482476.986 2236646.419, 6482483.878...\n0.0\n\n\n\n\n453 rows × 195 columns\n\n\n\nGreat. Now we save our work and rename the column holding the clinic count:\n\nrc = rc.merge(ct, on='geoid', how='outer').fillna(0)\n\n\nrc['index_right'].sum()\n\n28.0\n\n\n\nrc.rename(columns={'index_right': 'clinics'}, inplace=True)\n\n\nrc.clinics.sum()\n\n28.0\n\n\n\ntype(rc)\n\ngeopandas.geodataframe.GeoDataFrame\n\n\n\nExercise:  Create a shapefile for each of the counties in the Southern California dataframe, and write to data/FIPSCODE.shp. Where FIPSCODE is the 5-digit FIPS Code for the county.\n\n\n# %load solutions/00.py\n\n\nGeoprocessing by Serge Rey is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License."
  },
  {
    "objectID": "week-12/github.html",
    "href": "week-12/github.html",
    "title": "collaboration",
    "section": "",
    "text": "cd\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ cd\njupyter-serge584s23@geo-rey-srv2:~$ git clone https://github.com/rupa/z.git\nCloning into 'z'...\nremote: Enumerating objects: 800, done.\nremote: Counting objects: 100% (18/18), done.\nremote: Compressing objects: 100% (12/12), done.\nremote: Total 800 (delta 8), reused 15 (delta 6), pack-reused 782\nReceiving objects: 100% (800/800), 161.14 KiB | 1.73 MiB/s, done.\nResolving deltas: 100% (363/363), done.\n\ncp .bashrc .bashrc.bak\nnano .bashrc\n\n# add the line\n. ~/z/z.sh\n\ntail -1 .bashrc\n\njupyter-serge584s23@geo-rey-srv2:~$ tail -1 .bashrc\n. ~/z/z.sh\n\nsource ~/.bashrc\nNow cd around a bunch\nType z to get a listing of recently visited directories\nTo jump to one, type z pattern where pattern should be a substring of the directory you want to jump to.\nNo more having to manually type long paths to get to where you want to go.\nNote, this works even after logging out or closing the terminal.\nThe data is stored in the file ~/.z if you are interested."
  },
  {
    "objectID": "week-12/github.html#jumping-around",
    "href": "week-12/github.html#jumping-around",
    "title": "collaboration",
    "section": "",
    "text": "cd\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ cd\njupyter-serge584s23@geo-rey-srv2:~$ git clone https://github.com/rupa/z.git\nCloning into 'z'...\nremote: Enumerating objects: 800, done.\nremote: Counting objects: 100% (18/18), done.\nremote: Compressing objects: 100% (12/12), done.\nremote: Total 800 (delta 8), reused 15 (delta 6), pack-reused 782\nReceiving objects: 100% (800/800), 161.14 KiB | 1.73 MiB/s, done.\nResolving deltas: 100% (363/363), done.\n\ncp .bashrc .bashrc.bak\nnano .bashrc\n\n# add the line\n. ~/z/z.sh\n\ntail -1 .bashrc\n\njupyter-serge584s23@geo-rey-srv2:~$ tail -1 .bashrc\n. ~/z/z.sh\n\nsource ~/.bashrc\nNow cd around a bunch\nType z to get a listing of recently visited directories\nTo jump to one, type z pattern where pattern should be a substring of the directory you want to jump to.\nNo more having to manually type long paths to get to where you want to go.\nNote, this works even after logging out or closing the terminal.\nThe data is stored in the file ~/.z if you are interested."
  },
  {
    "objectID": "week-12/github.html#create-a-remote-on-github",
    "href": "week-12/github.html#create-a-remote-on-github",
    "title": "collaboration",
    "section": "create a remote on github",
    "text": "create a remote on github\n![[Pasted image 20230220171356.png]]\n![[Pasted image 20230220170657.png]]\n![[Pasted image 20230220171442.png]]\nwe will come back to this in a moment. for now lets make sure we are in are local repository directory:\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ pwd\n\n/home/jupyter-serge584s23/work/git/planets\n\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ ls -al\n\ntotal 28\ndrwxr-xr-x 4 jupyter-serge584s23 jupyter-serge584s23 4096 Feb 16 12:44 .\ndrwxr-xr-x 3 jupyter-serge584s23 jupyter-serge584s23 4096 Feb 16 11:20 ..\n-rw-r--r-- 1 jupyter-serge584s23 jupyter-serge584s23    0 Feb 16 12:10 a.dat\n-rw-r--r-- 1 jupyter-serge584s23 jupyter-serge584s23    0 Feb 16 12:10 b.dat\n-rw-r--r-- 1 jupyter-serge584s23 jupyter-serge584s23    0 Feb 16 12:10 c.dat\ndrwxr-xr-x 8 jupyter-serge584s23 jupyter-serge584s23 4096 Feb 16 12:44 .git\n-rw-r--r-- 1 jupyter-serge584s23 jupyter-serge584s23   15 Feb 16 12:14 .gitignore\n-rw-r--r-- 1 jupyter-serge584s23 jupyter-serge584s23   91 Feb 16 12:02 mars.txt\n-rw-r--r-- 1 jupyter-serge584s23 jupyter-serge584s23   49 Feb 16 12:44 moon.txt\ndrwxr-xr-x 2 jupyter-serge584s23 jupyter-serge584s23 4096 Feb 16 12:10 results\n\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git status\n\nOn branch main\nnothing to commit, working tree clean\n\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git remote -v\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$"
  },
  {
    "objectID": "week-12/github.html#ssh-keys",
    "href": "week-12/github.html#ssh-keys",
    "title": "collaboration",
    "section": "ssh keys",
    "text": "ssh keys\njupyter-serge584s23@geo-rey-srv2:~$ ssh-keygen -t rsa\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/home/jupyter-serge584s23/.ssh/id_rsa): \nCreated directory '/home/jupyter-serge584s23/.ssh'.\nEnter passphrase (empty for no passphrase): \nEnter same passphrase again: \nYour identification has been saved in /home/jupyter-serge584s23/.ssh/id_rsa\nYour public key has been saved in /home/jupyter-serge584s23/.ssh/id_rsa.pub\nThe key fingerprint is:\nSHA256:xRueWRVTnHYxfri6WuEpzXZJHW7E252NikYNpzIB+5o jupyter-serge584s23@geo-rey-srv2\nThe key's randomart image is:\n+---[RSA 3072]----+\n|      .       +*+|\n|       o .   .o=+|\n|      . . = o o=o|\n|       . + @  o+O|\n|        S B o +==|\n|       o + = *.. |\n|      E   + X o  |\n|         . + o   |\n|          ...    |\n+----[SHA256]-----+\njupyter-serge584s23@geo-rey-srv2:~$ \n\nls .ssh\n\nid_rsa  id_rsa.pub\n\nupyter-serge584s23@geo-rey-srv2:~$ ls -al ~/.ssh\n\ntotal 16\ndrwx------  2 jupyter-serge584s23 jupyter-serge584s23 4096 Feb 20 16:47 .\ndrwxr-x--- 11 jupyter-serge584s23 jupyter-serge584s23 4096 Feb 20 16:47 ..\n-rw-------  1 jupyter-serge584s23 jupyter-serge584s23 2675 Feb 20 16:47 id_rsa\n-rw-r--r--  1 jupyter-serge584s23 jupyter-serge584s23  586 Feb 20 16:47 id_rsa.pub\nCheck if we can authenticate\njupyter-serge584s23@geo-rey-srv2:~$ ssh -T git@github.com\nThe authenticity of host 'github.com (192.30.255.113)' can't be established.\nED25519 key fingerprint is SHA256:+DiY3wvvV6TuJJhbpZisF/zLDA0zPMSvHdkr4UvCOqU.\nThis key is not known by any other names\nAre you sure you want to continue connecting (yes/no/[fingerprint])? y\nPlease type 'yes', 'no' or the fingerprint: yes\nWarning: Permanently added 'github.com' (ED25519) to the list of known hosts.\ngit@github.com: Permission denied (publickey).\nRight, we need to first add our public key on github\ncat ~/.ssh/id_rsa.pub\n\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCv4y7kR22zjaNYPIP8L/q/lcfWPtltLOZ86vszqpwqEaMFDWaQ366sGEc0hYRjZMbFKxNSy9d7PJnOq0ozCgoNn69dNmXx+M71TM2E7vlUjCZCo9owEfIuDf6o519uRE4Qf2aKQC1g3M+imZn9gnZtI39cQsKPM1h0Wg417ZgdgyC3k4bep7puxiko3R3gEaXVUEPHtodEfI7hwUsV62J3CWBIx5yQzwAGJz7VtYQIB94/5jNUnIGtRQyHFcplxKJ/weM6LkQt5Uxql9oliVHYqp8KBu63PPxXt8qusKGJrnmkccHd6ox8i3LIp2XRImdm8DittHuMJRgJiLa/HQtr9jyHoIx8voztvvbyRCOCzRwWKe9hZXWw/Xp+xbKsoH826e4Iqgp56LzmVB7NKEYf1jArrLEqO+DQWEJkXl8IidqUGNvJ8I4tFRZrRm6URNClseZ31gSsVMAO/HHwoVlVw7s32tmEQ8c+ISGL+llRU/rI5yKPSBLb28YDckes7jc= jupyter-serge584s23@geo-rey-srv2\n![[Pasted image 20230220165448.png]]\n![[Pasted image 20230220165614.png]]\n![[Pasted image 20230220165800.png]]\n![[Pasted image 20230220165837.png]]\n![[Pasted image 20230220170035.png]]\n![[Pasted image 20230220170132.png]]\nNow try authenticating again, which will prompt you for your passphrase\njupyter-serge584s23@geo-rey-srv2:~$ ssh -T git@github.com\nEnter passphrase for key '/home/jupyter-serge584s23/.ssh/id_rsa': \n\nHi sjsrey! You've successfully authenticated, but GitHub does not provide shell access.\njupyter-serge584s23@geo-rey-srv2:~$ \nNow we add a new remote (remember your passphrase as they will ask for it)\ngit remote add origin git@github.com:sjsrey/planets.git\ngit branch -M main\ngit push -u origin main\nEnter passphrase for key '/home/jupyter-serge584s23/.ssh/id_rsa': \n\nEnumerating objects: 15, done.\nCounting objects: 100% (15/15), done.\nDelta compression using up to 32 threads\nCompressing objects: 100% (10/10), done.\nWriting objects: 100% (15/15), 1.29 KiB | 1.29 MiB/s, done.\nTotal 15 (delta 3), reused 0 (delta 0), pack-reused 0\nremote: Resolving deltas: 100% (3/3), done.\nTo github.com:sjsrey/planets.git\n * [new branch]      main -&gt; main\nBranch 'main' set up to track remote branch 'main' from 'origin'.\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ \n\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git remote -v\n\norigin  git@github.com:sjsrey/planets.git (fetch)\norigin  git@github.com:sjsrey/planets.git (push)\n![[Pasted image 20230220171920.png]]\n![[Pasted image 20230220172005.png]]"
  },
  {
    "objectID": "week-12/github.html#adding-a-ssh-agent",
    "href": "week-12/github.html#adding-a-ssh-agent",
    "title": "collaboration",
    "section": "Adding a ssh-agent",
    "text": "Adding a ssh-agent\njupyter-serge584s23@geo-rey-srv2:~$ eval \"$(ssh-agent -s)\" \nAgent pid 327199\njupyter-serge584s23@geo-rey-srv2:~$ ssh-add ~/.ssh/id_rsa \nEnter passphrase for /home/jupyter-serge584s23/.ssh/id_rsa: \nIdentity added: /home/jupyter-serge584s23/.ssh/id_rsa (jupyter-serge584s23@geo-rey-srv2)\n\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ nano README.md\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ ls\na.dat  b.dat  c.dat  mars.txt  moon.txt  README.md  results\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git status\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nUntracked files:\n  (use \"git add &lt;file&gt;...\" to include in what will be committed)\n        README.md\n\nnothing added to commit but untracked files present (use \"git add\" to track)\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git add README.md \njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git commit -m 'Add a README'\n[main 864e428] Add a README\n 1 file changed, 3 insertions(+)\n create mode 100644 README.md\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git push origin main\nEnumerating objects: 4, done.\nCounting objects: 100% (4/4), done.\nDelta compression using up to 32 threads\nCompressing objects: 100% (2/2), done.\nWriting objects: 100% (3/3), 375 bytes | 375.00 KiB/s, done.\nTotal 3 (delta 0), reused 0 (delta 0), pack-reused 0\nTo github.com:sjsrey/planets.git\n   68a5f4f..864e428  main -&gt; main\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ \n![[Pasted image 20230220173424.png]]"
  },
  {
    "objectID": "week-12/github.html#setting-up-ssh-agent",
    "href": "week-12/github.html#setting-up-ssh-agent",
    "title": "collaboration",
    "section": "Setting up ssh-agent",
    "text": "Setting up ssh-agent\nMake a backup of ~/.bashrc\ncd\ncp .bashrc .bashrc.bak\nnano .bashrc\nAt the bottom of the file add the following (Source):\nenv=~/.ssh/agent.env\n\nagent_load_env () { test -f \"$env\" && . \"$env\" &gt;| /dev/null ; }\n\nagent_start () {\n    (umask 077; ssh-agent &gt;| \"$env\")\n    . \"$env\" &gt;| /dev/null ; }\n\nagent_load_env\n\n# agent_run_state: 0=agent running w/ key; 1=agent w/o key; 2=agent not running\nagent_run_state=$(ssh-add -l &gt;| /dev/null 2&gt;&1; echo $?)\n\nif [ ! \"$SSH_AUTH_SOCK\" ] || [ $agent_run_state = 2 ]; then\n    agent_start\n    ssh-add\nelif [ \"$SSH_AUTH_SOCK\" ] && [ $agent_run_state = 1 ]; then\n    ssh-add\nfi\n\nunset env\nWrite and exit the file. Close the terminal tab.\nLaunch a new terminal and you should be prompted for your password.\n![[Pasted image 20230220174112.png]]\n![[Pasted image 20230220174144.png]]\n![[Pasted image 20230220174224.png]]\nFrom here forward you no longer will be prompted for password when pushing to github. (as long as that terminal stays around)\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ nano README.md \ncat README.md\n\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ cat README.md \n# Planets Project\n\n\nResearch on planets\n\nTest after ssh-agent\n\n\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git status\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add &lt;file&gt;...\" to update what will be committed)\n  (use \"git restore &lt;file&gt;...\" to discard changes in working directory)\n        modified:   README.md\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git add README.md \njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git commit -m 'Note on ssh-agent'\n[main be51b2e] Note on ssh-agent\n 1 file changed, 3 insertions(+)\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git push origin main\nEnumerating objects: 5, done.\nCounting objects: 100% (5/5), done.\nDelta compression using up to 32 threads\nCompressing objects: 100% (3/3), done.\nWriting objects: 100% (3/3), 320 bytes | 320.00 KiB/s, done.\nTotal 3 (delta 1), reused 0 (delta 0), pack-reused 0\nremote: Resolving deltas: 100% (1/1), completed with 1 local object.\nTo github.com:sjsrey/planets.git\n   864e428..be51b2e  main -&gt; main\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$"
  },
  {
    "objectID": "week-12/github.html#pulling-from-remotes",
    "href": "week-12/github.html#pulling-from-remotes",
    "title": "collaboration",
    "section": "Pulling from remotes",
    "text": "Pulling from remotes\ngit status\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nnothing to commit, working tree clean\nCreate changes on github to the README.md file\nmake sure to commit the changes there\ngit status\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git status\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nnothing to commit, working tree clean\nFetch will pull any remote changes\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git fetch\nremote: Enumerating objects: 5, done.\nremote: Counting objects: 100% (5/5), done.\nremote: Compressing objects: 100% (3/3), done.\nUnpacking objects: 100% (3/3), 707 bytes | 707.00 KiB/s, done.\nremote: Total 3 (delta 1), reused 0 (delta 0), pack-reused 0\nFrom github.com:sjsrey/planets\n   be51b2e..a0279db  main       -&gt; origin/main\n\n\ngit status\nOn branch main\nYour branch is behind 'origin/main' by 1 commit, and can be fast-forwarded.\n  (use \"git pull\" to update your local branch)\n\nnothing to commit, working tree clean\nThis tells us there are changes on the remote that we don’t have locally. To get them, we follow the helpful suggestions:\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git pull\nUpdating be51b2e..a0279db\nFast-forward\n README.md | 3 +++\n 1 file changed, 3 insertions(+)\n\ngit status\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nnothing to commit, working tree clean\nSo good practice is everytime you sit down to do some work on a local repository:\n\ngit fetch # to see if there have been changes on the remote\ngit pull # if there have been\ndo you work locally and then push to origin when done"
  },
  {
    "objectID": "week-12/github.html#conflicts",
    "href": "week-12/github.html#conflicts",
    "title": "collaboration",
    "section": "Conflicts",
    "text": "Conflicts\nNow that both repositories, local and remote, are identical, we are going to create a conflict.\nThese can arise when working on collaborative projects where multiple people are changing the same files, or on your individual work, where you may be working from different locations and forgot that the past you had changed a file on a remote while current you is happily working on the same part of the file on a local repository.\nTo do this, let’s go all Ohio State and on github edit the readme so the title is “The Planets Project”.\nNow on the local repository, edit the same line, but let’s call it “My Planet Project” Locally:\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git status\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add &lt;file&gt;...\" to update what will be committed)\n  (use \"git restore &lt;file&gt;...\" to discard changes in working directory)\n        modified:   README.md\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ \ngit pull (to show conflict)\n\nHow to resolve a conflict\nexplain markers\nedit file to reconcile conflict\ngit add git commit\ngit push\nnote conflicts only involve changes to the same line"
  },
  {
    "objectID": "week-09/clustering.html",
    "href": "week-09/clustering.html",
    "title": "Clustering",
    "section": "",
    "text": "import geopandas as gpd\nimport matplotlib.pyplot as plt\ndb = gpd.read_file(\"~/data/shared/sandiego_tracts.gpkg\")\n\nERROR 1: PROJ: proj_create_from_database: Open of /opt/tljh/user/share/proj failed\ndb.shape\n\n(628, 25)\ndb.head()\n\n\n\n\n\n\n\n\nGEOID\nmedian_age\ntotal_pop\ntotal_pop_white\ntt_work\nhh_total\nhh_female\ntotal_bachelor\nmedian_hh_income\nincome_gini\n...\nstate\ncounty\ntract\narea_sqm\npct_rented\npct_hh_female\npct_bachelor\npct_white\nsub_30\ngeometry\n\n\n\n\n0\n06073018300\n37.1\n2590.0\n2375.0\n1299.0\n2590.0\n137.0\n0.0\n62500.0\n0.5355\n...\n06\n073\n018300\n2.876449\n0.373913\n0.052896\n0.000000\n0.916988\nFalse\nPOLYGON ((-13069450.120 3922380.770, -13069175...\n\n\n1\n06073018601\n41.2\n5147.0\n4069.0\n1970.0\n5147.0\n562.0\n24.0\n88165.0\n0.4265\n...\n06\n073\n018601\n4.548797\n0.205144\n0.109190\n0.004663\n0.790558\nFalse\nPOLYGON ((-13067719.770 3922939.420, -13067631...\n\n\n2\n06073017601\n54.4\n5595.0\n4925.0\n1702.0\n5595.0\n442.0\n34.0\n110804.0\n0.4985\n...\n06\n073\n017601\n8.726275\n0.279029\n0.078999\n0.006077\n0.880250\nFalse\nPOLYGON ((-13058166.110 3907247.690, -13058140...\n\n\n3\n06073019301\n42.3\n7026.0\n5625.0\n3390.0\n7026.0\n638.0\n46.0\n100539.0\n0.4003\n...\n06\n073\n019301\n3.519743\n0.196512\n0.090806\n0.006547\n0.800598\nFalse\nPOLYGON ((-13056896.290 3925255.610, -13056868...\n\n\n4\n06073018700\n21.8\n40402.0\n30455.0\n24143.0\n40402.0\n2456.0\n23.0\n41709.0\n0.3196\n...\n06\n073\n018700\n559.150793\n0.949887\n0.060789\n0.000569\n0.753799\nFalse\nPOLYGON ((-13090788.510 3946435.430, -13090736...\n\n\n\n\n5 rows × 25 columns\ndb.columns\n\nIndex(['GEOID', 'median_age', 'total_pop', 'total_pop_white', 'tt_work',\n       'hh_total', 'hh_female', 'total_bachelor', 'median_hh_income',\n       'income_gini', 'total_housing_units', 'total_rented', 'median_no_rooms',\n       'median_house_value', 'NAME', 'state', 'county', 'tract', 'area_sqm',\n       'pct_rented', 'pct_hh_female', 'pct_bachelor', 'pct_white', 'sub_30',\n       'geometry'],\n      dtype='object')\ndb.plot()\n\n&lt;Axes: &gt;\ncluster_variables = [\n    \"median_house_value\",\n    \"pct_white\",\n    \"pct_rented\",\n    \"pct_hh_female\",\n    \"pct_bachelor\",\n    \"median_no_rooms\",\n    \"income_gini\",\n    \"median_age\",\n    \"tt_work\"\n]\nf, axs = plt.subplots(nrows=3, ncols=3, figsize=(12,12))\naxs = axs.flatten()\nfor i, col in enumerate(cluster_variables):\n    ax = axs[i]\n    db.plot(column=col, ax=ax, scheme=\"Quantiles\", linewidth=0, cmap='RdPu')\n    ax.set_axis_off()\n    ax.set_title(col)\nplt.show()\nimport seaborn\n_ = seaborn.pairplot(\n    db[cluster_variables], kind='reg', diag_kind='kde'\n)\ndb[['income_gini', 'median_house_value']].head()\n\n\n\n\n\n\n\n\nincome_gini\nmedian_house_value\n\n\n\n\n0\n0.5355\n732900.000000\n\n\n1\n0.4265\n473800.000000\n\n\n2\n0.4985\n930600.000000\n\n\n3\n0.4003\n478500.000000\n\n\n4\n0.3196\n515570.896382\nfrom sklearn import metrics\nmetrics.pairwise_distances(\n    db[[\"income_gini\", \"median_house_value\"]].head()\n).round(4)\n\narray([[     0.    , 259100.    , 197700.    , 254400.    , 217329.1036],\n       [259100.    ,      0.    , 456800.    ,   4700.    ,  41770.8964],\n       [197700.    , 456800.    ,      0.    , 452100.    , 415029.1036],\n       [254400.    ,   4700.    , 452100.    ,      0.    ,  37070.8964],\n       [217329.1036,  41770.8964, 415029.1036,  37070.8964,      0.    ]])\nfrom sklearn.preprocessing import robust_scale\ndb_scaled = robust_scale(db[cluster_variables])\ncluster_variables\n\n['median_house_value',\n 'pct_white',\n 'pct_rented',\n 'pct_hh_female',\n 'pct_bachelor',\n 'median_no_rooms',\n 'income_gini',\n 'median_age',\n 'tt_work']\nmetrics.pairwise_distances(\n    db_scaled[:5, [0,6]]).round(4)\n\narray([[0.    , 1.976 , 1.0012, 2.3081, 3.3925],\n       [1.976 , 0.    , 2.2057, 0.397 , 1.6273],\n       [1.0012, 2.2057, 0.    , 2.4106, 3.2197],\n       [2.3081, 0.397 , 2.4106, 0.    , 1.2312],\n       [3.3925, 1.6273, 3.2197, 1.2312, 0.    ]])"
  },
  {
    "objectID": "week-09/clustering.html#k-means",
    "href": "week-09/clustering.html#k-means",
    "title": "Clustering",
    "section": "k-means",
    "text": "k-means\n\nfrom sklearn.cluster import KMeans\n\n\nkmeans = KMeans(n_clusters=5)\n\n\nimport numpy as np\nnp.random.seed(1234)\nk5cls = kmeans.fit(db_scaled)\n\n\nk5cls.labels_[:5]\n\narray([2, 1, 3, 1, 4], dtype=int32)\n\n\n\nk5cls.labels_.max()\n\n4\n\n\n\nk5cls.labels_.min()\n\n0\n\n\n\ndb['k5cls'] = k5cls.labels_\nf, ax = plt.subplots(1, figsize=(9,9))\ndb.plot(column='k5cls', categorical=True, legend=True, linewidth=0, ax = ax)\nax.set_axis_off()\nplt.show()\n\n\n\n\n\nk5sizes = db.groupby(\"k5cls\").size()\nk5sizes\n\nk5cls\n0    248\n1    244\n2     88\n3     39\n4      9\ndtype: int64\n\n\n\nareas = db.dissolve(by='k5cls', aggfunc='sum')['area_sqm']\nareas\n\nk5cls\n0     739.184478\n1    8622.481814\n2    1335.721492\n3     315.428301\n4     708.956558\nName: area_sqm, dtype: float64\n\n\n\nk5means = db.groupby('k5cls')[cluster_variables].mean()\n\n\nk5means.round(3)\n\n\n\n\n\n\n\n\nmedian_house_value\npct_white\npct_rented\npct_hh_female\npct_bachelor\nmedian_no_rooms\nincome_gini\nmedian_age\ntt_work\n\n\nk5cls\n\n\n\n\n\n\n\n\n\n\n\n\n\n0\n356997.331\n0.620\n0.551\n0.108\n0.023\n4.623\n0.400\n32.783\n2238.883\n\n\n1\n538463.934\n0.787\n0.270\n0.114\n0.007\n5.850\n0.397\n42.057\n2244.320\n\n\n2\n544888.738\n0.741\n0.596\n0.065\n0.005\n4.153\n0.449\n32.590\n2349.511\n\n\n3\n1292905.256\n0.874\n0.275\n0.109\n0.002\n6.100\n0.488\n46.356\n1746.410\n\n\n4\n609385.655\n0.583\n0.377\n0.095\n0.007\n5.800\n0.391\n33.500\n9671.556\n\n\n\n\n\n\n\n\ntidy_db = db.set_index('k5cls')\ntidy_db  = tidy_db[cluster_variables]\ntidy_db = tidy_db.stack()\ntidy_db = tidy_db.reset_index()\ntidy_db = tidy_db.rename( columns = {\"level_1\": \"Attribute\", 0: \"Values\"}\n                        )\ntidy_db.head()\n\n\n\n\n\n\n\n\nk5cls\nAttribute\nValues\n\n\n\n\n0\n2\nmedian_house_value\n732900.000000\n\n\n1\n2\npct_white\n0.916988\n\n\n2\n2\npct_rented\n0.373913\n\n\n3\n2\npct_hh_female\n0.052896\n\n\n4\n2\npct_bachelor\n0.000000\n\n\n\n\n\n\n\n\ntidy_db.head(20)\n\n\n\n\n\n\n\n\nk5cls\nAttribute\nValues\n\n\n\n\n0\n2\nmedian_house_value\n732900.000000\n\n\n1\n2\npct_white\n0.916988\n\n\n2\n2\npct_rented\n0.373913\n\n\n3\n2\npct_hh_female\n0.052896\n\n\n4\n2\npct_bachelor\n0.000000\n\n\n5\n2\nmedian_no_rooms\n3.900000\n\n\n6\n2\nincome_gini\n0.535500\n\n\n7\n2\nmedian_age\n37.100000\n\n\n8\n2\ntt_work\n1299.000000\n\n\n9\n1\nmedian_house_value\n473800.000000\n\n\n10\n1\npct_white\n0.790558\n\n\n11\n1\npct_rented\n0.205144\n\n\n12\n1\npct_hh_female\n0.109190\n\n\n13\n1\npct_bachelor\n0.004663\n\n\n14\n1\nmedian_no_rooms\n6.500000\n\n\n15\n1\nincome_gini\n0.426500\n\n\n16\n1\nmedian_age\n41.200000\n\n\n17\n1\ntt_work\n1970.000000\n\n\n18\n3\nmedian_house_value\n930600.000000\n\n\n19\n3\npct_white\n0.880250\n\n\n\n\n\n\n\n\nseaborn.set(font_scale=1.5)\nfacets = seaborn.FacetGrid(\n    data=tidy_db,\n    col='Attribute',\n    hue='k5cls',\n    sharey=False,\n    sharex=False,\n    aspect=2,\n    col_wrap=3)\n\n_ = facets.map(seaborn.kdeplot, 'Values', fill=True).add_legend()"
  },
  {
    "objectID": "week-07/spatial_joins.html",
    "href": "week-07/spatial_joins.html",
    "title": "Spatial Joins, Overlay, and Interpolation",
    "section": "",
    "text": "import numpy as np\nimport geopandas as gpd\nfrom shapely.geometry import Point, Polygon\n\n\nnp.random.rand(5,2)*10\n\narray([[7.15409136, 3.95168515],\n       [1.77121415, 1.25989631],\n       [1.26536581, 9.51477855],\n       [7.716052  , 1.42392424],\n       [3.50191546, 1.70899307]])\n\n\n\nnp.random.seed(12345)\npoints = [Point(pnt) for pnt in np.random.rand(5,2)*10]\npoints = gpd.GeoDataFrame(geometry=points)\npoints.plot();\n\n\n\n\n\npl0 = Polygon([[0,0], [4,0], [4,4], [3, 1]])\n\n\npl0\n\n\n\n\n\npl1 = Polygon([(6,1), (7,2), (5,4), (6,1)])\npl2= Polygon([ (9,5), (9, 7), (4,6), (8,4)])\n\n\npl_df = gpd.GeoDataFrame(geometry =[ pl0, pl1 , pl2])\n\n\nb = pl_df.plot()\npoints.plot(ax=b, color='r')\n\n&lt;Axes: &gt;\n\n\n\n\n\n\ngpd.sjoin(points, pl_df)\n\n\n\n\n\n\n\n\ngeometry\nindex_right\n\n\n\n\n2\nPOINT (5.67725 5.95545)\n2\n\n\n4\nPOINT (7.48907 6.53570)\n2\n\n\n\n\n\n\n\n\ngpd.sjoin(pl_df, points)\n\n\n\n\n\n\n\n\ngeometry\nindex_right\n\n\n\n\n2\nPOLYGON ((9.00000 5.00000, 9.00000 7.00000, 4....\n2\n\n\n2\nPOLYGON ((9.00000 5.00000, 9.00000 7.00000, 4....\n4\n\n\n\n\n\n\n\n\ngpd.sjoin_nearest(points, pl_df)\n\n\n\n\n\n\n\n\ngeometry\nindex_right\n\n\n\n\n0\nPOINT (9.29616 3.16376)\n2\n\n\n2\nPOINT (5.67725 5.95545)\n2\n\n\n3\nPOINT (9.64515 6.53177)\n2\n\n\n4\nPOINT (7.48907 6.53570)\n2\n\n\n1\nPOINT (1.83919 2.04560)\n0\n\n\n\n\n\n\n\n\ngpd.sjoin_nearest(pl_df, points)\n\n\n\n\n\n\n\n\ngeometry\nindex_right\n\n\n\n\n0\nPOLYGON ((0.00000 0.00000, 4.00000 0.00000, 4....\n1\n\n\n1\nPOLYGON ((6.00000 1.00000, 7.00000 2.00000, 5....\n2\n\n\n2\nPOLYGON ((9.00000 5.00000, 9.00000 7.00000, 4....\n2\n\n\n2\nPOLYGON ((9.00000 5.00000, 9.00000 7.00000, 4....\n4\n\n\n\n\n\n\n\n\n\n\ngpd.sjoin(pl_df, points)\n\n\n\n\n\n\n\n\ngeometry\nindex_right\n\n\n\n\n2\nPOLYGON ((9.00000 5.00000, 9.00000 7.00000, 4....\n2\n\n\n2\nPOLYGON ((9.00000 5.00000, 9.00000 7.00000, 4....\n4\n\n\n\n\n\n\n\n\ngpd.sjoin(pl_df, points, how='left') \n\n\n\n\n\n\n\n\ngeometry\nindex_right\n\n\n\n\n0\nPOLYGON ((0.00000 0.00000, 4.00000 0.00000, 4....\nNaN\n\n\n1\nPOLYGON ((6.00000 1.00000, 7.00000 2.00000, 5....\nNaN\n\n\n2\nPOLYGON ((9.00000 5.00000, 9.00000 7.00000, 4....\n2.0\n\n\n2\nPOLYGON ((9.00000 5.00000, 9.00000 7.00000, 4....\n4.0\n\n\n\n\n\n\n\n\ngpd.sjoin(pl_df, points, how='right') \n\n\n\n\n\n\n\n\nindex_left\ngeometry\n\n\n\n\n0\nNaN\nPOINT (9.29616 3.16376)\n\n\n1\nNaN\nPOINT (1.83919 2.04560)\n\n\n2\n2.0\nPOINT (5.67725 5.95545)\n\n\n3\nNaN\nPOINT (9.64515 6.53177)\n\n\n4\n2.0\nPOINT (7.48907 6.53570)\n\n\n\n\n\n\n\n\ngpd.sjoin(pl_df, points, how='inner')  # default\n\n\n\n\n\n\n\n\ngeometry\nindex_right\n\n\n\n\n2\nPOLYGON ((9.00000 5.00000, 9.00000 7.00000, 4....\n2\n\n\n2\nPOLYGON ((9.00000 5.00000, 9.00000 7.00000, 4....\n4\n\n\n\n\n\n\n\n\n\n\n\nb = pl_df.plot()\npoints.plot(ax=b, color='r')\n\n&lt;Axes: &gt;\n\n\n\n\n\n\ngpd.sjoin_nearest(pl_df, points)\n\n\n\n\n\n\n\n\ngeometry\nindex_right\n\n\n\n\n0\nPOLYGON ((0.00000 0.00000, 4.00000 0.00000, 4....\n1\n\n\n1\nPOLYGON ((6.00000 1.00000, 7.00000 2.00000, 5....\n2\n\n\n2\nPOLYGON ((9.00000 5.00000, 9.00000 7.00000, 4....\n2\n\n\n2\nPOLYGON ((9.00000 5.00000, 9.00000 7.00000, 4....\n4\n\n\n\n\n\n\n\n\ngpd.sjoin_nearest(pl_df, points, distance_col='distance') # distance is 0 if point is in polygon and multiple records if poly contains more than 1 point\n\n\n\n\n\n\n\n\ngeometry\nindex_right\ndistance\n\n\n\n\n0\nPOLYGON ((0.00000 0.00000, 4.00000 0.00000, 4....\n1\n1.359027\n\n\n1\nPOLYGON ((6.00000 1.00000, 7.00000 2.00000, 5....\n2\n2.069406\n\n\n2\nPOLYGON ((9.00000 5.00000, 9.00000 7.00000, 4....\n2\n0.000000\n\n\n2\nPOLYGON ((9.00000 5.00000, 9.00000 7.00000, 4....\n4\n0.000000\n\n\n\n\n\n\n\n\ngpd.sjoin_nearest(points, pl_df, distance_col='distance')\n\n\n\n\n\n\n\n\ngeometry\nindex_right\ndistance\n\n\n\n\n0\nPOINT (9.29616 3.16376)\n2\n1.507838\n\n\n2\nPOINT (5.67725 5.95545)\n2\n0.000000\n\n\n3\nPOINT (9.64515 6.53177)\n2\n0.645145\n\n\n4\nPOINT (7.48907 6.53570)\n2\n0.000000\n\n\n1\nPOINT (1.83919 2.04560)\n0\n1.359027\n\n\n\n\n\n\n\n\n\n\n\npolys = [ [(0,0), (5,0), (5,4), (0,4)],\n          [(5,0), (11,0), (11,3), (5,3)],\n         [(0,5), (5,5), (5,8), (0,8)],\n         [ (5,3), (11,3), (11,8), (5, 8)]] \n\n\npl_df = gpd.GeoDataFrame(geometry =[Polygon(poly) for poly in polys])\n\n\npl_df.plot(edgecolor='k')\n\n&lt;Axes: &gt;\n\n\n\n\n\n\nbuffer = points.buffer(0.5)\n\n\nbase = pl_df.plot(edgecolor='k')\nbuffer.plot(ax=base, color='g')\n\n&lt;Axes: &gt;\n\n\n\n\n\n\npl_df['pci'] = [45.5, 78.7, 30.5, 102.0]\npl_df['population'] = [4000, 2500, 3000, 1000]\n\n\nbuffer = gpd.GeoDataFrame(geometry=buffer)\nbuffer['access'] = 'access'\n\n\npl_df.overlay(buffer, how='union')\n\n\n\n\n\n\n\n\npci\npopulation\naccess\ngeometry\n\n\n\n\n0\n45.5\n4000\naccess\nPOLYGON ((2.33678 1.99659, 2.32958 1.94806, 2....\n\n\n1\n78.7\n2500\naccess\nPOLYGON ((9.76797 3.00000, 9.75810 2.97241, 9....\n\n\n2\n102.0\n1000\naccess\nPOLYGON ((8.82435 3.00000, 8.81769 3.01861, 8....\n\n\n3\n102.0\n1000\naccess\nPOLYGON ((6.17484 5.90644, 6.16764 5.85790, 6....\n\n\n4\n102.0\n1000\naccess\nPOLYGON ((10.14274 6.48276, 10.13554 6.43423, ...\n\n\n5\n102.0\n1000\naccess\nPOLYGON ((7.98666 6.48669, 7.97946 6.43815, 7....\n\n\n6\n45.5\n4000\nNaN\nPOLYGON ((0.00000 4.00000, 5.00000 4.00000, 5....\n\n\n7\n78.7\n2500\nNaN\nPOLYGON ((11.00000 3.00000, 11.00000 0.00000, ...\n\n\n8\n30.5\n3000\nNaN\nPOLYGON ((0.00000 5.00000, 5.00000 5.00000, 5....\n\n\n9\n102.0\n1000\nNaN\nPOLYGON ((11.00000 3.00000, 9.76797 3.00000, 9...\n\n\n\n\n\n\n\n\nintermediate = pl_df.overlay(buffer, how='union')\n\n\nintermediate\n\n\n\n\n\n\n\n\npci\npopulation\naccess\ngeometry\n\n\n\n\n0\n45.5\n4000\naccess\nPOLYGON ((2.33678 1.99659, 2.32958 1.94806, 2....\n\n\n1\n78.7\n2500\naccess\nPOLYGON ((9.76797 3.00000, 9.75810 2.97241, 9....\n\n\n2\n102.0\n1000\naccess\nPOLYGON ((8.82435 3.00000, 8.81769 3.01861, 8....\n\n\n3\n102.0\n1000\naccess\nPOLYGON ((6.17484 5.90644, 6.16764 5.85790, 6....\n\n\n4\n102.0\n1000\naccess\nPOLYGON ((10.14274 6.48276, 10.13554 6.43423, ...\n\n\n5\n102.0\n1000\naccess\nPOLYGON ((7.98666 6.48669, 7.97946 6.43815, 7....\n\n\n6\n45.5\n4000\nNaN\nPOLYGON ((0.00000 4.00000, 5.00000 4.00000, 5....\n\n\n7\n78.7\n2500\nNaN\nPOLYGON ((11.00000 3.00000, 11.00000 0.00000, ...\n\n\n8\n30.5\n3000\nNaN\nPOLYGON ((0.00000 5.00000, 5.00000 5.00000, 5....\n\n\n9\n102.0\n1000\nNaN\nPOLYGON ((11.00000 3.00000, 9.76797 3.00000, 9...\n\n\n\n\n\n\n\n\nintermediate.plot(edgecolor='k')\n\n&lt;Axes: &gt;\n\n\n\n\n\n\nintermediate[\"access\"] = intermediate.access.fillna(\"no access\")\n\n\nintermediate.plot('access', edgecolor='k', categorical=True, legend=True)\n\n&lt;Axes: &gt;\n\n\n\n\n\n\nintermediate[intermediate.access=='no access'].plot(edgecolor='k')\n\n&lt;Axes: &gt;\n\n\n\n\n\n\n\n\n\nimport tobler\n\n\ntobler.area_weighted.area_interpolate(pl_df, intermediate, \n                                      extensive_variables=['population'],\n                                      intensive_variables=['pci'])\n\n\n\n\n\n\n\n\npopulation\npci\ngeometry\n\n\n\n\n0\n156.827435\n45.500000\nPOLYGON ((2.33678 1.99659, 2.32958 1.94806, 2....\n\n\n1\n32.141898\n78.699995\nPOLYGON ((9.76797 3.00000, 9.75810 2.97241, 9....\n\n\n2\n18.423850\n102.000000\nPOLYGON ((8.82435 3.00000, 8.81769 3.01861, 8....\n\n\n3\n26.137905\n102.000000\nPOLYGON ((6.17484 5.90644, 6.16764 5.85790, 6....\n\n\n4\n26.137905\n102.000000\nPOLYGON ((10.14274 6.48276, 10.13554 6.43423, ...\n\n\n5\n26.137905\n102.000000\nPOLYGON ((7.98666 6.48669, 7.97946 6.43815, 7....\n\n\n6\n3843.172550\n45.500000\nPOLYGON ((0.00000 4.00000, 5.00000 4.00000, 5....\n\n\n7\n2467.858046\n78.700000\nPOLYGON ((11.00000 3.00000, 11.00000 0.00000, ...\n\n\n8\n3000.000000\n30.500000\nPOLYGON ((0.00000 5.00000, 5.00000 5.00000, 5....\n\n\n9\n903.162479\n102.000000\nPOLYGON ((11.00000 3.00000, 9.76797 3.00000, 9...\n\n\n\n\n\n\n\n\nfinal = tobler.area_weighted.area_interpolate(pl_df, intermediate, \n                                      extensive_variables=['population'],\n                                      intensive_variables=['pci'])\n\n\nfinal.population.sum()\n\n10499.999973922968\n\n\n\nintermediate.population.sum()\n\n21000\n\n\n\nfinal['access'] = intermediate.access\n\n\nfinal\n\n\n\n\n\n\n\n\npopulation\npci\ngeometry\naccess\n\n\n\n\n0\n156.827435\n45.500000\nPOLYGON ((2.33678 1.99659, 2.32958 1.94806, 2....\naccess\n\n\n1\n32.141898\n78.699995\nPOLYGON ((9.76797 3.00000, 9.75810 2.97241, 9....\naccess\n\n\n2\n18.423850\n102.000000\nPOLYGON ((8.82435 3.00000, 8.81769 3.01861, 8....\naccess\n\n\n3\n26.137905\n102.000000\nPOLYGON ((6.17484 5.90644, 6.16764 5.85790, 6....\naccess\n\n\n4\n26.137905\n102.000000\nPOLYGON ((10.14274 6.48276, 10.13554 6.43423, ...\naccess\n\n\n5\n26.137905\n102.000000\nPOLYGON ((7.98666 6.48669, 7.97946 6.43815, 7....\naccess\n\n\n6\n3843.172550\n45.500000\nPOLYGON ((0.00000 4.00000, 5.00000 4.00000, 5....\nno access\n\n\n7\n2467.858046\n78.700000\nPOLYGON ((11.00000 3.00000, 11.00000 0.00000, ...\nno access\n\n\n8\n3000.000000\n30.500000\nPOLYGON ((0.00000 5.00000, 5.00000 5.00000, 5....\nno access\n\n\n9\n903.162479\n102.000000\nPOLYGON ((11.00000 3.00000, 9.76797 3.00000, 9...\nno access\n\n\n\n\n\n\n\nHow many people live within the access buffers?\n\nfinal[['population', 'access']].groupby(by='access').sum()\n\n\n\n\n\n\n\n\npopulation\n\n\naccess\n\n\n\n\n\naccess\n285.806898\n\n\nno access\n10214.193076\n\n\n\n\n\n\n\nWhat are the income levels in the two areas?\n\nfinal[['pci', 'access']].groupby(by='access').mean()\n\n\n\n\n\n\n\n\npci\n\n\naccess\n\n\n\n\n\naccess\n88.699999\n\n\nno access\n64.175000"
  },
  {
    "objectID": "week-07/spatial_joins.html#how",
    "href": "week-07/spatial_joins.html#how",
    "title": "Spatial Joins, Overlay, and Interpolation",
    "section": "",
    "text": "gpd.sjoin(pl_df, points)\n\n\n\n\n\n\n\n\ngeometry\nindex_right\n\n\n\n\n2\nPOLYGON ((9.00000 5.00000, 9.00000 7.00000, 4....\n2\n\n\n2\nPOLYGON ((9.00000 5.00000, 9.00000 7.00000, 4....\n4\n\n\n\n\n\n\n\n\ngpd.sjoin(pl_df, points, how='left') \n\n\n\n\n\n\n\n\ngeometry\nindex_right\n\n\n\n\n0\nPOLYGON ((0.00000 0.00000, 4.00000 0.00000, 4....\nNaN\n\n\n1\nPOLYGON ((6.00000 1.00000, 7.00000 2.00000, 5....\nNaN\n\n\n2\nPOLYGON ((9.00000 5.00000, 9.00000 7.00000, 4....\n2.0\n\n\n2\nPOLYGON ((9.00000 5.00000, 9.00000 7.00000, 4....\n4.0\n\n\n\n\n\n\n\n\ngpd.sjoin(pl_df, points, how='right') \n\n\n\n\n\n\n\n\nindex_left\ngeometry\n\n\n\n\n0\nNaN\nPOINT (9.29616 3.16376)\n\n\n1\nNaN\nPOINT (1.83919 2.04560)\n\n\n2\n2.0\nPOINT (5.67725 5.95545)\n\n\n3\nNaN\nPOINT (9.64515 6.53177)\n\n\n4\n2.0\nPOINT (7.48907 6.53570)\n\n\n\n\n\n\n\n\ngpd.sjoin(pl_df, points, how='inner')  # default\n\n\n\n\n\n\n\n\ngeometry\nindex_right\n\n\n\n\n2\nPOLYGON ((9.00000 5.00000, 9.00000 7.00000, 4....\n2\n\n\n2\nPOLYGON ((9.00000 5.00000, 9.00000 7.00000, 4....\n4"
  },
  {
    "objectID": "week-07/spatial_joins.html#nearest",
    "href": "week-07/spatial_joins.html#nearest",
    "title": "Spatial Joins, Overlay, and Interpolation",
    "section": "",
    "text": "b = pl_df.plot()\npoints.plot(ax=b, color='r')\n\n&lt;Axes: &gt;\n\n\n\n\n\n\ngpd.sjoin_nearest(pl_df, points)\n\n\n\n\n\n\n\n\ngeometry\nindex_right\n\n\n\n\n0\nPOLYGON ((0.00000 0.00000, 4.00000 0.00000, 4....\n1\n\n\n1\nPOLYGON ((6.00000 1.00000, 7.00000 2.00000, 5....\n2\n\n\n2\nPOLYGON ((9.00000 5.00000, 9.00000 7.00000, 4....\n2\n\n\n2\nPOLYGON ((9.00000 5.00000, 9.00000 7.00000, 4....\n4\n\n\n\n\n\n\n\n\ngpd.sjoin_nearest(pl_df, points, distance_col='distance') # distance is 0 if point is in polygon and multiple records if poly contains more than 1 point\n\n\n\n\n\n\n\n\ngeometry\nindex_right\ndistance\n\n\n\n\n0\nPOLYGON ((0.00000 0.00000, 4.00000 0.00000, 4....\n1\n1.359027\n\n\n1\nPOLYGON ((6.00000 1.00000, 7.00000 2.00000, 5....\n2\n2.069406\n\n\n2\nPOLYGON ((9.00000 5.00000, 9.00000 7.00000, 4....\n2\n0.000000\n\n\n2\nPOLYGON ((9.00000 5.00000, 9.00000 7.00000, 4....\n4\n0.000000\n\n\n\n\n\n\n\n\ngpd.sjoin_nearest(points, pl_df, distance_col='distance')\n\n\n\n\n\n\n\n\ngeometry\nindex_right\ndistance\n\n\n\n\n0\nPOINT (9.29616 3.16376)\n2\n1.507838\n\n\n2\nPOINT (5.67725 5.95545)\n2\n0.000000\n\n\n3\nPOINT (9.64515 6.53177)\n2\n0.645145\n\n\n4\nPOINT (7.48907 6.53570)\n2\n0.000000\n\n\n1\nPOINT (1.83919 2.04560)\n0\n1.359027"
  },
  {
    "objectID": "week-07/spatial_joins.html#overlay",
    "href": "week-07/spatial_joins.html#overlay",
    "title": "Spatial Joins, Overlay, and Interpolation",
    "section": "",
    "text": "polys = [ [(0,0), (5,0), (5,4), (0,4)],\n          [(5,0), (11,0), (11,3), (5,3)],\n         [(0,5), (5,5), (5,8), (0,8)],\n         [ (5,3), (11,3), (11,8), (5, 8)]] \n\n\npl_df = gpd.GeoDataFrame(geometry =[Polygon(poly) for poly in polys])\n\n\npl_df.plot(edgecolor='k')\n\n&lt;Axes: &gt;\n\n\n\n\n\n\nbuffer = points.buffer(0.5)\n\n\nbase = pl_df.plot(edgecolor='k')\nbuffer.plot(ax=base, color='g')\n\n&lt;Axes: &gt;\n\n\n\n\n\n\npl_df['pci'] = [45.5, 78.7, 30.5, 102.0]\npl_df['population'] = [4000, 2500, 3000, 1000]\n\n\nbuffer = gpd.GeoDataFrame(geometry=buffer)\nbuffer['access'] = 'access'\n\n\npl_df.overlay(buffer, how='union')\n\n\n\n\n\n\n\n\npci\npopulation\naccess\ngeometry\n\n\n\n\n0\n45.5\n4000\naccess\nPOLYGON ((2.33678 1.99659, 2.32958 1.94806, 2....\n\n\n1\n78.7\n2500\naccess\nPOLYGON ((9.76797 3.00000, 9.75810 2.97241, 9....\n\n\n2\n102.0\n1000\naccess\nPOLYGON ((8.82435 3.00000, 8.81769 3.01861, 8....\n\n\n3\n102.0\n1000\naccess\nPOLYGON ((6.17484 5.90644, 6.16764 5.85790, 6....\n\n\n4\n102.0\n1000\naccess\nPOLYGON ((10.14274 6.48276, 10.13554 6.43423, ...\n\n\n5\n102.0\n1000\naccess\nPOLYGON ((7.98666 6.48669, 7.97946 6.43815, 7....\n\n\n6\n45.5\n4000\nNaN\nPOLYGON ((0.00000 4.00000, 5.00000 4.00000, 5....\n\n\n7\n78.7\n2500\nNaN\nPOLYGON ((11.00000 3.00000, 11.00000 0.00000, ...\n\n\n8\n30.5\n3000\nNaN\nPOLYGON ((0.00000 5.00000, 5.00000 5.00000, 5....\n\n\n9\n102.0\n1000\nNaN\nPOLYGON ((11.00000 3.00000, 9.76797 3.00000, 9...\n\n\n\n\n\n\n\n\nintermediate = pl_df.overlay(buffer, how='union')\n\n\nintermediate\n\n\n\n\n\n\n\n\npci\npopulation\naccess\ngeometry\n\n\n\n\n0\n45.5\n4000\naccess\nPOLYGON ((2.33678 1.99659, 2.32958 1.94806, 2....\n\n\n1\n78.7\n2500\naccess\nPOLYGON ((9.76797 3.00000, 9.75810 2.97241, 9....\n\n\n2\n102.0\n1000\naccess\nPOLYGON ((8.82435 3.00000, 8.81769 3.01861, 8....\n\n\n3\n102.0\n1000\naccess\nPOLYGON ((6.17484 5.90644, 6.16764 5.85790, 6....\n\n\n4\n102.0\n1000\naccess\nPOLYGON ((10.14274 6.48276, 10.13554 6.43423, ...\n\n\n5\n102.0\n1000\naccess\nPOLYGON ((7.98666 6.48669, 7.97946 6.43815, 7....\n\n\n6\n45.5\n4000\nNaN\nPOLYGON ((0.00000 4.00000, 5.00000 4.00000, 5....\n\n\n7\n78.7\n2500\nNaN\nPOLYGON ((11.00000 3.00000, 11.00000 0.00000, ...\n\n\n8\n30.5\n3000\nNaN\nPOLYGON ((0.00000 5.00000, 5.00000 5.00000, 5....\n\n\n9\n102.0\n1000\nNaN\nPOLYGON ((11.00000 3.00000, 9.76797 3.00000, 9...\n\n\n\n\n\n\n\n\nintermediate.plot(edgecolor='k')\n\n&lt;Axes: &gt;\n\n\n\n\n\n\nintermediate[\"access\"] = intermediate.access.fillna(\"no access\")\n\n\nintermediate.plot('access', edgecolor='k', categorical=True, legend=True)\n\n&lt;Axes: &gt;\n\n\n\n\n\n\nintermediate[intermediate.access=='no access'].plot(edgecolor='k')\n\n&lt;Axes: &gt;"
  },
  {
    "objectID": "week-07/spatial_joins.html#interpolation",
    "href": "week-07/spatial_joins.html#interpolation",
    "title": "Spatial Joins, Overlay, and Interpolation",
    "section": "",
    "text": "import tobler\n\n\ntobler.area_weighted.area_interpolate(pl_df, intermediate, \n                                      extensive_variables=['population'],\n                                      intensive_variables=['pci'])\n\n\n\n\n\n\n\n\npopulation\npci\ngeometry\n\n\n\n\n0\n156.827435\n45.500000\nPOLYGON ((2.33678 1.99659, 2.32958 1.94806, 2....\n\n\n1\n32.141898\n78.699995\nPOLYGON ((9.76797 3.00000, 9.75810 2.97241, 9....\n\n\n2\n18.423850\n102.000000\nPOLYGON ((8.82435 3.00000, 8.81769 3.01861, 8....\n\n\n3\n26.137905\n102.000000\nPOLYGON ((6.17484 5.90644, 6.16764 5.85790, 6....\n\n\n4\n26.137905\n102.000000\nPOLYGON ((10.14274 6.48276, 10.13554 6.43423, ...\n\n\n5\n26.137905\n102.000000\nPOLYGON ((7.98666 6.48669, 7.97946 6.43815, 7....\n\n\n6\n3843.172550\n45.500000\nPOLYGON ((0.00000 4.00000, 5.00000 4.00000, 5....\n\n\n7\n2467.858046\n78.700000\nPOLYGON ((11.00000 3.00000, 11.00000 0.00000, ...\n\n\n8\n3000.000000\n30.500000\nPOLYGON ((0.00000 5.00000, 5.00000 5.00000, 5....\n\n\n9\n903.162479\n102.000000\nPOLYGON ((11.00000 3.00000, 9.76797 3.00000, 9...\n\n\n\n\n\n\n\n\nfinal = tobler.area_weighted.area_interpolate(pl_df, intermediate, \n                                      extensive_variables=['population'],\n                                      intensive_variables=['pci'])\n\n\nfinal.population.sum()\n\n10499.999973922968\n\n\n\nintermediate.population.sum()\n\n21000\n\n\n\nfinal['access'] = intermediate.access\n\n\nfinal\n\n\n\n\n\n\n\n\npopulation\npci\ngeometry\naccess\n\n\n\n\n0\n156.827435\n45.500000\nPOLYGON ((2.33678 1.99659, 2.32958 1.94806, 2....\naccess\n\n\n1\n32.141898\n78.699995\nPOLYGON ((9.76797 3.00000, 9.75810 2.97241, 9....\naccess\n\n\n2\n18.423850\n102.000000\nPOLYGON ((8.82435 3.00000, 8.81769 3.01861, 8....\naccess\n\n\n3\n26.137905\n102.000000\nPOLYGON ((6.17484 5.90644, 6.16764 5.85790, 6....\naccess\n\n\n4\n26.137905\n102.000000\nPOLYGON ((10.14274 6.48276, 10.13554 6.43423, ...\naccess\n\n\n5\n26.137905\n102.000000\nPOLYGON ((7.98666 6.48669, 7.97946 6.43815, 7....\naccess\n\n\n6\n3843.172550\n45.500000\nPOLYGON ((0.00000 4.00000, 5.00000 4.00000, 5....\nno access\n\n\n7\n2467.858046\n78.700000\nPOLYGON ((11.00000 3.00000, 11.00000 0.00000, ...\nno access\n\n\n8\n3000.000000\n30.500000\nPOLYGON ((0.00000 5.00000, 5.00000 5.00000, 5....\nno access\n\n\n9\n903.162479\n102.000000\nPOLYGON ((11.00000 3.00000, 9.76797 3.00000, 9...\nno access\n\n\n\n\n\n\n\nHow many people live within the access buffers?\n\nfinal[['population', 'access']].groupby(by='access').sum()\n\n\n\n\n\n\n\n\npopulation\n\n\naccess\n\n\n\n\n\naccess\n285.806898\n\n\nno access\n10214.193076\n\n\n\n\n\n\n\nWhat are the income levels in the two areas?\n\nfinal[['pci', 'access']].groupby(by='access').mean()\n\n\n\n\n\n\n\n\npci\n\n\naccess\n\n\n\n\n\naccess\n88.699999\n\n\nno access\n64.175000"
  },
  {
    "objectID": "week-06/spatialinequality.html",
    "href": "week-06/spatialinequality.html",
    "title": "Regional Inequality Decomposition",
    "section": "",
    "text": "import seaborn\nimport pandas\nimport geopandas\nimport pysal\nimport numpy\nimport mapclassify\nimport matplotlib.pyplot as plt\nfrom pysal.explore import esda\nfrom pysal.lib import weights\n\n/opt/tljh/user/lib/python3.10/site-packages/numba/core/decorators.py:262: NumbaDeprecationWarning: numba.generated_jit is deprecated. Please see the documentation at: https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-generated-jit for more information and advice on a suitable replacement.\n  warnings.warn(msg, NumbaDeprecationWarning)\n/opt/tljh/user/lib/python3.10/site-packages/quantecon/lss.py:20: NumbaDeprecationWarning: The 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.\n  def simulate_linear_model(A, x0, v, ts_length):\n/opt/tljh/user/lib/python3.10/site-packages/spaghetti/network.py:40: FutureWarning: The next major release of pysal/spaghetti (2.0.0) will drop support for all ``libpysal.cg`` geometries. This change is a first step in refactoring ``spaghetti`` that is expected to result in dramatically reduced runtimes for network instantiation and operations. Users currently requiring network and point pattern input as ``libpysal.cg`` geometries should prepare for this simply by converting to ``shapely`` geometries.\n  warnings.warn(dep_msg, FutureWarning, stacklevel=1)\n\n\n\npci_df = geopandas.read_file(\n    \"uscountypcincome.gpkg\"\n)\npci_df.columns\n\nERROR 1: PROJ: proj_create_from_database: Open of /opt/tljh/user/share/proj failed\n\n\nIndex(['STATEFP', 'COUNTYFP', 'COUNTYNS', 'GEOID', 'NAME', 'NAMELSAD', 'LSAD',\n       'CLASSFP', 'MTFCC', 'CSAFP', 'CBSAFP', 'METDIVFP', 'FUNCSTAT', 'ALAND',\n       'AWATER', 'INTPTLAT', 'INTPTLON', 'GeoFIPS', 'GeoName', 'Region',\n       'TableName', 'LineCode', 'Descriptio', 'Unit', '1969', '1970', '1971',\n       '1972', '1973', '1974', '1975', '1976', '1977', '1978', '1979', '1980',\n       '1981', '1982', '1983', '1984', '1985', '1986', '1987', '1988', '1989',\n       '1990', '1991', '1992', '1993', '1994', '1995', '1996', '1997', '1998',\n       '1999', '2000', '2001', '2002', '2003', '2004', '2005', '2006', '2007',\n       '2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016',\n       '2017', 'index', 'IndustryCl', 'Descript_1', 'geometry'],\n      dtype='object')\n\n\n\npci_df.shape\n\n(3076, 77)\n\n\n\npci_df.query('NAME == \"Jackson\" & STATEFP == \"28\"').loc[\n    :, \"1969\":\"1979\"\n]\n\n\n\n\n\n\n\n\n1969\n1970\n1971\n1972\n1973\n1974\n1975\n1976\n1977\n1978\n1979\n\n\n\n\n1417\n2957\n3121\n3327\n3939\n4203\n4547\n5461\n5927\n6315\n6619\n6967\n\n\n\n\n\n\n\n\nseaborn.histplot(x=pci_df[\"1969\"], kde=True);\n\n\n\n\n\npci_df = pci_df.to_crs(\n    # Albers Equal Area North America\n    epsg=5070\n)\n\n\nax = pci_df.plot(\n    column=\"1969\",\n    scheme=\"Quantiles\",\n    legend=True,\n    edgecolor=\"none\",\n    legend_kwds={\"loc\": \"lower left\"},\n    figsize=(12, 12),\n)\nax.set_axis_off()\nplt.show()\n\n\n\n\n\n\ntop20, bottom20 = pci_df[\"1969\"].quantile([0.8, 0.2])\n\n\ntop20/bottom20\n\n1.5022494887525562\n\n\n\ndef ineq_20_20(values):\n    top20, bottom20 = values.quantile([0.8, 0.2])\n    return top20 / bottom20\n\n\n# Generate range of strings from 1969 to 2018\nyears = numpy.arange(1969, 2018).astype(str)\n# Compute 20:20 ratio for every year\nratio_2020 = pci_df[years].apply(ineq_20_20, axis=0)\n# Plot evolution of 20:20 ratio\nax = plt.plot(years, ratio_2020)\n\n# Grab figure generated in the plot\nfigure = plt.gcf()\n# Replace tick labels with every other year\nplt.xticks(years[::2])\n# Set vertical label\nplt.ylabel(\"20:20 ratio\")\n# Set horizontal label\nplt.xlabel(\"Year\")\n# Rotate year labels\nfigure.autofmt_xdate(rotation=45)\n\nplt.show()\n\n\n\n\n\nfrom pysal.explore import inequality\n\n\nn = len(pci_df)\nshare_of_population = numpy.arange(1, n + 1) / n\n\n\nincomes = pci_df[\"1969\"].sort_values()\n\n\nshares = incomes / incomes.sum()\n\n\ncumulative_share = shares.cumsum()\n\n\n# Generate figure with one axis\nf, ax = plt.subplots()\n# Plot Lorenz Curve\nax.plot(share_of_population, cumulative_share, label=\"Lorenz Curve\")\n# Plot line of perfect equality\nax.plot((0, 1), (0, 1), color=\"r\", label=\"Perfect Equality\")\n# Label horizontal axis\nax.set_xlabel(\"Share of population\")\n# Label vertical axis\nax.set_ylabel(\"Share of income\")\n# Add legend\nax.legend()\n\nplt.show()\n\n\n\n\n\n\ndef lorenz(y):\n    y = numpy.asarray(y)\n    incomes = numpy.sort(y)\n    income_shares = (incomes / incomes.sum()).cumsum()\n    N = y.shape[0]\n    pop_shares = numpy.arange(1, N + 1) / N\n    return pop_shares, income_shares\n\n\nlorenz(pci_df[\"1969\"])\n\n(array([3.25097529e-04, 6.50195059e-04, 9.75292588e-04, ...,\n        9.99349805e-01, 9.99674902e-01, 1.00000000e+00]),\n array([1.22486441e-04, 2.52956561e-04, 3.83636778e-04, ...,\n        9.98429316e-01, 9.99176315e-01, 1.00000000e+00]))\n\n\n\nlorenz_curves = pci_df[years].apply(lorenz, axis=0)\n\n\n# Set up figure with one axis\nf, ax = plt.subplots()\n# Plot line of perfect equality\nax.plot((0, 1), (0, 1), color=\"r\")\n# Loop over every year in the series\nfor year in lorenz_curves.columns:\n    # Extract the two arrays or each dimension\n    year_pop_shares, year_inc_shares = lorenz_curves[year].values\n    # Plot Lorenz curve for a given year\n    ax.plot(year_pop_shares, year_inc_shares, color=\"k\", alpha=0.05)\n\n\n\n\n\ng69 = inequality.gini.Gini(pci_df[\"1969\"].values)\n\n\ng69.g\n\n0.13556175504269904\n\n\n\ndef gini_by_col(column):\n    return inequality.gini.Gini(column.values).g\n\n\ninequalities = (\n    pci_df[years].apply(gini_by_col, axis=0).to_frame(\"gini\")\n)\n\n\ninequalities.head()\n\n\n\n\n\n\n\n\ngini\n\n\n\n\n1969\n0.135562\n\n\n1970\n0.130076\n\n\n1971\n0.128540\n\n\n1972\n0.129126\n\n\n1973\n0.142166\n\n\n\n\n\n\n\n\ninequalities.plot(figsize=(10, 3));\n\n\n\n\n\ndef theil(column):\n    return inequality.theil.Theil(column.values).T\n\n\ninequalities[\"theil\"] = pci_df[years].apply(theil, axis=0)\n\n\n_ = seaborn.regplot(x=\"theil\", y=\"gini\", data=inequalities)\n\n\n\n\n\nwq = weights.Queen.from_dataframe(pci_df)\n\n/tmp/ipykernel_268899/2833574135.py:1: FutureWarning: `use_index` defaults to False but will default to True in future. Set True/False directly to control this behavior and silence this warning\n  wq = weights.Queen.from_dataframe(pci_df)\n\n\n\ndef moran_by_col(y, w=wq):\n    mo = esda.Moran(y, w=w)\n    mo_s = pandas.Series(\n        {\"I\": mo.I, \"I-P value\": mo.p_sim},\n    )\n    return mo_s\n\n\nmoran_stats = pci_df[years].apply(moran_by_col, axis=0).T\n\nmoran_stats.head()\n\n\n\n\n\n\n\n\nI\nI-P value\n\n\n\n\n1969\n0.649090\n0.001\n\n\n1970\n0.647438\n0.001\n\n\n1971\n0.626546\n0.001\n\n\n1972\n0.606760\n0.001\n\n\n1973\n0.640226\n0.001\n\n\n\n\n\n\n\n\ninequalities = inequalities.join(moran_stats)\n\n\ninequalities[[\"I\", \"I-P value\"]].plot(subplots=True, figsize=(10, 6))\nplt.show()\n\n\n\n\n\nregion_names = {\n    1: \"New England\",\n    2: \"Mideast\",\n    3: \"Great Lakes\",\n    4: \"Plains\",\n    5: \"Southeast\",\n    6: \"Southwest\",\n    7: \"Rocky Mountain\",\n    8: \"Far West\",\n}\n\n\nax = pci_df.assign(Region_Name=pci_df.Region.map(region_names)).plot(\n    \"Region_Name\",\n    linewidth=0,\n    legend=True,\n    categorical=True,\n    legend_kwds=dict(bbox_to_anchor=(1.2, 0.5)),\n)\nax.set_axis_off();\n\n\n\n\n\ntheil_dr = inequality.theil.TheilD(\n    pci_df[years].values, pci_df.Region\n)\n\n\ntheil_dr.bg\n\narray([0.00914353, 0.00822696, 0.00782675, 0.00768201, 0.01022634,\n       0.0081274 , 0.00783943, 0.00572543, 0.00560271, 0.0054971 ,\n       0.00511791, 0.00566001, 0.00486877, 0.00466134, 0.00474425,\n       0.00424528, 0.00428434, 0.00453503, 0.00465829, 0.00456699,\n       0.00467363, 0.00412391, 0.00366334, 0.00342112, 0.00327131,\n       0.00312475, 0.00326071, 0.00359733, 0.00327591, 0.00363014,\n       0.00382409, 0.00436261, 0.00399156, 0.00402506, 0.00397   ,\n       0.00394649, 0.00353368, 0.00362698, 0.00400508, 0.00449814,\n       0.0043533 , 0.00470988, 0.0063954 , 0.00642426, 0.00694236,\n       0.00644971, 0.00591871, 0.00554072, 0.00528702])\n\n\n\ninequalities[\"theil_between\"] = theil_dr.bg\ninequalities[\"theil_within\"] = theil_dr.wg\n\n\ninequalities[\"theil_between_share\"] = (\n    inequalities[\"theil_between\"] / inequalities[\"theil\"]\n)\n\n\ninequalities[\n    [\"theil_between\", \"theil_within\", \"theil_between_share\"]\n].plot(subplots=True, figsize=(10, 8));\n\n\n\n\n\ntheil_drs = inequality.theil.TheilDSim(\n    pci_df[years].values, pci_df.Region\n)\n\n\ntheil_drs.bg_pvalue\n\narray([0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01,\n       0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01,\n       0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01,\n       0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01,\n       0.01, 0.01, 0.01, 0.01, 0.01])\n\n\n\nsim = theil_drs.bg[1:,:]\n\n\nsim.shape\n\n(99, 49)\n\n\n\nimport pandas as pd\ndf = pd.DataFrame(index=years, data={'mean':sim.mean(axis=0), 'std': sim.std(axis=0)})\n\n\ndf.plot(kind='bar', y='mean', yerr='std', rot=0)\n\n&lt;Axes: &gt;\n\n\n\n\n\n\nfig, ax = plt.subplots()\nax.plot(years, theil_drs.bg[0], 'o', color='r')\nax.fill_between(years, df['mean']- 1.96*df['std'], df['mean']+ 1.96*df['std'], alpha=0.2)\nax.plot(years, df['mean']);\n\n\n\n\n\nimport matplotlib.ticker as mticker\n\n\nmyLocator = mticker.MultipleLocator(5)\nax.xaxis.set_major_locator(myLocator)\nfig, ax = plt.subplots()\nax.plot(years, theil_drs.bg[0], 'o', color='r')\nax.fill_between(years, df['mean']- 1.96*df['std'], df['mean']+ 1.96*df['std'], alpha=0.2)\nax.plot(years, df['mean'])\nmyLocator = mticker.MultipleLocator(5)\nax.xaxis.set_major_locator(myLocator);\n\n\n\n\n\ndf.columns\n\nIndex(['mean', 'std'], dtype='object')\n\n\n\ndf.head()\n\n\n\n\n\n\n\n\nmean\nstd\n\n\n\n\n1969\n0.000071\n0.000037\n\n\n1970\n0.000067\n0.000034\n\n\n1971\n0.000065\n0.000036\n\n\n1972\n0.000068\n0.000036\n\n\n1973\n0.000084\n0.000046"
  },
  {
    "objectID": "week-08/accessibility.html",
    "href": "week-08/accessibility.html",
    "title": "Continuous Accessibility Measures",
    "section": "",
    "text": "import geopandas as gpd\nimport pandas as pd\n\n# random coordinates\ngdf_1 = gpd.GeoDataFrame(geometry=gpd.points_from_xy([0, 0, 0], [0, 90, 120]))\ngdf_2 = gpd.GeoDataFrame(geometry=gpd.points_from_xy([0, 0], [0, -90]))\n\ngdf_1.geometry.apply(lambda g: gdf_2.distance(g))\n\n\n\n\n\n\n\n\n0\n1\n\n\n\n\n0\n0.0\n90.0\n\n\n1\n90.0\n180.0\n\n\n2\n120.0\n210.0\ngdf_1.geometry.apply(lambda g: gdf_1.distance(g))\n\n\n\n\n\n\n\n\n0\n1\n2\n\n\n\n\n0\n0.0\n90.0\n120.0\n\n\n1\n90.0\n0.0\n30.0\n\n\n2\n120.0\n30.0\n0.0\ngdf_1.geometry.apply(lambda g: gdf_1.distance(g)).median(axis=0)\n\n0    90.0\n1    30.0\n2    30.0\ndtype: float64\nclinics = gpd.read_file('/home/jupyter-student/behavioralHealth.shp')\n\nERROR 1: PROJ: proj_create_from_database: Open of /opt/tljh/user/share/proj failed\nclinics.plot()\n\n&lt;Axes: &gt;\nsocal = gpd.read_parquet('/home/jupyter-student/data/scag_region.parquet')\nsocal.crs\n\n&lt;Geographic 2D CRS: EPSG:4326&gt;\nName: WGS 84\nAxis Info [ellipsoidal]:\n- Lat[north]: Geodetic latitude (degree)\n- Lon[east]: Geodetic longitude (degree)\nArea of Use:\n- name: World.\n- bounds: (-180.0, -90.0, 180.0, 90.0)\nDatum: World Geodetic System 1984 ensemble\n- Ellipsoid: WGS 84\n- Prime Meridian: Greenwich\nsocal = socal.to_crs(clinics.crs)\nrc = socal[socal.geoid.str.startswith(\"06065\")]\nrc.plot()\n\n&lt;Axes: &gt;\nrc.shape\n\n(453, 194)\nrc.geometry.apply(lambda g: clinics.distance(g)).median(axis=0)\n\n0     104070.136497\n1     110145.422279\n2     118486.478639\n3     780106.703273\n4     109999.756757\n5     110145.422279\n6      93068.512487\n7     127360.564230\n8     110274.481746\n9     130577.585244\n10    110145.422279\n11    303743.579448\n12    110145.422279\n13    162687.749002\n14    110501.825357\n15    226157.792611\n16    130575.090996\n17     86833.101138\n18    128491.121930\n19    162684.638468\n20    145278.329356\n21    226161.334468\n22    299007.725394\n23    105090.401115\n24    110146.607263\n25    104067.484478\n26    110501.616968\n27    110499.112055\ndtype: float64\nclinics.geometry.apply(lambda g: rc.distance(g)).median(axis=0)\n\n171      35414.497106\n172      57404.024199\n173      70444.292093\n174      59916.246444\n175      65899.907435\n            ...      \n4559     51754.814636\n4560     69235.098968\n4568    121785.198080\n4569    147379.220664\n4578    261177.893498\nLength: 453, dtype: float64\nclinics.geometry.apply(lambda g: rc.distance(g)).min(axis=0)\n\n171     17587.507322\n172         0.000000\n173     11703.070730\n174      6093.825933\n175     10885.748131\n            ...     \n4559    23468.056401\n4560    14504.796947\n4568    45895.492409\n4569     3988.154669\n4578    10834.765951\nLength: 453, dtype: float64\nclinics['cent'] = clinics.centroid\nrc['cent'] = rc.centroid\n\n/opt/tljh/user/lib/python3.10/site-packages/geopandas/geodataframe.py:1543: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  super().__setitem__(key, value)\nrc.set_geometry('cent', inplace=True)\nrc.plot()\n\n&lt;Axes: &gt;\nclinics.geometry.apply(lambda g: rc.distance(g)).min(axis=0)\n\n171     23599.208237\n172      3019.158172\n173     14930.591185\n174      7500.806546\n175     17330.260026\n            ...     \n4559    27631.243530\n4560    16783.956907\n4568    50460.359167\n4569     6795.067162\n4578    14591.568700\nLength: 453, dtype: float64\nrc['dist'] = clinics.geometry.apply(lambda g: rc.distance(g)).min(axis=0)\n\n/opt/tljh/user/lib/python3.10/site-packages/geopandas/geodataframe.py:1543: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  super().__setitem__(key, value)\nrc.set_geometry('geometry', inplace=True)\nrc.per_capita_income\n\n171     41397.573034\n172     19270.082397\n173     24544.962547\n174     12246.346442\n175     16792.718165\n            ...     \n4559    19985.523408\n4560    34261.675094\n4568    25011.033708\n4569    14872.897004\n4578    22086.110487\nName: per_capita_income, Length: 453, dtype: float64\nrc.plot(column='dist', scheme='quantiles',k=10, legend=True,\n       legend_kwds={'bbox_to_anchor': (1.5, 1)})\n\n&lt;Axes: &gt;"
  },
  {
    "objectID": "week-08/accessibility.html#now-on-centroids-of-tracts",
    "href": "week-08/accessibility.html#now-on-centroids-of-tracts",
    "title": "Continuous Accessibility Measures",
    "section": "now on centroids of tracts",
    "text": "now on centroids of tracts\n\nrc.centroid\n\n171     POINT (6228927.025 2271856.585)\n172     POINT (6232768.433 2305432.441)\n173     POINT (6267251.000 2290261.360)\n174     POINT (6257557.755 2288526.028)\n175     POINT (6263055.600 2265924.366)\n                     ...               \n4559    POINT (6174619.367 2298965.242)\n4560    POINT (6159739.434 2285871.688)\n4568    POINT (6286719.240 2191439.849)\n4569    POINT (6348755.310 2217649.506)\n4578    POINT (6485172.924 2237980.191)\nLength: 453, dtype: geometry\n\n\n\nrc['centroid'] = rc.centroid\nrc = rc.set_geometry('centroid')\nrc.plot()\n\n/opt/tljh/user/lib/python3.10/site-packages/geopandas/geodataframe.py:1543: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  super().__setitem__(key, value)\n\n\n&lt;Axes: &gt;\n\n\n\n\n\n\nnq = gpd.sjoin_nearest(rc, clinics, distance_col='distance_to_clinic')\nnq.shape\n\n(453, 207)\n\n\n\nnq[['geoid', 'distance_to_clinic']].groupby(by='geoid').min()\n\n\n\n\n\n\n\n\ndistance_to_clinic\n\n\ngeoid\n\n\n\n\n\n06065030101\n2532.133821\n\n\n06065030103\n6435.915812\n\n\n06065030104\n7886.872071\n\n\n06065030200\n13082.177204\n\n\n06065030300\n10765.815358\n\n\n...\n...\n\n\n06065941300\n33303.132676\n\n\n06065941400\n26309.841401\n\n\n06065941500\n29645.998724\n\n\n06065980004\n17580.079738\n\n\n06065981000\n94440.398999\n\n\n\n\n453 rows × 1 columns\n\n\n\n\nnq = nq[['geoid', 'distance_to_clinic']].groupby(by='geoid').min()\n\n\nnq.reset_index(inplace=True)\n\n\nres = rc.merge(nq, left_on='geoid', right_on='geoid')\n\nres.plot('distance_to_clinic', scheme='quantiles', k=10, legend=True,\n        legend_kwds={'bbox_to_anchor': (1.5, 1)})\n\n&lt;Axes: &gt;\n\n\n\n\n\n\nres = res.set_geometry('geometry')\n\n\nres.plot('distance_to_clinic', scheme='quantiles', k=10, legend=True,\n        legend_kwds={'bbox_to_anchor': (1.5, 1)})\n\n&lt;Axes: &gt;\n\n\n\n\n\n\nimport seaborn\n\n\n_ = seaborn.regplot(x='distance_to_clinic', y='p_nonhisp_black_persons', data=res)\n\n\n\n\n\nres[['distance_to_clinic', 'per_capita_income', 'p_nonhisp_black_persons']].corr()\n\n\n\n\n\n\n\n\ndistance_to_clinic\nper_capita_income\np_nonhisp_black_persons\n\n\n\n\ndistance_to_clinic\n1.000000\n0.119891\n-0.108220\n\n\nper_capita_income\n0.119891\n1.000000\n-0.235644\n\n\np_nonhisp_black_persons\n-0.108220\n-0.235644\n1.000000\n\n\n\n\n\n\n\n\n_ = seaborn.regplot(x='distance_to_clinic', y='p_nonhisp_white_persons', data=res)\n\n\n\n\n\n_ = seaborn.regplot(x='p_nonhisp_black_persons', y='p_nonhisp_white_persons', data=res)\n\n\n\n\n\n_ = seaborn.regplot(x='p_hispanic_persons', y='p_nonhisp_white_persons', data=rc)\n\n\n\n\n\n_ = seaborn.regplot(x='p_nonhisp_black_persons', y='p_hispanic_persons', data=rc)"
  },
  {
    "objectID": "week-06/inequality.html",
    "href": "week-06/inequality.html",
    "title": "Regional Inequality",
    "section": "",
    "text": "import seaborn\nimport pandas\nimport geopandas\nimport pysal\nimport mapclassify\nimport matplotlib.pyplot as plt\nfrom pysal.explore import esda\nfrom pysal.lib import weights\n\n/opt/tljh/user/lib/python3.10/site-packages/numba/core/decorators.py:262: NumbaDeprecationWarning: numba.generated_jit is deprecated. Please see the documentation at: https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-generated-jit for more information and advice on a suitable replacement.\n  warnings.warn(msg, NumbaDeprecationWarning)\n/opt/tljh/user/lib/python3.10/site-packages/quantecon/lss.py:20: NumbaDeprecationWarning: The 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.\n  def simulate_linear_model(A, x0, v, ts_length):\n/opt/tljh/user/lib/python3.10/site-packages/spaghetti/network.py:40: FutureWarning: The next major release of pysal/spaghetti (2.0.0) will drop support for all ``libpysal.cg`` geometries. This change is a first step in refactoring ``spaghetti`` that is expected to result in dramatically reduced runtimes for network instantiation and operations. Users currently requiring network and point pattern input as ``libpysal.cg`` geometries should prepare for this simply by converting to ``shapely`` geometries.\n  warnings.warn(dep_msg, FutureWarning, stacklevel=1)\n\n\n\n!ls ~/data\n\n385  geosnap  README.md  stanford-td754wr4701-geotiff.tiff\n584  gtfs     shared     uscountypcincome.gpkg\n\n\n\npci_df = geopandas.read_file(\"~/data/uscountypcincome.gpkg\")\n\nERROR 1: PROJ: proj_create_from_database: Open of /opt/tljh/user/share/proj failed\n\n\n\npci_df.shape\n\n(3076, 77)\n\n\n\npci_df.head()\n\n\n\n\n\n\n\n\nSTATEFP\nCOUNTYFP\nCOUNTYNS\nGEOID\nNAME\nNAMELSAD\nLSAD\nCLASSFP\nMTFCC\nCSAFP\n...\n2012\n2013\n2014\n2015\n2016\n2017\nindex\nIndustryCl\nDescript_1\ngeometry\n\n\n\n\n0\n55\n111\n01581115\n55111\nSauk\nSauk County\n06\nH1\nG4020\n357\n...\n39988\n40655\n42668\n44255\n44540\n45847\nNaN\nNone\nNone\nPOLYGON ((-90.19196 43.55500, -90.31107 43.553...\n\n\n1\n55\n093\n01581107\n55093\nPierce\nPierce County\n06\nH1\nG4020\n378\n...\n39121\n39367\n41626\n43539\n43488\n44636\nNaN\nNone\nNone\nPOLYGON ((-92.69454 44.68874, -92.73204 44.714...\n\n\n2\n55\n063\n01581091\n55063\nLa Crosse\nLa Crosse County\n06\nH1\nG4020\nNone\n...\n41759\n41230\n43637\n45067\n45985\n47134\nNaN\nNone\nNone\nPOLYGON ((-91.34774 43.91196, -91.42519 43.984...\n\n\n3\n55\n033\n01581076\n55033\nDunn\nDunn County\n06\nH1\nG4020\n232\n...\n35909\n35940\n36752\n36835\n37151\n38345\nNaN\nNone\nNone\nPOLYGON ((-92.13538 44.94481, -92.15646 45.209...\n\n\n4\n55\n053\n01581086\n55053\nJackson\nJackson County\n06\nH1\nG4020\nNone\n...\n39319\n38620\n40260\n41189\n41181\n43185\nNaN\nNone\nNone\nPOLYGON ((-91.16601 44.33510, -91.16562 44.596...\n\n\n\n\n5 rows × 77 columns\n\n\n\n\nseaborn.histplot(x=pci_df['1969'], kde=True);\n\n\n\n\n\npci_df.plot()\n\n&lt;Axes: &gt;\n\n\n\n\n\n\npci_df = pci_df.to_crs(epsg=5070)\n\n\npci_df.plot()\n\n&lt;Axes: &gt;\n\n\n\n\n\n\nax = pci_df.plot(\n    column='1969',\n    scheme='Quantiles',\n    legend=True,\n    edgecolor=\"none\",\n    legend_kwds={\"loc\": \"lower left\"},\n    figsize=(12, 12),\n)\nax.set_axis_off()\nplt.show()\n\n                 \n\n\n\n\n\ntop20, bottom20 = pci_df['1969'].quantile([0.8, 0.2])\ntop20 / bottom20\n\n1.5022494887525562\n\n\n\ntop20, bottom20\n\n(3673.0, 2445.0)\n\n\n\ndef ineq_20_20(values):\n    top20, bottom20 = values.quantile([0.8, 0.2])\n    return top20 / bottom20\n\n\nimport numpy\nyears = numpy.arange(1969, 2018).astype(str) \n\n\nyears\n\narray(['1969', '1970', '1971', '1972', '1973', '1974', '1975', '1976',\n       '1977', '1978', '1979', '1980', '1981', '1982', '1983', '1984',\n       '1985', '1986', '1987', '1988', '1989', '1990', '1991', '1992',\n       '1993', '1994', '1995', '1996', '1997', '1998', '1999', '2000',\n       '2001', '2002', '2003', '2004', '2005', '2006', '2007', '2008',\n       '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016',\n       '2017'], dtype='&lt;U21')\n\n\n\nratio_2020 = pci_df[years].apply(ineq_20_20, axis=0)\n\n\nratio_2020.head()\n\n1969    1.502249\n1970    1.465717\n1971    1.466783\n1972    1.462504\n1973    1.516387\ndtype: float64\n\n\n\nax = plt.plot(years, ratio_2020)\n\n\n\n\n\nax = plt.plot(years, ratio_2020)\nfigure = plt.gcf()\nplt.xticks(years[::2])\nplt.ylabel(\"20:20 ratio\")\nplt.xlabel('Year')\nfigure.autofmt_xdate(rotation=45)\nplt.show()\n\n\n\n\n\nfrom pysal.explore import inequality\n\n\nn = len(pci_df)\nn\n\n3076\n\n\n\nshare_of_population = numpy.arange(1, n+1) / n\n\n\nshare_of_population[0:5]\n\narray([0.0003251 , 0.0006502 , 0.00097529, 0.00130039, 0.00162549])\n\n\n\nincomes = pci_df['1969'].sort_values()\n\n\nshares = incomes / incomes.sum()\n\n\nshares[0:5]\n\n2647    0.000122\n78      0.000130\n2981    0.000131\n1047    0.000132\n973     0.000136\nName: 1969, dtype: float64\n\n\n\ncumulative_share = shares.cumsum()\n\n\nf, ax = plt.subplots()\nax. plot(share_of_population, cumulative_share, label='Lorenz Curve')\nax.plot((0,1), (0,1), color='r', label='Perfect Equality')\nax.set_xlabel(\"Share of population\")\nax.set_ylabel(\"Share of income\")\nax.legend()\nplt.show()\n\n\n\n\n\ng69 = inequality.gini.Gini(pci_df['1969'].values)\ng69.g\n\n0.13556175504269904\n\n\n\ndef gini_by_column(column):\n    return inequality.gini.Gini(column.values).g\n\n\ninequalities = (\n    pci_df[years].apply(gini_by_column, axis=0).to_frame(\"gini\")\n)\n\n\ninequalities.head()\n\n\n\n\n\n\n\n\ngini\n\n\n\n\n1969\n0.135562\n\n\n1970\n0.130076\n\n\n1971\n0.128540\n\n\n1972\n0.129126\n\n\n1973\n0.142166\n\n\n\n\n\n\n\n\ninequalities.plot(figsize=(10,3));\n\n\n\n\n\ninequalities.head()\n\n\n\n\n\n\n\n\ngini\n\n\n\n\n1969\n0.135562\n\n\n1970\n0.130076\n\n\n1971\n0.128540\n\n\n1972\n0.129126\n\n\n1973\n0.142166\n\n\n\n\n\n\n\n\ninequalities['20_20'] = ratio_2020\n\n\ninequalities.head()\n\n\n\n\n\n\n\n\ngini\n20_20\n\n\n\n\n1969\n0.135562\n1.502249\n\n\n1970\n0.130076\n1.465717\n\n\n1971\n0.128540\n1.466783\n\n\n1972\n0.129126\n1.462504\n\n\n1973\n0.142166\n1.516387\n\n\n\n\n\n\n\n\n_ = seaborn.regplot(x='gini', y='20_20', data=inequalities)"
  },
  {
    "objectID": "week-07/isochrones.html",
    "href": "week-07/isochrones.html",
    "title": "Isochrones",
    "section": "",
    "text": "from geosnap.analyze import isochrones_from_id, isochrones_from_gdf, pdna_to_adj \nfrom geosnap.io import get_acs\nfrom geosnap import DataStore\n\n/opt/tljh/user/lib/python3.10/site-packages/numba/core/decorators.py:262: NumbaDeprecationWarning: numba.generated_jit is deprecated. Please see the documentation at: https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-generated-jit for more information and advice on a suitable replacement.\n  warnings.warn(msg, NumbaDeprecationWarning)\n/opt/tljh/user/lib/python3.10/site-packages/quantecon/lss.py:20: NumbaDeprecationWarning: The 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.\n  def simulate_linear_model(A, x0, v, ts_length):\ndatasets = DataStore('/srv/data/geosnap')\nsd_tracts = get_acs(datasets, county_fips='06073', years=[2018])\n\n/opt/tljh/user/lib/python3.10/site-packages/geosnap/io/constructors.py:215: UserWarning: Currency columns unavailable at this resolution; not adjusting for inflation\n  warn(\nsd_tracts.plot()\n\n&lt;Axes: &gt;\nimport pandana as pdna\nimport geopandas as gpd\nimport os\nif not os.path.exists('41740.h5'):\n    import quilt3 as q3\n    b = q3.Bucket(\"s3://spatial-ucr\")\n    b.fetch(\"osm/metro_networks_8k/41740.h5\", \"./41740.h5\")\nsd_network = pdna.Network.from_hdf5(\"41740.h5\")\n\nGenerating contraction hierarchies with 32 threads.\nSetting CH node vector of size 332554\nSetting CH edge vector of size 522484\nRange graph removed 143094 edges of 1044968\n. 10% . 20% . 30% . 40% . 50% . 60% . 70% . 80% . 90% . 100%\nfrom random import sample\nrandom_origin = sample(sd_network.nodes_df.index.unique().tolist(),1)[0]\nrandom_origin\n\n49555195\nexample_origin = 1985327805\nadj = pdna_to_adj(sd_tracts.set_index('geoid'), sd_network, threshold=1600, )\n\n/opt/tljh/user/lib/python3.10/site-packages/geosnap/analyze/network.py:34: UserWarning: Geometry is in a geographic CRS. Results from 'centroid' are likely incorrect. Use 'GeoSeries.to_crs()' to re-project geometries to a projected CRS before this operation.\n\n  node_ids = network.get_node_ids(origins.centroid.x, origins.centroid.y).astype(int)\nadj\n\n\n\n\n\n\n\n\norigin\ndestination\ncost\n\n\n\n\n0\n060730001001\n060730001001\n0.000000\n\n\n136\n060730001001\n060730001002\n987.565979\n\n\n197\n060730001001\n060730002011\n1221.943970\n\n\n240\n060730001001\n060730002022\n1465.890991\n\n\n280\n060730001002\n060730001002\n0.000000\n\n\n...\n...\n...\n...\n\n\n1036301\n060730166072\n060730166071\n1596.958008\n\n\n1036304\n060730166073\n060730166073\n0.000000\n\n\n1036489\n060730166073\n060730166071\n932.747009\n\n\n1036512\n060730166073\n060730166072\n982.960022\n\n\n1036608\n060730166073\n060730166101\n1229.456055\n\n\n\n\n11391 rows × 3 columns\n%%time\niso = isochrones_from_id(example_origin, sd_network, threshold=1600 ) # network is expressed in meters\n\n/opt/tljh/user/lib/python3.10/site-packages/geosnap/analyze/network.py:34: UserWarning: Geometry is in a geographic CRS. Results from 'centroid' are likely incorrect. Use 'GeoSeries.to_crs()' to re-project geometries to a projected CRS before this operation.\n\n  node_ids = network.get_node_ids(origins.centroid.x, origins.centroid.y).astype(int)\n\n\nCPU times: user 1.87 s, sys: 13 ms, total: 1.89 s\nWall time: 1.7 s\niso.explore()\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\ntype(sd_network)\n\npandana.network.Network\ndir(sd_network)\n\n['__class__',\n '__delattr__',\n '__dict__',\n '__dir__',\n '__doc__',\n '__eq__',\n '__format__',\n '__ge__',\n '__getattribute__',\n '__gt__',\n '__hash__',\n '__init__',\n '__init_subclass__',\n '__le__',\n '__lt__',\n '__module__',\n '__ne__',\n '__new__',\n '__reduce__',\n '__reduce_ex__',\n '__repr__',\n '__setattr__',\n '__sizeof__',\n '__str__',\n '__subclasshook__',\n '__weakref__',\n '_imp_name_to_num',\n '_node_indexes',\n '_twoway',\n 'aggregate',\n 'aggregations',\n 'bbox',\n 'decays',\n 'edges_df',\n 'from_hdf5',\n 'get_node_ids',\n 'impedance_names',\n 'init_pois',\n 'kdtree',\n 'low_connectivity_nodes',\n 'nearest_pois',\n 'net',\n 'node_ids',\n 'node_idx',\n 'nodes_df',\n 'nodes_in_range',\n 'plot',\n 'poi_category_indexes',\n 'poi_category_names',\n 'precompute',\n 'save_hdf5',\n 'set',\n 'set_pois',\n 'shortest_path',\n 'shortest_path_length',\n 'shortest_path_lengths',\n 'shortest_paths',\n 'variable_names']\nfrom shapely.geometry import Point\npnt  = Point(sd_network.nodes_df.loc[example_origin])\ngs = gpd.GeoSeries([pnt])\nm = iso.explore()\ngs.explore(color='r', m=m)\nm\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\n%%time\niso_multiple = isochrones_from_id(example_origin, sd_network, threshold=[1600, 2400, 3200]  )\n\n/opt/tljh/user/lib/python3.10/site-packages/geosnap/analyze/network.py:34: UserWarning: Geometry is in a geographic CRS. Results from 'centroid' are likely incorrect. Use 'GeoSeries.to_crs()' to re-project geometries to a projected CRS before this operation.\n\n  node_ids = network.get_node_ids(origins.centroid.x, origins.centroid.y).astype(int)\n\n\nCPU times: user 994 ms, sys: 9.84 ms, total: 1 s\nWall time: 812 ms\niso_multiple.explore('distance', cmap='Blues_r', style_kwds={'fillOpacity':0.5})\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\ngs = gpd.GeoSeries([pnt])\nexample_point = gpd.GeoDataFrame(geometry=gs)\nexample_point = example_point.set_crs(4326)\nplanar_iso = example_point.to_crs(example_point.estimate_utm_crs()).buffer(1600)\nm = planar_iso.to_crs(4326).explore()\niso.explore(m=m)\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\nnw_pnts = gpd.GeoDataFrame(geometry=[Point(*pnt) for pnt in sd_network.nodes_df.values])\nnw_pnts.crs = iso.crs\nlocal_pnts = iso.sindex.query(nw_pnts.geometry, predicate='within')[0]\nnw_pnts.loc[local_pnts].plot()\n\n&lt;Axes: &gt;\nm = iso.explore()\nnw_pnts.loc[local_pnts].explore(m=m, color='r') # alpha shape\ngs.explore(color='yellow', m=m)\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\nfrom geosnap.io import get_nces\n# same as county fips 06073 in this case, but use metro fips for consistency with network\nsd = get_acs(datasets, msa_fips='41740', level='bg', years=[2019])\nschools = get_nces(datasets, dataset='schools')\nsd_schools = schools[schools.to_crs(sd.crs).intersects(sd.unary_union)]\nsd_schools.head()\n\n\n\n\n\n\n\n\nNCESSCH\nNAME\nOPSTFIPS\nLSTREE\nLCITY\nLSTATE\nLZIP\nLZIP4\nSTFIP15\nCNTY15\n...\nCBSATYPE15\nCSA15\nNMCSA15\nNECTA15\nNMNECTA15\nCD15\nSLDL15\nSLDU15\ngeometry\nyear\n\n\n\n\n5895\n060004205341\nWarner Junior/Senior High\n06\n30951 Highway 79\nWarner Springs\nCA\n92086\nM\n06\n06073\n...\n1\nN\nN\nN\nN\n0650\n071\n038\nPOINT (-116.64292 33.27525)\n1516\n\n\n5896\n060004206527\nSan Jose Valley Continuation Hig\n06\n30951 Highway 79\nWarner Springs\nCA\n92086\nM\n06\n06073\n...\n1\nN\nN\nN\nN\n0650\n071\n038\nPOINT (-116.64292 33.27525)\n1516\n\n\n5897\n060004206844\nWarner Elementary\n06\n30951 Highway 79\nWarner Springs\nCA\n92086\n0008\n06\n06073\n...\n1\nN\nN\nN\nN\n0650\n071\n038\nPOINT (-116.64292 33.27525)\n1516\n\n\n5898\n060004210387\nAll Tribes Charter\n06\n34320 Valley Center Rd.\nValley Center\nCA\n92082\n6046\n06\n06073\n...\n1\nN\nN\nN\nN\n0650\n075\n038\nPOINT (-116.95367 33.27796)\n1516\n\n\n5899\n060004212735\nAll Tribes Elementary Charter\n06\n34320 Valley Center Rd.\nValley Center\nCA\n92082\n6046\n06\n06073\n...\n1\nN\nN\nN\nN\n0650\n075\n038\nPOINT (-116.95367 33.27796)\n1516\n\n\n\n\n5 rows × 26 columns\nsd_schools.shape\n\n(767, 26)\nsd_schools.plot()\n\n&lt;Axes: &gt;\n# randomly sample 25 schools and compute their walksheds\n\nschool_neighborhoods = isochrones_from_gdf(origins=sd_schools.sample(25), network=sd_network, threshold=1600,)\n\n/opt/tljh/user/lib/python3.10/site-packages/geosnap/analyze/network.py:140: UserWarning: Geometry is in a geographic CRS. Results from 'centroid' are likely incorrect. Use 'GeoSeries.to_crs()' to re-project geometries to a projected CRS before this operation.\n\n  node_ids = network.get_node_ids(origins.centroid.x, origins.centroid.y).astype(int)\n/opt/tljh/user/lib/python3.10/site-packages/geosnap/analyze/network.py:34: UserWarning: Geometry is in a geographic CRS. Results from 'centroid' are likely incorrect. Use 'GeoSeries.to_crs()' to re-project geometries to a projected CRS before this operation.\n\n  node_ids = network.get_node_ids(origins.centroid.x, origins.centroid.y).astype(int)\nschool_neighborhoods.explore()\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "week-07/isochrones.html#for-all-schools-it-will-take-a-while-stop-here-and-move-to-spatial_joins-nb",
    "href": "week-07/isochrones.html#for-all-schools-it-will-take-a-while-stop-here-and-move-to-spatial_joins-nb",
    "title": "Isochrones",
    "section": "For all schools it will take a while (Stop here and move to spatial_joins nb)",
    "text": "For all schools it will take a while (Stop here and move to spatial_joins nb)\n\nschool_neighborhoods = isochrones_from_gdf(origins=sd_schools, network=sd_network, threshold=1600,)\n\n/opt/tljh/user/lib/python3.10/site-packages/geosnap/analyze/network.py:140: UserWarning: Geometry is in a geographic CRS. Results from 'centroid' are likely incorrect. Use 'GeoSeries.to_crs()' to re-project geometries to a projected CRS before this operation.\n\n  node_ids = network.get_node_ids(origins.centroid.x, origins.centroid.y).astype(int)\n/opt/tljh/user/lib/python3.10/site-packages/geosnap/analyze/network.py:34: UserWarning: Geometry is in a geographic CRS. Results from 'centroid' are likely incorrect. Use 'GeoSeries.to_crs()' to re-project geometries to a projected CRS before this operation.\n\n  node_ids = network.get_node_ids(origins.centroid.x, origins.centroid.y).astype(int)\n\n\n\nschool_neighborhoods.plot()\n\n&lt;Axes: &gt;\n\n\n\n\n\n\nsh_union = school_neighborhoods.unary_union\n\n\nsh_union\n\n\n\n\n\nschool_neighborhoods.head()\n\n\n\n\n\n\n\n\ngeometry\ndistance\n\n\norigin\n\n\n\n\n\n\n5900\nPOLYGON ((-116.64411 33.27421, -116.64491 33.2...\n1600\n\n\n5899\nPOLYGON ((-116.95443 33.28123, -116.95096 33.2...\n1600\n\n\n6045\nPOLYGON ((-117.02136 33.27643, -117.02352 33.2...\n1600\n\n\n6046\nPOLYGON ((-117.02136 33.27643, -117.02352 33.2...\n1600\n\n\n6047\nPOLYGON ((-116.99063 33.31583, -117.00177 33.3...\n1600\n\n\n\n\n\n\n\n\ns20 = school_neighborhoods.dissolve(by='distance')\n\n\ns20.plot()\n\n&lt;Axes: &gt;\n\n\n\n\n\n\nimport tobler\n\n\nres = tobler.area_weighted.area_interpolate(sd_tracts, s20, extensive_variables=['n_total_pop', 'n_hispanic_persons'])\n\nSource and target dataframes have different crs. Please correct.\n\n\n\nsd_tracts.crs, s20.crs\n\n(&lt;Geographic 2D CRS: EPSG:4269&gt;\n Name: NAD83\n Axis Info [ellipsoidal]:\n - Lat[north]: Geodetic latitude (degree)\n - Lon[east]: Geodetic longitude (degree)\n Area of Use:\n - name: North America - onshore and offshore: Canada - Alberta; British Columbia; Manitoba; New Brunswick; Newfoundland and Labrador; Northwest Territories; Nova Scotia; Nunavut; Ontario; Prince Edward Island; Quebec; Saskatchewan; Yukon. Puerto Rico. United States (USA) - Alabama; Alaska; Arizona; Arkansas; California; Colorado; Connecticut; Delaware; Florida; Georgia; Hawaii; Idaho; Illinois; Indiana; Iowa; Kansas; Kentucky; Louisiana; Maine; Maryland; Massachusetts; Michigan; Minnesota; Mississippi; Missouri; Montana; Nebraska; Nevada; New Hampshire; New Jersey; New Mexico; New York; North Carolina; North Dakota; Ohio; Oklahoma; Oregon; Pennsylvania; Rhode Island; South Carolina; South Dakota; Tennessee; Texas; Utah; Vermont; Virginia; Washington; West Virginia; Wisconsin; Wyoming. US Virgin Islands.  British Virgin Islands.\n - bounds: (167.65, 14.92, -47.74, 86.46)\n Datum: North American Datum 1983\n - Ellipsoid: GRS 1980\n - Prime Meridian: Greenwich,\n &lt;Geographic 2D CRS: EPSG:4326&gt;\n Name: WGS 84\n Axis Info [ellipsoidal]:\n - Lat[north]: Geodetic latitude (degree)\n - Lon[east]: Geodetic longitude (degree)\n Area of Use:\n - name: World.\n - bounds: (-180.0, -90.0, 180.0, 90.0)\n Datum: World Geodetic System 1984 ensemble\n - Ellipsoid: WGS 84\n - Prime Meridian: Greenwich)\n\n\n\nsd_tracts = sd_tracts.to_crs(sd_tracts.estimate_utm_crs())\n\n\ns20 = s20.to_crs(sd_tracts.crs)\n\n\nres = tobler.area_weighted.area_interpolate(sd_tracts, s20, extensive_variables=['n_total_pop', 'n_hispanic_persons'])\n\n\nres.head()\n\n\n\n\n\n\n\n\nn_total_pop\nn_hispanic_persons\ngeometry\n\n\ndistance\n\n\n\n\n\n\n\n1600\n3.223012e+06\n1.091683e+06\nMULTIPOLYGON (((474153.207 3631273.494, 474179...\n\n\n\n\n\n\n\n\nres1 = tobler.area_weighted.area_interpolate(sd_tracts, s20, extensive_variables=['n_total_pop', 'n_hispanic_persons'],\n                                           allocate_total=False)\n\n\nres1.head()\n\n\n\n\n\n\n\n\nn_total_pop\nn_hispanic_persons\ngeometry\n\n\ndistance\n\n\n\n\n\n\n\n1600\n2.220035e+06\n845495.649364\nMULTIPOLYGON (((474153.207 3631273.494, 474179...\n\n\n\n\n\n\n\n\nres1.n_hispanic_persons / res1.n_total_pop\n\ndistance\n1600    0.380848\ndtype: float64\n\n\n\nres.n_hispanic_persons / res.n_total_pop\n\ndistance\n1600    0.338715\ndtype: float64\n\n\n\nouth = res.n_hispanic_persons - res1.n_hispanic_persons\noutd = res.n_total_pop - res1.n_total_pop\nouth/outd\n\ndistance\n1600    0.245457\ndtype: float64\n\n\n\nres1.n_hispanic_persons / res.n_hispanic_persons\n\ndistance\n1600    0.774488\nName: n_hispanic_persons, dtype: float64\n\n\n\nwt = res.n_total_pop - res.n_hispanic_persons\nwo = res1.n_total_pop - res1.n_hispanic_persons\n\n\nwo/wt\n\ndistance\n1600    0.644921\ndtype: float64"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "GEOG 584",
    "section": "",
    "text": "Instructor\nSergio Rey\nLecture Meetings\nTue 11:00-12:40\n\n\n\n\n\nThu 11:00-13:40\n\n\nOffice Hours\nThu 12:40-13:40 and by appointment\nClassroom\nSH 324\n\n\nOffice\nPFSA 316G\nCourse LMS\nCanvas\n\n\n\n\n\n\nThis course offers an introduction to open source tools and practices for geographic information system (GIS) applications. Much of today’s world is dominated by “big data”, data science, machine learning, and artificial intelligence, and GIS is no exception. This requires that GIS students have the capacity to understand and analyze quantitative information. At the same time, there are increasing demands for openness and transparency in both GIS applications and GIS in science.\nThis course is designed to equip students with the skills and practices to fully engage with, and contribute to, these developments. It relies on open source software which is essential since it provides access to free, high-quality, cross-platform tools. At the same time, free availability does not necessarily translate into skill acquisition, and a key goal of this course is to flatten the learning curve for students discovering these new tools and practices.\n\n\n\nThe course is structured as a blending of a lecture and studio. In the lecture component of the course, the literature surrounding the course project will be discussed and evaluated to shape the empirical project which will form the key focus of the second half of the semester. In the studio component of the course, students will be exposed to open source tools (software), technologies (github, CI/CD), and practices (collaborative development) in GIS projects.\n\n\n\nBy the end of the semester, students will\n\nacquire competency in using open source software and tools for their own GIS research projects\ngain experience in collaborative open source and open science best practices\napply these skill sets to contribute to a reproducible empirical GIS project\n\n\n\n\nGEOG 484 or equivalent.\n\nCourses numbered 500 through 599 are in the upper division and are also acceptable for advanced degrees when taken by students admitted to graduate standing;\n\nSource\n\n\n\nThis is a 3-unit course. The definition of a unit is one credit hour:\n\nOne hour of direct faculty instruction and a minimum of two hours of out-of-class student work each week for approximately 15 weeks for one semester or equivalent amount of work over a different amount of time;\n\nSource\nAs such, you should allocate six hours of time per week for working on course related materials outside of our in-class meetings.\n\n\n\n\n\nA series of exercises will be assigned that provide opportunities to further develop skills in open source tooling and practices. Each student will be evaluated individually on all four exercises. You can view these exercises as practice for the skills that go into the final project.\n\n\n\nThere will be one exam on week 11 covering the materials from the first part of the course.\n\n\n\nThe last 5 weeks of the course are organized as a studio in which each student will contribute to a final project that requires the application of the various open source technologies, packages, and practices that are introduced.\nRubrics for peer evaluation of project work will be given out in week 11.\n\n\n\nStarting the second week of sessions, quizzes will be given on the assigned reading material. Quizzes will run through week 10 of the semester. Quizzes are graded on a pass/fail basis. Quizzes will be given during the first 5 minutes of a class meeting.\n\n\n\nEach student is provided with three tokens at the beginning of the semester. Tokens can be used in the following ways:\n\nOne token can be used for a one-week extension on an exercise.\nOne token can be used to resubmit an exercise that does not demonstrate competency.\nTwo tokens can be used to request a make-up date for the exam. (Requests have to be submitted by March 14 5pm.)\n\nEach token that remains unused by May 2 will be counted as a passed quiz.\n\n\n\nYour final course grade is determined using specification grading. Your course grade will be based on the quality and quantity of the work that you submit that is evaluated to be of an acceptable level of quality. The acceptable level of quality demonstrates competency in the concepts and methods covered in the course.\nThere is a two-step process for determination of your final course grade at the end of the semester:\n\nUsing your exercises, project and quiz grades, your base grade is determined.\nUsing your exam grade to determine if your base grade is adjusted upwards, downwards or remains as your final grade.\n\nFor Step 1, the base grade is determined as follows\n\n\n\nBase\nHurdles\n\n\n\n\nA\nDemonstrates competency on 4 of 4 exercises\n\n\n\nObtained a valued contributor in evaluation\n\n\n\nPass 90% of the quizzes\n\n\n\nGroup project achieves competency in all 10 areas\n\n\nB\nDemonstrates competency on 3 of 4 exercises\n\n\n\nObtained a team player ranking in evaluation\n\n\n\nPass 80% of the quizzes\n\n\n\nGroup project achieves competency in 8 areas\n\n\nC\nDemonstrates competency on 2 of 4 exercises\n\n\n\nObtained a free rider ranking in evaluation\n\n\n\nPass 70% of the quizzes\n\n\n\nGroup project achieves competency in 6 areas\n\n\nD\nDemonstrates competency on 1 of 4 exercises\n\n\n\nObtained a missing in action ranking in evaluation\n\n\n\nPass 60% of the quizzes\n\n\n\nGroup project achieves competency in 4 areas\n\n\nF\nFailure to clear all D-level hurdles\n\n\n\nYour base grade is the highest grade for which you clear all the hurdles. For example, a student who demonstrated competency on 3 of the four exercises, worked on a group project that achieved competency in 9 of the 10 areas, passed 85% of the quizzes, and obtained a free rider ranking in their peer evaluation would have a C base grade.\nFor Step 2, your final course grade is determined as follows:\n\nIf you earn at least 85% on the exam, you will obtain a “+” for your grade. So a B base grade would become a B+ course grade, and so on (Note: SDSU does not record A+ grades).\nIf you score between 70-85% on the exam, your base grade becomes your course grade.\nIf you score between 50% and 69% on the exam, you will obtain a “-” for your grade. So an A base grade becomes an A- course grade, a B base grade becomes a B- course grade, and so on.\nIf you score less than 50% on the exam, your course grade will drop one level: An A base grade becomes a final B course grade.\n\n\n\n\n\n\n\n\nWeek\nDates\nTopic\nReadings\n\n\n\n\n1\nJan-18\nCourse Introduction\n\n\n\n2\nJan-23\nJupyter Lab Introduction\n\n\n\n\nJan-25\nUnix with Jupyter Lab\n\n\n\n3\nJan-30\nPandas\npandas\n\n\n\nFeb-01\nGeoPandas\ngeopandas I\n\n\n4\nFeb-06\nGeovisualizaiton\nchoropleths\n\n\n\nFeb-08\nExercise 1\n\n\n\n5\nFeb-13\nProjections\nprojections\n\n\n\nFeb-15\nSpatial Joins\nspatial joins\n\n\n6\nFeb-20\nSpatial Inequality\nspatial inequality\n\n\n\nFeb-22\nExercise 2\n\n\n\n7\nFeb-27\nGeoSnap\ngeosnap\n\n\n\nFeb-29\nIsochrones\nisochrones\n\n\n8\nMar-05\nAccessibility\naccessibility\n\n\n\nMar-07\nExercise 3\n\n\n\n9\nMar-12\nClustering\nclustering-clusteringII\n\n\n\nMar-14\nSpatial Clustering\nregionalization\n\n\n10\nMar-19\nGeodemographics\ngeodemographics\n\n\n\nMar-21\nExercise 4\n\n\n\n11\nMar-26\nReview\n\n\n\n\nMar-28\nExam\n\n\n\n\nApr-02\nSpring Break\n\n\n\n\nApr-04\nSpring Break\n\n\n\n12\nApr-09\nProjects Portfolio, git\nProject preferences due (midnight)\n\n\n\nApr-11\ngithub and remotes\nProject teams defined\n\n\n13\nApr-16\nProject Studio\n\n\n\n\nApr-18\nProject Studio\nProject proposals due (5pm)\n\n\n14\nApr-23\nProject Studio\n\n\n\n\nApr-25\nProject Studio\n\n\n\n15\nApr-30\nProject Studio\n\n\n\n\nMay-02\nProject Studio\n\n\n\n16\nMay-07\nFinal Exam Week\nPresentations\n\n\n\n\n\n\nAs we are learning Python through GIS, and assuming students already posses an understanding of GIS fundamentals, supplementary readings on Python should be consulted for further understanding:\n“Think Python: How to Think Like a Computer Scientist” is an insightful and approachable guide designed for beginners looking to learn Python programming. Authored by Allen B. Downey, this book simplifies the process of learning Python by breaking down its core concepts into manageable sections, making it ideal for those new to programming. Emphasizing the importance of computational thinking, the book gradually builds from simple topics, like variables and basic operations, to more complex subjects such as data structures, algorithms, and debugging. Throughout the text, Downey encourages a problem-solving approach, reinforcing key programming concepts with practical examples and exercises that challenge the reader to think critically and apply their learning. This book is renowned for its clear, concise, and reader-friendly style, making the often-daunting task of learning a new programming language both manageable and engaging.\nThe book “A Whirlwind Tour of Python” by Jake VanderPlas can also be accessed online for free. . This book is a fast-paced introduction to essential features of the Python language, aimed at researchers and developers who are already familiar with programming in another language.\n\n\n\n\n\nIf you are a student with a disability and are in need of accommodations for this class, please contact Student Ability Success Center at (619) 594-6473 as soon as possible. Please know accommodations are not retroactive, and I cannot provide accommodations based upon disability until I have received an accommodation letter from Student Ability Success Center.\n\n\n\nStudent Privacy and Intellectual Property: The Family Educational Rights and Privacy Act (FERPA) mandates the protection of student information, including contact information, grades, and graded assignments. I will use Canvas to communicate with you, and I will not post grades or leave graded assignments in public places. Students will be notified at the time of an assignment if copies of student work will be retained beyond the end of the semester or used as examples for future students or the wider public. Students maintain intellectual property rights to work products they create as part of this course unless they are formally notified otherwise.\n\n\n\nThe SDSU student academic integrity policy lists violations in detail. These violations fall into eight broad areas that include but are not limited to: cheating, fabrication, plagiarism, facilitating academic misconduct, unauthorized collaboration, interference or sabotage, non-compliance with research regulations and retaliation. For more information about the SDSU student academic integrity policy, please see the following: https://sacd.sdsu.edu/student-rights/academic-dishonesty.\n\n\n\nAs course instructor, I am dedicated to providing a harassment-free learning experience for all students, regardless of gender, sexual orientation, disability, physical appearance, body size, race, religion, or choice of operating system. All course participants are expected to show respect and courtesy to other students throughout the semester. As a learning community we do not tolerate harassment of participants in any form.\n\nAll communication should be appropriate for a professional audience including people of many different backgrounds. Sexual language and imagery are not appropriate in this course.\nBe kind to others. Do not insult or put down other students. Behave professionally. Remember that harassment and sexist, racist, or exclusionary jokes are not appropriate for this course.\nStudents violating these rules may be asked to leave the course, and their violations will be reported to the SDSU administration.\n\nThis code of conduct is an adaptation of the SciPy 2018 Code of Conduct."
  },
  {
    "objectID": "index.html#logistics",
    "href": "index.html#logistics",
    "title": "GEOG 584",
    "section": "",
    "text": "Instructor\nSergio Rey\nLecture Meetings\nTue 11:00-12:40\n\n\n\n\n\nThu 11:00-13:40\n\n\nOffice Hours\nThu 12:40-13:40 and by appointment\nClassroom\nSH 324\n\n\nOffice\nPFSA 316G\nCourse LMS\nCanvas"
  },
  {
    "objectID": "index.html#introduction",
    "href": "index.html#introduction",
    "title": "GEOG 584",
    "section": "",
    "text": "This course offers an introduction to open source tools and practices for geographic information system (GIS) applications. Much of today’s world is dominated by “big data”, data science, machine learning, and artificial intelligence, and GIS is no exception. This requires that GIS students have the capacity to understand and analyze quantitative information. At the same time, there are increasing demands for openness and transparency in both GIS applications and GIS in science.\nThis course is designed to equip students with the skills and practices to fully engage with, and contribute to, these developments. It relies on open source software which is essential since it provides access to free, high-quality, cross-platform tools. At the same time, free availability does not necessarily translate into skill acquisition, and a key goal of this course is to flatten the learning curve for students discovering these new tools and practices."
  },
  {
    "objectID": "index.html#organization",
    "href": "index.html#organization",
    "title": "GEOG 584",
    "section": "",
    "text": "The course is structured as a blending of a lecture and studio. In the lecture component of the course, the literature surrounding the course project will be discussed and evaluated to shape the empirical project which will form the key focus of the second half of the semester. In the studio component of the course, students will be exposed to open source tools (software), technologies (github, CI/CD), and practices (collaborative development) in GIS projects."
  },
  {
    "objectID": "index.html#learning-outcomes",
    "href": "index.html#learning-outcomes",
    "title": "GEOG 584",
    "section": "",
    "text": "By the end of the semester, students will\n\nacquire competency in using open source software and tools for their own GIS research projects\ngain experience in collaborative open source and open science best practices\napply these skill sets to contribute to a reproducible empirical GIS project"
  },
  {
    "objectID": "index.html#prerequisites",
    "href": "index.html#prerequisites",
    "title": "GEOG 584",
    "section": "",
    "text": "GEOG 484 or equivalent.\n\nCourses numbered 500 through 599 are in the upper division and are also acceptable for advanced degrees when taken by students admitted to graduate standing;\n\nSource"
  },
  {
    "objectID": "index.html#credit-hours-and-course-work",
    "href": "index.html#credit-hours-and-course-work",
    "title": "GEOG 584",
    "section": "",
    "text": "This is a 3-unit course. The definition of a unit is one credit hour:\n\nOne hour of direct faculty instruction and a minimum of two hours of out-of-class student work each week for approximately 15 weeks for one semester or equivalent amount of work over a different amount of time;\n\nSource\nAs such, you should allocate six hours of time per week for working on course related materials outside of our in-class meetings."
  },
  {
    "objectID": "index.html#grading",
    "href": "index.html#grading",
    "title": "GEOG 584",
    "section": "",
    "text": "A series of exercises will be assigned that provide opportunities to further develop skills in open source tooling and practices. Each student will be evaluated individually on all four exercises. You can view these exercises as practice for the skills that go into the final project.\n\n\n\nThere will be one exam on week 11 covering the materials from the first part of the course.\n\n\n\nThe last 5 weeks of the course are organized as a studio in which each student will contribute to a final project that requires the application of the various open source technologies, packages, and practices that are introduced.\nRubrics for peer evaluation of project work will be given out in week 11.\n\n\n\nStarting the second week of sessions, quizzes will be given on the assigned reading material. Quizzes will run through week 10 of the semester. Quizzes are graded on a pass/fail basis. Quizzes will be given during the first 5 minutes of a class meeting.\n\n\n\nEach student is provided with three tokens at the beginning of the semester. Tokens can be used in the following ways:\n\nOne token can be used for a one-week extension on an exercise.\nOne token can be used to resubmit an exercise that does not demonstrate competency.\nTwo tokens can be used to request a make-up date for the exam. (Requests have to be submitted by March 14 5pm.)\n\nEach token that remains unused by May 2 will be counted as a passed quiz.\n\n\n\nYour final course grade is determined using specification grading. Your course grade will be based on the quality and quantity of the work that you submit that is evaluated to be of an acceptable level of quality. The acceptable level of quality demonstrates competency in the concepts and methods covered in the course.\nThere is a two-step process for determination of your final course grade at the end of the semester:\n\nUsing your exercises, project and quiz grades, your base grade is determined.\nUsing your exam grade to determine if your base grade is adjusted upwards, downwards or remains as your final grade.\n\nFor Step 1, the base grade is determined as follows\n\n\n\nBase\nHurdles\n\n\n\n\nA\nDemonstrates competency on 4 of 4 exercises\n\n\n\nObtained a valued contributor in evaluation\n\n\n\nPass 90% of the quizzes\n\n\n\nGroup project achieves competency in all 10 areas\n\n\nB\nDemonstrates competency on 3 of 4 exercises\n\n\n\nObtained a team player ranking in evaluation\n\n\n\nPass 80% of the quizzes\n\n\n\nGroup project achieves competency in 8 areas\n\n\nC\nDemonstrates competency on 2 of 4 exercises\n\n\n\nObtained a free rider ranking in evaluation\n\n\n\nPass 70% of the quizzes\n\n\n\nGroup project achieves competency in 6 areas\n\n\nD\nDemonstrates competency on 1 of 4 exercises\n\n\n\nObtained a missing in action ranking in evaluation\n\n\n\nPass 60% of the quizzes\n\n\n\nGroup project achieves competency in 4 areas\n\n\nF\nFailure to clear all D-level hurdles\n\n\n\nYour base grade is the highest grade for which you clear all the hurdles. For example, a student who demonstrated competency on 3 of the four exercises, worked on a group project that achieved competency in 9 of the 10 areas, passed 85% of the quizzes, and obtained a free rider ranking in their peer evaluation would have a C base grade.\nFor Step 2, your final course grade is determined as follows:\n\nIf you earn at least 85% on the exam, you will obtain a “+” for your grade. So a B base grade would become a B+ course grade, and so on (Note: SDSU does not record A+ grades).\nIf you score between 70-85% on the exam, your base grade becomes your course grade.\nIf you score between 50% and 69% on the exam, you will obtain a “-” for your grade. So an A base grade becomes an A- course grade, a B base grade becomes a B- course grade, and so on.\nIf you score less than 50% on the exam, your course grade will drop one level: An A base grade becomes a final B course grade."
  },
  {
    "objectID": "index.html#course-schedule-planned",
    "href": "index.html#course-schedule-planned",
    "title": "GEOG 584",
    "section": "",
    "text": "Week\nDates\nTopic\nReadings\n\n\n\n\n1\nJan-18\nCourse Introduction\n\n\n\n2\nJan-23\nJupyter Lab Introduction\n\n\n\n\nJan-25\nUnix with Jupyter Lab\n\n\n\n3\nJan-30\nPandas\npandas\n\n\n\nFeb-01\nGeoPandas\ngeopandas I\n\n\n4\nFeb-06\nGeovisualizaiton\nchoropleths\n\n\n\nFeb-08\nExercise 1\n\n\n\n5\nFeb-13\nProjections\nprojections\n\n\n\nFeb-15\nSpatial Joins\nspatial joins\n\n\n6\nFeb-20\nSpatial Inequality\nspatial inequality\n\n\n\nFeb-22\nExercise 2\n\n\n\n7\nFeb-27\nGeoSnap\ngeosnap\n\n\n\nFeb-29\nIsochrones\nisochrones\n\n\n8\nMar-05\nAccessibility\naccessibility\n\n\n\nMar-07\nExercise 3\n\n\n\n9\nMar-12\nClustering\nclustering-clusteringII\n\n\n\nMar-14\nSpatial Clustering\nregionalization\n\n\n10\nMar-19\nGeodemographics\ngeodemographics\n\n\n\nMar-21\nExercise 4\n\n\n\n11\nMar-26\nReview\n\n\n\n\nMar-28\nExam\n\n\n\n\nApr-02\nSpring Break\n\n\n\n\nApr-04\nSpring Break\n\n\n\n12\nApr-09\nProjects Portfolio, git\nProject preferences due (midnight)\n\n\n\nApr-11\ngithub and remotes\nProject teams defined\n\n\n13\nApr-16\nProject Studio\n\n\n\n\nApr-18\nProject Studio\nProject proposals due (5pm)\n\n\n14\nApr-23\nProject Studio\n\n\n\n\nApr-25\nProject Studio\n\n\n\n15\nApr-30\nProject Studio\n\n\n\n\nMay-02\nProject Studio\n\n\n\n16\nMay-07\nFinal Exam Week\nPresentations"
  },
  {
    "objectID": "index.html#additional-readings",
    "href": "index.html#additional-readings",
    "title": "GEOG 584",
    "section": "",
    "text": "As we are learning Python through GIS, and assuming students already posses an understanding of GIS fundamentals, supplementary readings on Python should be consulted for further understanding:\n“Think Python: How to Think Like a Computer Scientist” is an insightful and approachable guide designed for beginners looking to learn Python programming. Authored by Allen B. Downey, this book simplifies the process of learning Python by breaking down its core concepts into manageable sections, making it ideal for those new to programming. Emphasizing the importance of computational thinking, the book gradually builds from simple topics, like variables and basic operations, to more complex subjects such as data structures, algorithms, and debugging. Throughout the text, Downey encourages a problem-solving approach, reinforcing key programming concepts with practical examples and exercises that challenge the reader to think critically and apply their learning. This book is renowned for its clear, concise, and reader-friendly style, making the often-daunting task of learning a new programming language both manageable and engaging.\nThe book “A Whirlwind Tour of Python” by Jake VanderPlas can also be accessed online for free. . This book is a fast-paced introduction to essential features of the Python language, aimed at researchers and developers who are already familiar with programming in another language."
  },
  {
    "objectID": "index.html#policies",
    "href": "index.html#policies",
    "title": "GEOG 584",
    "section": "",
    "text": "If you are a student with a disability and are in need of accommodations for this class, please contact Student Ability Success Center at (619) 594-6473 as soon as possible. Please know accommodations are not retroactive, and I cannot provide accommodations based upon disability until I have received an accommodation letter from Student Ability Success Center.\n\n\n\nStudent Privacy and Intellectual Property: The Family Educational Rights and Privacy Act (FERPA) mandates the protection of student information, including contact information, grades, and graded assignments. I will use Canvas to communicate with you, and I will not post grades or leave graded assignments in public places. Students will be notified at the time of an assignment if copies of student work will be retained beyond the end of the semester or used as examples for future students or the wider public. Students maintain intellectual property rights to work products they create as part of this course unless they are formally notified otherwise.\n\n\n\nThe SDSU student academic integrity policy lists violations in detail. These violations fall into eight broad areas that include but are not limited to: cheating, fabrication, plagiarism, facilitating academic misconduct, unauthorized collaboration, interference or sabotage, non-compliance with research regulations and retaliation. For more information about the SDSU student academic integrity policy, please see the following: https://sacd.sdsu.edu/student-rights/academic-dishonesty.\n\n\n\nAs course instructor, I am dedicated to providing a harassment-free learning experience for all students, regardless of gender, sexual orientation, disability, physical appearance, body size, race, religion, or choice of operating system. All course participants are expected to show respect and courtesy to other students throughout the semester. As a learning community we do not tolerate harassment of participants in any form.\n\nAll communication should be appropriate for a professional audience including people of many different backgrounds. Sexual language and imagery are not appropriate in this course.\nBe kind to others. Do not insult or put down other students. Behave professionally. Remember that harassment and sexist, racist, or exclusionary jokes are not appropriate for this course.\nStudents violating these rules may be asked to leave the course, and their violations will be reported to the SDSU administration.\n\nThis code of conduct is an adaptation of the SciPy 2018 Code of Conduct."
  },
  {
    "objectID": "week-12/git.html",
    "href": "week-12/git.html",
    "title": "\ncollaboration\n",
    "section": "",
    "text": "jumping around\n\ncd\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ cd\njupyter-serge584s23@geo-rey-srv2:~$ git clone https://github.com/rupa/z.git\nCloning into 'z'...\nremote: Enumerating objects: 800, done.\nremote: Counting objects: 100% (18/18), done.\nremote: Compressing objects: 100% (12/12), done.\nremote: Total 800 (delta 8), reused 15 (delta 6), pack-reused 782\nReceiving objects: 100% (800/800), 161.14 KiB | 1.73 MiB/s, done.\nResolving deltas: 100% (363/363), done.\ncp .bashrc .bashrc.bak\nnano .bashrc\n\n# add the line\n. ~/z/z.sh\n\ntail -1 .bashrc\njupyter-serge584s23@geo-rey-srv2:~$ tail -1 .bashrc\n. ~/z/z.sh\nsource ~/.bashrc\n\nNow cd around a bunch\n\n\nType z to get a listing of recently visited directories\n\n\nTo jump to one, type z pattern where pattern should be a substring of the directory you want to jump to.\n\n\nNo more having to manually type long paths to get to where you want to go.\n\n\nNote, this works even after logging out or closing the terminal.\n\n\nThe data is stored in the file ~/.z if you are interested.\n\n\ncreate a remote on github\n\n\n[[Pasted image 20230220171356.png]]\n\n\n[[Pasted image 20230220170657.png]]\n\n\n\n[[Pasted image 20230220171442.png]]\n\n\nwe will come back to this in a moment. for now lets make sure we are in are local repository directory:\n\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ pwd\n/home/jupyter-serge584s23/work/git/planets\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ ls -al\ntotal 28\ndrwxr-xr-x 4 jupyter-serge584s23 jupyter-serge584s23 4096 Feb 16 12:44 .\ndrwxr-xr-x 3 jupyter-serge584s23 jupyter-serge584s23 4096 Feb 16 11:20 ..\n-rw-r--r-- 1 jupyter-serge584s23 jupyter-serge584s23    0 Feb 16 12:10 a.dat\n-rw-r--r-- 1 jupyter-serge584s23 jupyter-serge584s23    0 Feb 16 12:10 b.dat\n-rw-r--r-- 1 jupyter-serge584s23 jupyter-serge584s23    0 Feb 16 12:10 c.dat\ndrwxr-xr-x 8 jupyter-serge584s23 jupyter-serge584s23 4096 Feb 16 12:44 .git\n-rw-r--r-- 1 jupyter-serge584s23 jupyter-serge584s23   15 Feb 16 12:14 .gitignore\n-rw-r--r-- 1 jupyter-serge584s23 jupyter-serge584s23   91 Feb 16 12:02 mars.txt\n-rw-r--r-- 1 jupyter-serge584s23 jupyter-serge584s23   49 Feb 16 12:44 moon.txt\ndrwxr-xr-x 2 jupyter-serge584s23 jupyter-serge584s23 4096 Feb 16 12:10 results\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git status\nOn branch main\nnothing to commit, working tree clean\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git remote -v\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ \n\nssh keys\n\njupyter-serge584s23@geo-rey-srv2:~$ ssh-keygen -t rsa\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/home/jupyter-serge584s23/.ssh/id_rsa): \nCreated directory '/home/jupyter-serge584s23/.ssh'.\nEnter passphrase (empty for no passphrase): \nEnter same passphrase again: \nYour identification has been saved in /home/jupyter-serge584s23/.ssh/id_rsa\nYour public key has been saved in /home/jupyter-serge584s23/.ssh/id_rsa.pub\nThe key fingerprint is:\nSHA256:xRueWRVTnHYxfri6WuEpzXZJHW7E252NikYNpzIB+5o jupyter-serge584s23@geo-rey-srv2\nThe key's randomart image is:\n+---[RSA 3072]----+\n|      .       +*+|\n|       o .   .o=+|\n|      . . = o o=o|\n|       . + @  o+O|\n|        S B o +==|\n|       o + = *.. |\n|      E   + X o  |\n|         . + o   |\n|          ...    |\n+----[SHA256]-----+\njupyter-serge584s23@geo-rey-srv2:~$ \nls .ssh\nid_rsa  id_rsa.pub\nupyter-serge584s23@geo-rey-srv2:~$ ls -al ~/.ssh\ntotal 16\ndrwx------  2 jupyter-serge584s23 jupyter-serge584s23 4096 Feb 20 16:47 .\ndrwxr-x--- 11 jupyter-serge584s23 jupyter-serge584s23 4096 Feb 20 16:47 ..\n-rw-------  1 jupyter-serge584s23 jupyter-serge584s23 2675 Feb 20 16:47 id_rsa\n-rw-r--r--  1 jupyter-serge584s23 jupyter-serge584s23  586 Feb 20 16:47 id_rsa.pub\n\nCheck if we can authenticate\n\njupyter-serge584s23@geo-rey-srv2:~$ ssh -T git@github.com\nThe authenticity of host 'github.com (192.30.255.113)' can't be established.\nED25519 key fingerprint is SHA256:+DiY3wvvV6TuJJhbpZisF/zLDA0zPMSvHdkr4UvCOqU.\nThis key is not known by any other names\nAre you sure you want to continue connecting (yes/no/[fingerprint])? y\nPlease type 'yes', 'no' or the fingerprint: yes\nWarning: Permanently added 'github.com' (ED25519) to the list of known hosts.\ngit@github.com: Permission denied (publickey).\n\nRight, we need to first add our public key on github\n\ncat ~/.ssh/id_rsa.pub\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCv4y7kR22zjaNYPIP8L/q/lcfWPtltLOZ86vszqpwqEaMFDWaQ366sGEc0hYRjZMbFKxNSy9d7PJnOq0ozCgoNn69dNmXx+M71TM2E7vlUjCZCo9owEfIuDf6o519uRE4Qf2aKQC1g3M+imZn9gnZtI39cQsKPM1h0Wg417ZgdgyC3k4bep7puxiko3R3gEaXVUEPHtodEfI7hwUsV62J3CWBIx5yQzwAGJz7VtYQIB94/5jNUnIGtRQyHFcplxKJ/weM6LkQt5Uxql9oliVHYqp8KBu63PPxXt8qusKGJrnmkccHd6ox8i3LIp2XRImdm8DittHuMJRgJiLa/HQtr9jyHoIx8voztvvbyRCOCzRwWKe9hZXWw/Xp+xbKsoH826e4Iqgp56LzmVB7NKEYf1jArrLEqO+DQWEJkXl8IidqUGNvJ8I4tFRZrRm6URNClseZ31gSsVMAO/HHwoVlVw7s32tmEQ8c+ISGL+llRU/rI5yKPSBLb28YDckes7jc= jupyter-serge584s23@geo-rey-srv2\n\n[[Pasted image 20230220165448.png]]\n\n\n[[Pasted image 20230220165614.png]]\n\n\n[[Pasted image 20230220165800.png]]\n\n\n[[Pasted image 20230220165837.png]]\n\n\n[[Pasted image 20230220170035.png]]\n\n\n[[Pasted image 20230220170132.png]]\n\n\nNow try authenticating again, which will prompt you for your passphrase\n\njupyter-serge584s23@geo-rey-srv2:~$ ssh -T git@github.com\nEnter passphrase for key '/home/jupyter-serge584s23/.ssh/id_rsa': \nHi sjsrey! You've successfully authenticated, but GitHub does not provide shell access.\njupyter-serge584s23@geo-rey-srv2:~$ \n\nNow we add a new remote (remember your passphrase as they will ask for it)\n\ngit remote add origin git@github.com:sjsrey/planets.git\ngit branch -M main\ngit push -u origin main\nEnter passphrase for key '/home/jupyter-serge584s23/.ssh/id_rsa': \nEnumerating objects: 15, done.\nCounting objects: 100% (15/15), done.\nDelta compression using up to 32 threads\nCompressing objects: 100% (10/10), done.\nWriting objects: 100% (15/15), 1.29 KiB | 1.29 MiB/s, done.\nTotal 15 (delta 3), reused 0 (delta 0), pack-reused 0\nremote: Resolving deltas: 100% (3/3), done.\nTo github.com:sjsrey/planets.git\n * [new branch]      main -&gt; main\nBranch 'main' set up to track remote branch 'main' from 'origin'.\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ \njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git remote -v\norigin  git@github.com:sjsrey/planets.git (fetch)\norigin  git@github.com:sjsrey/planets.git (push)\n\n\n[[Pasted image 20230220171920.png]]\n\n\n[[Pasted image 20230220172005.png]]\n\n\nAdding a ssh-agent\n\njupyter-serge584s23@geo-rey-srv2:~$ eval \"$(ssh-agent -s)\" \nAgent pid 327199\njupyter-serge584s23@geo-rey-srv2:~$ ssh-add ~/.ssh/id_rsa \nEnter passphrase for /home/jupyter-serge584s23/.ssh/id_rsa: \nIdentity added: /home/jupyter-serge584s23/.ssh/id_rsa (jupyter-serge584s23@geo-rey-srv2)\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ nano README.md\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ ls\na.dat  b.dat  c.dat  mars.txt  moon.txt  README.md  results\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git status\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nUntracked files:\n  (use \"git add &lt;file&gt;...\" to include in what will be committed)\n        README.md\n\nnothing added to commit but untracked files present (use \"git add\" to track)\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git add README.md \njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git commit -m 'Add a README'\n[main 864e428] Add a README\n 1 file changed, 3 insertions(+)\n create mode 100644 README.md\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git push origin main\nEnumerating objects: 4, done.\nCounting objects: 100% (4/4), done.\nDelta compression using up to 32 threads\nCompressing objects: 100% (2/2), done.\nWriting objects: 100% (3/3), 375 bytes | 375.00 KiB/s, done.\nTotal 3 (delta 0), reused 0 (delta 0), pack-reused 0\nTo github.com:sjsrey/planets.git\n   68a5f4f..864e428  main -&gt; main\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ \n\n\n\n[[Pasted image 20230220173424.png]]\n\n\nSetting up ssh-agent\n\n\nMake a backup of ~/.bashrc\n\ncd\ncp .bashrc .bashrc.bak\nnano .bashrc\n\nAt the bottom of the file add the following (Source):\n\n\nenv=~/.ssh/agent.env\n\nagent_load_env () { test -f \"$env\" && . \"$env\" &gt;| /dev/null ; }\n\nagent_start () {\n    (umask 077; ssh-agent &gt;| \"$env\")\n    . \"$env\" &gt;| /dev/null ; }\n\nagent_load_env\n\n# agent_run_state: 0=agent running w/ key; 1=agent w/o key; 2=agent not running\nagent_run_state=$(ssh-add -l &gt;| /dev/null 2&gt;&1; echo $?)\n\nif [ ! \"$SSH_AUTH_SOCK\" ] || [ $agent_run_state = 2 ]; then\n    agent_start\n    ssh-add\nelif [ \"$SSH_AUTH_SOCK\" ] && [ $agent_run_state = 1 ]; then\n    ssh-add\nfi\n\nunset env\n\nWrite and exit the file. Close the terminal tab.\n\n\nLaunch a new terminal and you should be prompted for your password.\n\n\n[[Pasted image 20230220174112.png]]\n\n\n[[Pasted image 20230220174144.png]]\n\n\n[[Pasted image 20230220174224.png]]\n\n\nFrom here forward you no longer will be prompted for password when pushing to github. (as long as that terminal stays around)\n\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ nano README.md \ncat README.md\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ cat README.md \n# Planets Project\n\n\nResearch on planets\n\nTest after ssh-agent\n\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git status\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add &lt;file&gt;...\" to update what will be committed)\n  (use \"git restore &lt;file&gt;...\" to discard changes in working directory)\n        modified:   README.md\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git add README.md \njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git commit -m 'Note on ssh-agent'\n[main be51b2e] Note on ssh-agent\n 1 file changed, 3 insertions(+)\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git push origin main\nEnumerating objects: 5, done.\nCounting objects: 100% (5/5), done.\nDelta compression using up to 32 threads\nCompressing objects: 100% (3/3), done.\nWriting objects: 100% (3/3), 320 bytes | 320.00 KiB/s, done.\nTotal 3 (delta 1), reused 0 (delta 0), pack-reused 0\nremote: Resolving deltas: 100% (1/1), completed with 1 local object.\nTo github.com:sjsrey/planets.git\n   864e428..be51b2e  main -&gt; main\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ \n\nPulling from remotes\n\ngit status\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nnothing to commit, working tree clean\n\nCreate changes on github to the README.md file\n\n\nmake sure to commit the changes there\n\ngit status\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git status\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nnothing to commit, working tree clean\n\n\nFetch will pull any remote changes\n\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git fetch\nremote: Enumerating objects: 5, done.\nremote: Counting objects: 100% (5/5), done.\nremote: Compressing objects: 100% (3/3), done.\nUnpacking objects: 100% (3/3), 707 bytes | 707.00 KiB/s, done.\nremote: Total 3 (delta 1), reused 0 (delta 0), pack-reused 0\nFrom github.com:sjsrey/planets\n   be51b2e..a0279db  main       -&gt; origin/main\n\ngit status\nOn branch main\nYour branch is behind 'origin/main' by 1 commit, and can be fast-forwarded.\n  (use \"git pull\" to update your local branch)\n\nnothing to commit, working tree clean\n\nThis tells us there are changes on the remote that we don’t have locally. To get them, we follow the helpful suggestions:\n\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git pull\nUpdating be51b2e..a0279db\nFast-forward\n README.md | 3 +++\n 1 file changed, 3 insertions(+)\ngit status\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nnothing to commit, working tree clean\n\nSo good practice is everytime you sit down to do some work on a local repository:\n\n\n\ngit fetch # to see if there have been changes on the remote\n\n\ngit pull # if there have been\n\n\ndo you work locally and then push to origin when done\n\n\n\nConflicts\n\n\nNow that both repositories, local and remote, are identical, we are going to create a conflict.\n\n\nThese can arise when working on collaborative projects where multiple people are changing the same files, or on your individual work, where you may be working from different locations and forgot that the past you had changed a file on a remote while current you is happily working on the same part of the file on a local repository.\n\n\nTo do this, let’s go all Ohio State and on github edit the readme so the title is “The Planets Project”.\n\n\nNow on the local repository, edit the same line, but let’s call it “My Planet Project” Locally:\n\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ git status\nOn branch main\nYour branch is up to date with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add &lt;file&gt;...\" to update what will be committed)\n  (use \"git restore &lt;file&gt;...\" to discard changes in working directory)\n        modified:   README.md\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\njupyter-serge584s23@geo-rey-srv2:~/work/git/planets$ \n\ngit pull (to show conflict)\n\n\nHow to resolve a conflict\n\n\nexplain markers\n\n\nedit file to reconcile conflict\n\n\ngit add git commit\n\n\ngit push\n\n\nnote conflicts only involve changes to the same line\n\n\ncollaboration\n\n\nsee moleskein for the git flow diagram all team members should have forked the shared repository (except for the person who created it)\n\n\nfork if you have not\n\n\nhttps://github.com/raffaelen/Identifying-Regional-Employment-Centers https://github.com/elizabeth-bushnell/15_minute_city_584project https://github.com/rbilchak/Balboa_Park_Mapping https://github.com/hannahsamy/sd_agriculture_project https://github.com/fiendskrah/584-education-inequality\n\n\nclone the group project into your jupyter hub account\n\n\nmake a directory for the 584project cd into 584project clone your fork\n\n\nadd the upstream remote\n\n\nwalk them through this for the course project\n\n\n\nfork\n\n\nclone\n\n\nadd upstream\n\n\npull from upstream\n\n\nbranch on local\n\n\nmake changes to README.md\n\n\nadd, commit\n\n\npush branch to origin\n\n\nPR into upstream from origin"
  },
  {
    "objectID": "week-03/0201_pandas_2.html",
    "href": "week-03/0201_pandas_2.html",
    "title": "Pandas Part II",
    "section": "",
    "text": "import requests\nfrom openpyxl import load_workbook\n\n\nurl = 'https://www.ers.usda.gov/webdocs/DataFiles/48747/PovertyEstimates.xlsx?v=9655.3'\noutput_file = 'PovertyEstimates.xlsx'  # Name of the local copy\n\n\nresponse = requests.get(url)\n\n\nif response.status_code == 200:\n    with open(output_file, 'wb') as file:\n        file.write(response.content)\n    print(f\"File '{output_file}' downloaded successfully.\")\n\n    # Optional: Check the content of the downloaded XLSX file\n    wb = load_workbook(output_file)\n    sheets = wb.sheetnames\n    print(f\"Excel file contains the following sheets: {sheets}\")\n    # You can now work with the Excel file as needed\n    \nelse:\n    print(f\"Failed to download the file. Status code: {response.status_code}\")\n\nFile 'PovertyEstimates.xlsx' downloaded successfully.\nExcel file contains the following sheets: ['PovertyEstimates', 'Variable Descriptions']\n\n\n\nimport pandas as pd\nfile_path = 'PovertyEstimates.xlsx'\nxls = pd.ExcelFile(file_path)\n\n\nxls.sheet_names\n\n['PovertyEstimates', 'Variable Descriptions']\n\n\n\nvar_df = pd.read_excel(file_path, 'Variable Descriptions')\n\n\nvar_df.head()\n\n\n\n\n\n\n\n\nColumn variable name\nDescription\n\n\n\n\n0\nFIPS_Code\nState-county Federal Information Processing St...\n\n\n1\nStabr\nState abbreviation\n\n\n2\nArea_name\nArea name\n\n\n3\nRural-urban_Continuum_Code_2003\nRural-Urban Continuum Code, 2003\n\n\n4\nUrban_Influence_Code_2003\nUrban Influence Code, 2003\n\n\n\n\n\n\n\n\nvar_df.shape\n\n(34, 2)\n\n\n\nvar_df\n\n\n\n\n\n\n\n\nColumn variable name\nDescription\n\n\n\n\n0\nFIPS_Code\nState-county Federal Information Processing St...\n\n\n1\nStabr\nState abbreviation\n\n\n2\nArea_name\nArea name\n\n\n3\nRural-urban_Continuum_Code_2003\nRural-Urban Continuum Code, 2003\n\n\n4\nUrban_Influence_Code_2003\nUrban Influence Code, 2003\n\n\n5\nRural-urban_Continuum_Code_2013\nRural-Urban Continuum Code, 2013\n\n\n6\nUrban_Influence_Code_ 2013\nUrban Influence Code, 2013\n\n\n7\nPOVALL_2021\nEstimate of people of all ages in poverty 2021\n\n\n8\nCI90LBALL_2021\n90 percent confidence interval lower bound of ...\n\n\n9\nCI90UBALL_2021\n90 percent confidence interval upper bound of ...\n\n\n10\nPCTPOVALL_2021\nEstimated percent of people of all ages in pov...\n\n\n11\nCI90LBALLP_2021\n90 percent confidence interval lower bound of ...\n\n\n12\nCI90UBALLP_2021\n90 percent confidence interval upper bound of ...\n\n\n13\nPOV017_2021\nEstimate of people age 0-17 in poverty 2021\n\n\n14\nCI90LB017_2021\n90 percent confidence interval lower bound of ...\n\n\n15\nCI90UB017_2021\n90 percent confidence interval upper bound of ...\n\n\n16\nPCTPOV017_2021\nEstimated percent of people age 0-17 in povert...\n\n\n17\nCI90LB017P_2021\n90 percent confidence interval lower bound of ...\n\n\n18\nCI90UB017P_2021\n90 percent confidence interval upper bound of ...\n\n\n19\nPOV517_2021\nEstimate of related children age 5-17 in famil...\n\n\n20\nCI90LB517_2021\n90 percent confidence interval lower bound of ...\n\n\n21\nCI90UB517_2021\n90 percent confidence interval upper bound of ...\n\n\n22\nPCTPOV517_2021\nEstimated percent of related children age 5-17...\n\n\n23\nCI90LB517P_2021\n90 percent confidence interval lower bound of ...\n\n\n24\nCI90UB517P_2021\n90 percent confidence interval upper bound of ...\n\n\n25\nMEDHHINC_2021\nEstimate of median household income 2021\n\n\n26\nCI90LBINC_2021\n90 percent confidence interval lower bound of ...\n\n\n27\nCI90UBINC_2021\n90 percent confidence interval upper bound of ...\n\n\n28\nPOV04_2021\nEstimate of children ages 0 to 4 in poverty 20...\n\n\n29\nCI90LB04_2021\n90 percent confidence interval lower bound of ...\n\n\n30\nCI90UB04_2021\n90 percent confidence interval upper bound of ...\n\n\n31\nPCTPOV04_2021\nEstimated percent of children ages 0 to 4 in p...\n\n\n32\nCI90LB04P_2021\n90 percent confidence interval lower bound of ...\n\n\n33\nCI90UB04P_2021\n90 percent confidence interval upper bound of ...\n\n\n\n\n\n\n\n\ndf = pd.read_excel(file_path, 'PovertyEstimates')\n\n\ndf.head()\n\n\n\n\n\n\n\n\nPoverty estimates for U.S., States, and counties, 2021\nUnnamed: 1\nUnnamed: 2\nUnnamed: 3\nUnnamed: 4\nUnnamed: 5\nUnnamed: 6\nUnnamed: 7\nUnnamed: 8\nUnnamed: 9\n...\nUnnamed: 24\nUnnamed: 25\nUnnamed: 26\nUnnamed: 27\nUnnamed: 28\nUnnamed: 29\nUnnamed: 30\nUnnamed: 31\nUnnamed: 32\nUnnamed: 33\n\n\n\n\n0\nSource: U.S. Department of Commerce, Bureau of...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1\nFor definitions of rural classifications, see ...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n2\nThis table was prepared by USDA, Economic Rese...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n3\nFIPS_Code\nStabr\nArea_name\nRural-urban_Continuum_Code_2003\nUrban_Influence_Code_2003\nRural-urban_Continuum_Code_2013\nUrban_Influence_Code_ 2013\nPOVALL_2021\nCI90LBALL_2021\nCI90UBALL_2021\n...\nCI90UB517P_2021\nMEDHHINC_2021\nCI90LBINC_2021\nCI90UBINC_2021\nPOV04_2021\nCI90LB04_2021\nCI90UB04_2021\nPCTPOV04_2021\nCI90LB04P_2021\nCI90UB04P_2021\n\n\n4\n00000\nUS\nUnited States\nNaN\nNaN\nNaN\nNaN\n41393176\n41149497\n41636855\n...\n16.3\n69717\n69583\n69851\n3349149\n3299669\n3398629\n18.3\n18\n18.6\n\n\n\n\n5 rows × 34 columns\n\n\n\n\ndf = pd.read_excel(file_path, 'PovertyEstimates', skiprows=4)\n\n\ndf.head()\n\n\n\n\n\n\n\n\nFIPS_Code\nStabr\nArea_name\nRural-urban_Continuum_Code_2003\nUrban_Influence_Code_2003\nRural-urban_Continuum_Code_2013\nUrban_Influence_Code_ 2013\nPOVALL_2021\nCI90LBALL_2021\nCI90UBALL_2021\n...\nCI90UB517P_2021\nMEDHHINC_2021\nCI90LBINC_2021\nCI90UBINC_2021\nPOV04_2021\nCI90LB04_2021\nCI90UB04_2021\nPCTPOV04_2021\nCI90LB04P_2021\nCI90UB04P_2021\n\n\n\n\n0\n0\nUS\nUnited States\nNaN\nNaN\nNaN\nNaN\n41393176.0\n41149497.0\n41636855.0\n...\n16.3\n69717.0\n69583.0\n69851.0\n3349149.0\n3299669.0\n3398629.0\n18.3\n18.0\n18.6\n\n\n1\n1000\nAL\nAlabama\nNaN\nNaN\nNaN\nNaN\n800848.0\n782169.0\n819527.0\n...\n22.5\n53990.0\n53218.0\n54762.0\n71220.0\n66888.0\n75552.0\n25.1\n23.6\n26.6\n\n\n2\n1001\nAL\nAutauga County\n2.0\n2.0\n2.0\n2.0\n6296.0\n4772.0\n7820.0\n...\n20.4\n66444.0\n60061.0\n72827.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n3\n1003\nAL\nBaldwin County\n4.0\n5.0\n3.0\n2.0\n25526.0\n21599.0\n29453.0\n...\n18.5\n65658.0\n60723.0\n70593.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n4\n1005\nAL\nBarbour County\n6.0\n6.0\n6.0\n6.0\n5089.0\n3773.0\n6405.0\n...\n44.6\n38649.0\n34308.0\n42990.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n5 rows × 34 columns\n\n\n\n\ndf.shape\n\n(3195, 34)\n\n\n\ndf.dtypes\n\nFIPS_Code                            int64\nStabr                               object\nArea_name                           object\nRural-urban_Continuum_Code_2003    float64\nUrban_Influence_Code_2003          float64\nRural-urban_Continuum_Code_2013    float64\nUrban_Influence_Code_ 2013         float64\nPOVALL_2021                        float64\nCI90LBALL_2021                     float64\nCI90UBALL_2021                     float64\nPCTPOVALL_2021                     float64\nCI90LBALLP_2021                    float64\nCI90UBALLP_2021                    float64\nPOV017_2021                        float64\nCI90LB017_2021                     float64\nCI90UB017_2021                     float64\nPCTPOV017_2021                     float64\nCI90LB017P_2021                    float64\nCI90UB017P_2021                    float64\nPOV517_2021                        float64\nCI90LB517_2021                     float64\nCI90UB517_2021                     float64\nPCTPOV517_2021                     float64\nCI90LB517P_2021                    float64\nCI90UB517P_2021                    float64\nMEDHHINC_2021                      float64\nCI90LBINC_2021                     float64\nCI90UBINC_2021                     float64\nPOV04_2021                         float64\nCI90LB04_2021                      float64\nCI90UB04_2021                      float64\nPCTPOV04_2021                      float64\nCI90LB04P_2021                     float64\nCI90UB04P_2021                     float64\ndtype: object\n\n\n\ndf['fips_str'] = df.FIPS_Code.astype(str).str.zfill(5)\n\n\ndf.fips_str\n\n0       00000\n1       01000\n2       01001\n3       01003\n4       01005\n        ...  \n3190    56037\n3191    56039\n3192    56041\n3193    56043\n3194    56045\nName: fips_str, Length: 3195, dtype: object\n\n\n\ndf[['FIPS_Code', 'fips_str']]\n\n\n\n\n\n\n\n\nFIPS_Code\nfips_str\n\n\n\n\n0\n0\n00000\n\n\n1\n1000\n01000\n\n\n2\n1001\n01001\n\n\n3\n1003\n01003\n\n\n4\n1005\n01005\n\n\n...\n...\n...\n\n\n3190\n56037\n56037\n\n\n3191\n56039\n56039\n\n\n3192\n56041\n56041\n\n\n3193\n56043\n56043\n\n\n3194\n56045\n56045\n\n\n\n\n3195 rows × 2 columns\n\n\n\n\ndf.head()\n\n\n\n\n\n\n\n\nFIPS_Code\nStabr\nArea_name\nRural-urban_Continuum_Code_2003\nUrban_Influence_Code_2003\nRural-urban_Continuum_Code_2013\nUrban_Influence_Code_ 2013\nPOVALL_2021\nCI90LBALL_2021\nCI90UBALL_2021\n...\nMEDHHINC_2021\nCI90LBINC_2021\nCI90UBINC_2021\nPOV04_2021\nCI90LB04_2021\nCI90UB04_2021\nPCTPOV04_2021\nCI90LB04P_2021\nCI90UB04P_2021\nfips_str\n\n\n\n\n0\n0\nUS\nUnited States\nNaN\nNaN\nNaN\nNaN\n41393176.0\n41149497.0\n41636855.0\n...\n69717.0\n69583.0\n69851.0\n3349149.0\n3299669.0\n3398629.0\n18.3\n18.0\n18.6\n00000\n\n\n1\n1000\nAL\nAlabama\nNaN\nNaN\nNaN\nNaN\n800848.0\n782169.0\n819527.0\n...\n53990.0\n53218.0\n54762.0\n71220.0\n66888.0\n75552.0\n25.1\n23.6\n26.6\n01000\n\n\n2\n1001\nAL\nAutauga County\n2.0\n2.0\n2.0\n2.0\n6296.0\n4772.0\n7820.0\n...\n66444.0\n60061.0\n72827.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01001\n\n\n3\n1003\nAL\nBaldwin County\n4.0\n5.0\n3.0\n2.0\n25526.0\n21599.0\n29453.0\n...\n65658.0\n60723.0\n70593.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01003\n\n\n4\n1005\nAL\nBarbour County\n6.0\n6.0\n6.0\n6.0\n5089.0\n3773.0\n6405.0\n...\n38649.0\n34308.0\n42990.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01005\n\n\n\n\n5 rows × 35 columns\n\n\n\n\ndf[df.Stabr=='AL']\n\n\n\n\n\n\n\n\nFIPS_Code\nStabr\nArea_name\nRural-urban_Continuum_Code_2003\nUrban_Influence_Code_2003\nRural-urban_Continuum_Code_2013\nUrban_Influence_Code_ 2013\nPOVALL_2021\nCI90LBALL_2021\nCI90UBALL_2021\n...\nMEDHHINC_2021\nCI90LBINC_2021\nCI90UBINC_2021\nPOV04_2021\nCI90LB04_2021\nCI90UB04_2021\nPCTPOV04_2021\nCI90LB04P_2021\nCI90UB04P_2021\nfips_str\n\n\n\n\n1\n1000\nAL\nAlabama\nNaN\nNaN\nNaN\nNaN\n800848.0\n782169.0\n819527.0\n...\n53990.0\n53218.0\n54762.0\n71220.0\n66888.0\n75552.0\n25.1\n23.6\n26.6\n01000\n\n\n2\n1001\nAL\nAutauga County\n2.0\n2.0\n2.0\n2.0\n6296.0\n4772.0\n7820.0\n...\n66444.0\n60061.0\n72827.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01001\n\n\n3\n1003\nAL\nBaldwin County\n4.0\n5.0\n3.0\n2.0\n25526.0\n21599.0\n29453.0\n...\n65658.0\n60723.0\n70593.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01003\n\n\n4\n1005\nAL\nBarbour County\n6.0\n6.0\n6.0\n6.0\n5089.0\n3773.0\n6405.0\n...\n38649.0\n34308.0\n42990.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01005\n\n\n5\n1007\nAL\nBibb County\n1.0\n1.0\n1.0\n1.0\n4204.0\n3324.0\n5084.0\n...\n48454.0\n42438.0\n54470.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01007\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n64\n1125\nAL\nTuscaloosa County\n3.0\n2.0\n3.0\n2.0\n31735.0\n26867.0\n36603.0\n...\n56274.0\n52677.0\n59871.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01125\n\n\n65\n1127\nAL\nWalker County\n1.0\n1.0\n1.0\n1.0\n12877.0\n10967.0\n14787.0\n...\n46343.0\n41443.0\n51243.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01127\n\n\n66\n1129\nAL\nWashington County\n8.0\n7.0\n8.0\n7.0\n3091.0\n2505.0\n3677.0\n...\n49795.0\n43655.0\n55935.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01129\n\n\n67\n1131\nAL\nWilcox County\n8.0\n7.0\n9.0\n10.0\n3340.0\n2578.0\n4102.0\n...\n30071.0\n26647.0\n33495.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01131\n\n\n68\n1133\nAL\nWinston County\n6.0\n4.0\n6.0\n4.0\n4455.0\n3624.0\n5286.0\n...\n47176.0\n41809.0\n52543.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01133\n\n\n\n\n68 rows × 35 columns\n\n\n\n\ndf[df.Stabr=='CA']\n\n\n\n\n\n\n\n\nFIPS_Code\nStabr\nArea_name\nRural-urban_Continuum_Code_2003\nUrban_Influence_Code_2003\nRural-urban_Continuum_Code_2013\nUrban_Influence_Code_ 2013\nPOVALL_2021\nCI90LBALL_2021\nCI90UBALL_2021\n...\nMEDHHINC_2021\nCI90LBINC_2021\nCI90UBINC_2021\nPOV04_2021\nCI90LB04_2021\nCI90UB04_2021\nPCTPOV04_2021\nCI90LB04P_2021\nCI90UB04P_2021\nfips_str\n\n\n\n\n192\n6000\nCA\nCalifornia\nNaN\nNaN\nNaN\nNaN\n4742405.0\n4689999.0\n4794811.0\n...\n84831.0\n84292.0\n85370.0\n339169.0\n326796.0\n351542.0\n15.8\n15.2\n16.4\n06000\n\n\n193\n6001\nCA\nAlameda County\n1.0\n1.0\n1.0\n1.0\n152654.0\n140318.0\n164990.0\n...\n108971.0\n106170.0\n111772.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06001\n\n\n194\n6003\nCA\nAlpine County\n8.0\n4.0\n8.0\n4.0\n194.0\n148.0\n240.0\n...\n87570.0\n80899.0\n94241.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06003\n\n\n195\n6005\nCA\nAmador County\n6.0\n4.0\n6.0\n4.0\n4104.0\n3139.0\n5069.0\n...\n68159.0\n61507.0\n74811.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06005\n\n\n196\n6007\nCA\nButte County\n3.0\n2.0\n3.0\n2.0\n33874.0\n30026.0\n37722.0\n...\n62982.0\n60248.0\n65716.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06007\n\n\n197\n6009\nCA\nCalaveras County\n6.0\n6.0\n6.0\n6.0\n6198.0\n5078.0\n7318.0\n...\n68298.0\n61082.0\n75514.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06009\n\n\n198\n6011\nCA\nColusa County\n6.0\n4.0\n6.0\n4.0\n2466.0\n1901.0\n3031.0\n...\n60725.0\n53787.0\n67663.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06011\n\n\n199\n6013\nCA\nContra Costa County\n1.0\n1.0\n1.0\n1.0\n100948.0\n92022.0\n109874.0\n...\n110595.0\n107542.0\n113648.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06013\n\n\n200\n6015\nCA\nDel Norte County\n7.0\n8.0\n7.0\n8.0\n5368.0\n4316.0\n6420.0\n...\n48108.0\n42824.0\n53392.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06015\n\n\n201\n6017\nCA\nEl Dorado County\n1.0\n1.0\n1.0\n1.0\n16839.0\n14045.0\n19633.0\n...\n87689.0\n80889.0\n94489.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06017\n\n\n202\n6019\nCA\nFresno County\n2.0\n2.0\n2.0\n2.0\n193449.0\n179983.0\n206915.0\n...\n63140.0\n61332.0\n64948.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06019\n\n\n203\n6021\nCA\nGlenn County\n6.0\n6.0\n6.0\n6.0\n4397.0\n3560.0\n5234.0\n...\n56741.0\n50379.0\n63103.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06021\n\n\n204\n6023\nCA\nHumboldt County\n5.0\n8.0\n5.0\n8.0\n25781.0\n22760.0\n28802.0\n...\n53924.0\n49868.0\n57980.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06023\n\n\n205\n6025\nCA\nImperial County\n3.0\n2.0\n3.0\n2.0\n29738.0\n24540.0\n34936.0\n...\n50970.0\n48099.0\n53841.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06025\n\n\n206\n6027\nCA\nInyo County\n7.0\n8.0\n7.0\n11.0\n2382.0\n1903.0\n2861.0\n...\n62381.0\n55355.0\n69407.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06027\n\n\n207\n6029\nCA\nKern County\n2.0\n2.0\n2.0\n2.0\n164169.0\n149799.0\n178539.0\n...\n57926.0\n54723.0\n61129.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06029\n\n\n208\n6031\nCA\nKings County\n3.0\n2.0\n3.0\n2.0\n24295.0\n20420.0\n28170.0\n...\n60810.0\n57040.0\n64580.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06031\n\n\n209\n6033\nCA\nLake County\n4.0\n5.0\n4.0\n5.0\n11196.0\n8683.0\n13709.0\n...\n55801.0\n51767.0\n59835.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06033\n\n\n210\n6035\nCA\nLassen County\n6.0\n6.0\n7.0\n8.0\n4805.0\n3867.0\n5743.0\n...\n56923.0\n51387.0\n62459.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06035\n\n\n211\n6037\nCA\nLos Angeles County\n1.0\n1.0\n1.0\n1.0\n1365808.0\n1324191.0\n1407425.0\n...\n77356.0\n76664.0\n78048.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06037\n\n\n212\n6039\nCA\nMadera County\n3.0\n2.0\n3.0\n2.0\n31044.0\n27214.0\n34874.0\n...\n60241.0\n54963.0\n65519.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06039\n\n\n213\n6041\nCA\nMarin County\n1.0\n1.0\n1.0\n1.0\n19734.0\n16455.0\n23013.0\n...\n118472.0\n110912.0\n126032.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06041\n\n\n214\n6043\nCA\nMariposa County\n8.0\n7.0\n8.0\n7.0\n2387.0\n1808.0\n2966.0\n...\n60377.0\n54124.0\n66630.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06043\n\n\n215\n6045\nCA\nMendocino County\n4.0\n5.0\n4.0\n5.0\n14539.0\n11887.0\n17191.0\n...\n57516.0\n51658.0\n63374.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06045\n\n\n216\n6047\nCA\nMerced County\n3.0\n2.0\n2.0\n2.0\n61359.0\n55535.0\n67183.0\n...\n54703.0\n51436.0\n57970.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06047\n\n\n217\n6049\nCA\nModoc County\n6.0\n6.0\n6.0\n6.0\n1688.0\n1307.0\n2069.0\n...\n49273.0\n44364.0\n54182.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06049\n\n\n218\n6051\nCA\nMono County\n7.0\n9.0\n7.0\n11.0\n1278.0\n973.0\n1583.0\n...\n70945.0\n62471.0\n79419.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06051\n\n\n219\n6053\nCA\nMonterey County\n2.0\n2.0\n2.0\n2.0\n50725.0\n43455.0\n57995.0\n...\n81404.0\n79343.0\n83465.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06053\n\n\n220\n6055\nCA\nNapa County\n3.0\n2.0\n3.0\n2.0\n11814.0\n9909.0\n13719.0\n...\n94127.0\n88895.0\n99359.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06055\n\n\n221\n6057\nCA\nNevada County\n4.0\n3.0\n4.0\n3.0\n12141.0\n10287.0\n13995.0\n...\n77220.0\n70966.0\n83474.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06057\n\n\n222\n6059\nCA\nOrange County\n1.0\n1.0\n1.0\n1.0\n309402.0\n290860.0\n327944.0\n...\n100210.0\n98704.0\n101716.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06059\n\n\n223\n6061\nCA\nPlacer County\n1.0\n1.0\n1.0\n1.0\n26816.0\n23108.0\n30524.0\n...\n103588.0\n100310.0\n106866.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06061\n\n\n224\n6063\nCA\nPlumas County\n7.0\n12.0\n7.0\n12.0\n2545.0\n1946.0\n3144.0\n...\n58154.0\n52309.0\n63999.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06063\n\n\n225\n6065\nCA\nRiverside County\n1.0\n1.0\n1.0\n1.0\n282068.0\n261203.0\n302933.0\n...\n78690.0\n77268.0\n80112.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06065\n\n\n226\n6067\nCA\nSacramento County\n1.0\n1.0\n1.0\n1.0\n203413.0\n188841.0\n217985.0\n...\n79611.0\n77617.0\n81605.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06067\n\n\n227\n6069\nCA\nSan Benito County\n1.0\n1.0\n1.0\n1.0\n5899.0\n4633.0\n7165.0\n...\n95187.0\n87067.0\n103307.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06069\n\n\n228\n6071\nCA\nSan Bernardino County\n1.0\n1.0\n1.0\n1.0\n285474.0\n263941.0\n307007.0\n...\n74218.0\n72378.0\n76058.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06071\n\n\n229\n6073\nCA\nSan Diego County\n1.0\n1.0\n1.0\n1.0\n340522.0\n320076.0\n360968.0\n...\n90756.0\n89622.0\n91890.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06073\n\n\n230\n6075\nCA\nSan Francisco County\n1.0\n1.0\n1.0\n1.0\n90898.0\n83583.0\n98213.0\n...\n119776.0\n115563.0\n123989.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06075\n\n\n231\n6077\nCA\nSan Joaquin County\n2.0\n2.0\n2.0\n2.0\n95382.0\n83774.0\n106990.0\n...\n79598.0\n77211.0\n81985.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06077\n\n\n232\n6079\nCA\nSan Luis Obispo County\n3.0\n2.0\n2.0\n2.0\n35120.0\n31122.0\n39118.0\n...\n79688.0\n75932.0\n83444.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06079\n\n\n233\n6081\nCA\nSan Mateo County\n1.0\n1.0\n1.0\n1.0\n49900.0\n43747.0\n56053.0\n...\n131151.0\n127714.0\n134588.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06081\n\n\n234\n6083\nCA\nSanta Barbara County\n2.0\n2.0\n2.0\n2.0\n65029.0\n59277.0\n70781.0\n...\n83185.0\n79921.0\n86449.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06083\n\n\n235\n6085\nCA\nSanta Clara County\n1.0\n1.0\n1.0\n1.0\n128955.0\n117767.0\n140143.0\n...\n141161.0\n138832.0\n143490.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06085\n\n\n236\n6087\nCA\nSanta Cruz County\n2.0\n2.0\n2.0\n2.0\n27132.0\n22485.0\n31779.0\n...\n90370.0\n84679.0\n96061.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06087\n\n\n237\n6089\nCA\nShasta County\n3.0\n2.0\n3.0\n2.0\n25141.0\n21256.0\n29026.0\n...\n60187.0\n56764.0\n63610.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06089\n\n\n238\n6091\nCA\nSierra County\n8.0\n7.0\n8.0\n7.0\n398.0\n300.0\n496.0\n...\n60659.0\n53239.0\n68079.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06091\n\n\n239\n6093\nCA\nSiskiyou County\n7.0\n11.0\n6.0\n6.0\n7301.0\n6005.0\n8597.0\n...\n50069.0\n45178.0\n54960.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06093\n\n\n240\n6095\nCA\nSolano County\n2.0\n2.0\n2.0\n2.0\n44037.0\n37963.0\n50111.0\n...\n87348.0\n84016.0\n90680.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06095\n\n\n241\n6097\nCA\nSonoma County\n2.0\n2.0\n2.0\n2.0\n43661.0\n38372.0\n48950.0\n...\n92999.0\n89380.0\n96618.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06097\n\n\n242\n6099\nCA\nStanislaus County\n2.0\n2.0\n2.0\n2.0\n76921.0\n67090.0\n86752.0\n...\n73151.0\n70938.0\n75364.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06099\n\n\n243\n6101\nCA\nSutter County\n3.0\n2.0\n3.0\n2.0\n15224.0\n12930.0\n17518.0\n...\n63246.0\n58462.0\n68030.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06101\n\n\n244\n6103\nCA\nTehama County\n4.0\n5.0\n4.0\n5.0\n10107.0\n8151.0\n12063.0\n...\n53654.0\n47435.0\n59873.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06103\n\n\n245\n6105\nCA\nTrinity County\n8.0\n6.0\n8.0\n6.0\n3010.0\n2307.0\n3713.0\n...\n45508.0\n39960.0\n51056.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06105\n\n\n246\n6107\nCA\nTulare County\n2.0\n2.0\n2.0\n2.0\n88367.0\n78219.0\n98515.0\n...\n57398.0\n54157.0\n60639.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06107\n\n\n247\n6109\nCA\nTuolumne County\n4.0\n5.0\n4.0\n5.0\n6848.0\n5388.0\n8308.0\n...\n61396.0\n54884.0\n67908.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06109\n\n\n248\n6111\nCA\nVentura County\n2.0\n2.0\n2.0\n2.0\n73968.0\n66079.0\n81857.0\n...\n95819.0\n93275.0\n98363.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06111\n\n\n249\n6113\nCA\nYolo County\n1.0\n1.0\n1.0\n1.0\n30708.0\n27369.0\n34047.0\n...\n76247.0\n71083.0\n81411.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06113\n\n\n250\n6115\nCA\nYuba County\n3.0\n2.0\n3.0\n2.0\n12784.0\n10305.0\n15263.0\n...\n60764.0\n56731.0\n64797.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06115\n\n\n\n\n59 rows × 35 columns\n\n\n\n\nstates = df[df.fips_str.str.endswith('000')]\n\n\nstates\n\n\n\n\n\n\n\n\nFIPS_Code\nStabr\nArea_name\nRural-urban_Continuum_Code_2003\nUrban_Influence_Code_2003\nRural-urban_Continuum_Code_2013\nUrban_Influence_Code_ 2013\nPOVALL_2021\nCI90LBALL_2021\nCI90UBALL_2021\n...\nMEDHHINC_2021\nCI90LBINC_2021\nCI90UBINC_2021\nPOV04_2021\nCI90LB04_2021\nCI90UB04_2021\nPCTPOV04_2021\nCI90LB04P_2021\nCI90UB04P_2021\nfips_str\n\n\n\n\n0\n0\nUS\nUnited States\nNaN\nNaN\nNaN\nNaN\n41393176.0\n41149497.0\n41636855.0\n...\n69717.0\n69583.0\n69851.0\n3349149.0\n3299669.0\n3398629.0\n18.3\n18.0\n18.6\n00000\n\n\n1\n1000\nAL\nAlabama\nNaN\nNaN\nNaN\nNaN\n800848.0\n782169.0\n819527.0\n...\n53990.0\n53218.0\n54762.0\n71220.0\n66888.0\n75552.0\n25.1\n23.6\n26.6\n01000\n\n\n69\n2000\nAK\nAlaska\nNaN\nNaN\nNaN\nNaN\n77736.0\n74178.0\n81294.0\n...\n78437.0\n76456.0\n80418.0\n6633.0\n5796.0\n7470.0\n14.1\n12.3\n15.9\n02000\n\n\n100\n4000\nAZ\nArizona\nNaN\nNaN\nNaN\nNaN\n919680.0\n900349.0\n939011.0\n...\n68967.0\n68287.0\n69647.0\n76649.0\n71494.0\n81804.0\n19.7\n18.4\n21.0\n04000\n\n\n116\n5000\nAR\nArkansas\nNaN\nNaN\nNaN\nNaN\n471195.0\n458260.0\n484130.0\n...\n52577.0\n51595.0\n53559.0\n45096.0\n42186.0\n48006.0\n25.5\n23.9\n27.1\n05000\n\n\n192\n6000\nCA\nCalifornia\nNaN\nNaN\nNaN\nNaN\n4742405.0\n4689999.0\n4794811.0\n...\n84831.0\n84292.0\n85370.0\n339169.0\n326796.0\n351542.0\n15.8\n15.2\n16.4\n06000\n\n\n251\n8000\nCO\nColorado\nNaN\nNaN\nNaN\nNaN\n554126.0\n540035.0\n568217.0\n...\n82228.0\n81447.0\n83009.0\n39308.0\n35584.0\n43032.0\n12.8\n11.6\n14.0\n08000\n\n\n316\n9000\nCT\nConnecticut\nNaN\nNaN\nNaN\nNaN\n355861.0\n344138.0\n367584.0\n...\n83628.0\n82542.0\n84714.0\n24150.0\n21569.0\n26731.0\n13.9\n12.4\n15.4\n09000\n\n\n325\n10000\nDE\nDelaware\nNaN\nNaN\nNaN\nNaN\n113026.0\n107766.0\n118286.0\n...\n71636.0\n69940.0\n73332.0\n9694.0\n8679.0\n10709.0\n18.6\n16.6\n20.6\n10000\n\n\n329\n11000\nDC\nDistrict of Columbia\nNaN\nNaN\nNaN\nNaN\n107307.0\n101426.0\n113188.0\n...\n91072.0\n88170.0\n93974.0\n9444.0\n8334.0\n10554.0\n24.3\n21.4\n27.2\n11000\n\n\n331\n12000\nFL\nFlorida\nNaN\nNaN\nNaN\nNaN\n2830813.0\n2790138.0\n2871488.0\n...\n63054.0\n62631.0\n63477.0\n212346.0\n200017.0\n224675.0\n19.8\n18.7\n20.9\n12000\n\n\n399\n13000\nGA\nGeorgia\nNaN\nNaN\nNaN\nNaN\n1493837.0\n1463589.0\n1524085.0\n...\n66507.0\n65802.0\n67212.0\n135538.0\n128008.0\n143068.0\n22.0\n20.8\n23.2\n13000\n\n\n559\n15000\nHI\nHawaii\nNaN\nNaN\nNaN\nNaN\n152656.0\n146272.0\n159040.0\n...\n85547.0\n83548.0\n87546.0\n10150.0\n8658.0\n11642.0\n12.9\n11.0\n14.8\n15000\n\n\n565\n16000\nID\nIdaho\nNaN\nNaN\nNaN\nNaN\n202091.0\n193474.0\n210708.0\n...\n66318.0\n64668.0\n67968.0\n17074.0\n15118.0\n19030.0\n15.4\n13.6\n17.2\n16000\n\n\n610\n17000\nIL\nIllinois\nNaN\nNaN\nNaN\nNaN\n1493042.0\n1465135.0\n1520949.0\n...\n72215.0\n71645.0\n72785.0\n120015.0\n114563.0\n125467.0\n17.5\n16.7\n18.3\n17000\n\n\n713\n18000\nIN\nIndiana\nNaN\nNaN\nNaN\nNaN\n799733.0\n782428.0\n817038.0\n...\n62723.0\n62015.0\n63431.0\n69805.0\n64751.0\n74859.0\n17.7\n16.4\n19.0\n18000\n\n\n806\n19000\nIA\nIowa\nNaN\nNaN\nNaN\nNaN\n340626.0\n329373.0\n351879.0\n...\n65645.0\n64876.0\n66414.0\n24541.0\n22373.0\n26709.0\n13.3\n12.1\n14.5\n19000\n\n\n906\n20000\nKS\nKansas\nNaN\nNaN\nNaN\nNaN\n332457.0\n322234.0\n342680.0\n...\n64128.0\n63194.0\n65062.0\n27811.0\n25370.0\n30252.0\n16.0\n14.6\n17.4\n20000\n\n\n1012\n21000\nKY\nKentucky\nNaN\nNaN\nNaN\nNaN\n712023.0\n697813.0\n726233.0\n...\n55532.0\n54838.0\n56226.0\n60772.0\n57134.0\n64410.0\n23.6\n22.2\n25.0\n21000\n\n\n1133\n22000\nLA\nLouisiana\nNaN\nNaN\nNaN\nNaN\n878477.0\n859106.0\n897848.0\n...\n52090.0\n51348.0\n52832.0\n80375.0\n76164.0\n84586.0\n28.8\n27.3\n30.3\n22000\n\n\n1198\n23000\nME\nMaine\nNaN\nNaN\nNaN\nNaN\n149571.0\n143213.0\n155929.0\n...\n64823.0\n63604.0\n66042.0\n8895.0\n7789.0\n10001.0\n14.7\n12.9\n16.5\n23000\n\n\n1215\n24000\nMD\nMaryland\nNaN\nNaN\nNaN\nNaN\n620829.0\n603853.0\n637805.0\n...\n90129.0\n89087.0\n91171.0\n51970.0\n47916.0\n56024.0\n15.0\n13.8\n16.2\n24000\n\n\n1240\n25000\nMA\nMassachusetts\nNaN\nNaN\nNaN\nNaN\n701700.0\n685529.0\n717871.0\n...\n89577.0\n88330.0\n90824.0\n44332.0\n40364.0\n48300.0\n13.1\n11.9\n14.3\n25000\n\n\n1255\n26000\nMI\nMichigan\nNaN\nNaN\nNaN\nNaN\n1283086.0\n1261685.0\n1304487.0\n...\n63444.0\n62920.0\n63968.0\n104555.0\n98778.0\n110332.0\n19.5\n18.4\n20.6\n26000\n\n\n1339\n27000\nMN\nMinnesota\nNaN\nNaN\nNaN\nNaN\n519437.0\n507482.0\n531392.0\n...\n77712.0\n76812.0\n78612.0\n36651.0\n33066.0\n40236.0\n11.1\n10.0\n12.2\n27000\n\n\n1427\n28000\nMS\nMississippi\nNaN\nNaN\nNaN\nNaN\n549710.0\n536691.0\n562729.0\n...\n48871.0\n47663.0\n50079.0\n51862.0\n48648.0\n55076.0\n30.3\n28.4\n32.2\n28000\n\n\n1510\n29000\nMO\nMissouri\nNaN\nNaN\nNaN\nNaN\n765097.0\n748927.0\n781267.0\n...\n61815.0\n61152.0\n62478.0\n63067.0\n58984.0\n67150.0\n18.1\n16.9\n19.3\n29000\n\n\n1626\n30000\nMT\nMontana\nNaN\nNaN\nNaN\nNaN\n129910.0\n124852.0\n134968.0\n...\n63357.0\n61990.0\n64724.0\n9726.0\n8698.0\n10754.0\n17.2\n15.4\n19.0\n30000\n\n\n1683\n31000\nNE\nNebraska\nNaN\nNaN\nNaN\nNaN\n201627.0\n194607.0\n208647.0\n...\n66949.0\n65911.0\n67987.0\n16432.0\n14419.0\n18445.0\n13.4\n11.8\n15.0\n31000\n\n\n1777\n32000\nNV\nNevada\nNaN\nNaN\nNaN\nNaN\n433095.0\n420882.0\n445308.0\n...\n66194.0\n65202.0\n67186.0\n36365.0\n33278.0\n39452.0\n21.0\n19.2\n22.8\n32000\n\n\n1795\n33000\nNH\nNew Hampshire\nNaN\nNaN\nNaN\nNaN\n99562.0\n94623.0\n104501.0\n...\n88268.0\n86293.0\n90243.0\n5622.0\n4665.0\n6579.0\n9.4\n7.8\n11.0\n33000\n\n\n1806\n34000\nNJ\nNew Jersey\nNaN\nNaN\nNaN\nNaN\n925852.0\n905573.0\n946131.0\n...\n89227.0\n88164.0\n90290.0\n76282.0\n70767.0\n81797.0\n15.0\n13.9\n16.1\n34000\n\n\n1828\n35000\nNM\nNew Mexico\nNaN\nNaN\nNaN\nNaN\n367050.0\n354401.0\n379699.0\n...\n54304.0\n52878.0\n55730.0\n28231.0\n25602.0\n30860.0\n25.1\n22.8\n27.4\n35000\n\n\n1862\n36000\nNY\nNew York\nNaN\nNaN\nNaN\nNaN\n2703053.0\n2668539.0\n2737567.0\n...\n74230.0\n73620.0\n74840.0\n207920.0\n197263.0\n218577.0\n19.5\n18.5\n20.5\n36000\n\n\n1925\n37000\nNC\nNorth Carolina\nNaN\nNaN\nNaN\nNaN\n1383626.0\n1357735.0\n1409517.0\n...\n61997.0\n61459.0\n62535.0\n116355.0\n109438.0\n123272.0\n20.2\n19.0\n21.4\n37000\n\n\n2026\n38000\nND\nNorth Dakota\nNaN\nNaN\nNaN\nNaN\n82270.0\n78002.0\n86538.0\n...\n67603.0\n65854.0\n69352.0\n6455.0\n5510.0\n7400.0\n12.9\n11.0\n14.8\n38000\n\n\n2080\n39000\nOH\nOhio\nNaN\nNaN\nNaN\nNaN\n1523366.0\n1498525.0\n1548207.0\n...\n62286.0\n61832.0\n62740.0\n135658.0\n129038.0\n142278.0\n20.7\n19.7\n21.7\n39000\n\n\n2169\n40000\nOK\nOklahoma\nNaN\nNaN\nNaN\nNaN\n599003.0\n587366.0\n610640.0\n...\n55829.0\n55210.0\n56448.0\n56598.0\n53190.0\n60006.0\n23.6\n22.2\n25.0\n40000\n\n\n2247\n41000\nOR\nOregon\nNaN\nNaN\nNaN\nNaN\n507504.0\n493784.0\n521224.0\n...\n71441.0\n70406.0\n72476.0\n29637.0\n26737.0\n32537.0\n14.6\n13.2\n16.0\n41000\n\n\n2284\n42000\nPA\nPennsylvania\nNaN\nNaN\nNaN\nNaN\n1503929.0\n1480307.0\n1527551.0\n...\n68931.0\n68429.0\n69433.0\n116290.0\n109264.0\n123316.0\n17.5\n16.4\n18.6\n42000\n\n\n2352\n44000\nRI\nRhode Island\nNaN\nNaN\nNaN\nNaN\n126971.0\n121343.0\n132599.0\n...\n73324.0\n71173.0\n75475.0\n9556.0\n8437.0\n10675.0\n18.6\n16.4\n20.8\n44000\n\n\n2358\n45000\nSC\nSouth Carolina\nNaN\nNaN\nNaN\nNaN\n736098.0\n719691.0\n752505.0\n...\n59447.0\n58606.0\n60288.0\n59011.0\n55007.0\n63015.0\n21.5\n20.0\n23.0\n45000\n\n\n2405\n46000\nSD\nSouth Dakota\nNaN\nNaN\nNaN\nNaN\n103337.0\n99076.0\n107598.0\n...\n66843.0\n64779.0\n68907.0\n9423.0\n8334.0\n10512.0\n16.5\n14.6\n18.4\n46000\n\n\n2472\n47000\nTN\nTennessee\nNaN\nNaN\nNaN\nNaN\n934856.0\n915693.0\n954019.0\n...\n59698.0\n58920.0\n60476.0\n75501.0\n70440.0\n80562.0\n19.3\n18.0\n20.6\n47000\n\n\n2568\n48000\nTX\nTexas\nNaN\nNaN\nNaN\nNaN\n4122799.0\n4067445.0\n4178153.0\n...\n66959.0\n66448.0\n67470.0\n393888.0\n378420.0\n409356.0\n21.2\n20.4\n22.0\n48000\n\n\n2823\n49000\nUT\nUtah\nNaN\nNaN\nNaN\nNaN\n286086.0\n273709.0\n298463.0\n...\n79449.0\n78242.0\n80656.0\n22873.0\n20451.0\n25295.0\n9.8\n8.8\n10.8\n49000\n\n\n2853\n50000\nVT\nVermont\nNaN\nNaN\nNaN\nNaN\n63208.0\n59860.0\n66556.0\n...\n72415.0\n70396.0\n74434.0\n3196.0\n2682.0\n3710.0\n11.6\n9.7\n13.5\n50000\n\n\n2868\n51000\nVA\nVirginia\nNaN\nNaN\nNaN\nNaN\n862792.0\n843622.0\n881962.0\n...\n80926.0\n80203.0\n81649.0\n69303.0\n64164.0\n74442.0\n14.4\n13.3\n15.5\n51000\n\n\n3002\n53000\nWA\nWashington\nNaN\nNaN\nNaN\nNaN\n755589.0\n738622.0\n772556.0\n...\n84155.0\n83322.0\n84988.0\n53637.0\n48940.0\n58334.0\n12.7\n11.6\n13.8\n53000\n\n\n3042\n54000\nWV\nWest Virginia\nNaN\nNaN\nNaN\nNaN\n291051.0\n282054.0\n300048.0\n...\n51122.0\n50059.0\n52185.0\n21090.0\n19436.0\n22744.0\n24.7\n22.8\n26.6\n54000\n\n\n3098\n55000\nWI\nWisconsin\nNaN\nNaN\nNaN\nNaN\n622948.0\n610655.0\n635241.0\n...\n67150.0\n66549.0\n67751.0\n44523.0\n41734.0\n47312.0\n14.3\n13.4\n15.2\n55000\n\n\n3171\n56000\nWY\nWyoming\nNaN\nNaN\nNaN\nNaN\n60226.0\n56527.0\n63925.0\n...\n66508.0\n64077.0\n68939.0\n4455.0\n3781.0\n5129.0\n14.2\n12.0\n16.4\n56000\n\n\n\n\n52 rows × 35 columns\n\n\n\n\ncounties = df[~df.fips_str.str.endswith('000')]\n\n\ncounties.head()\n\n\n\n\n\n\n\n\nFIPS_Code\nStabr\nArea_name\nRural-urban_Continuum_Code_2003\nUrban_Influence_Code_2003\nRural-urban_Continuum_Code_2013\nUrban_Influence_Code_ 2013\nPOVALL_2021\nCI90LBALL_2021\nCI90UBALL_2021\n...\nMEDHHINC_2021\nCI90LBINC_2021\nCI90UBINC_2021\nPOV04_2021\nCI90LB04_2021\nCI90UB04_2021\nPCTPOV04_2021\nCI90LB04P_2021\nCI90UB04P_2021\nfips_str\n\n\n\n\n2\n1001\nAL\nAutauga County\n2.0\n2.0\n2.0\n2.0\n6296.0\n4772.0\n7820.0\n...\n66444.0\n60061.0\n72827.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01001\n\n\n3\n1003\nAL\nBaldwin County\n4.0\n5.0\n3.0\n2.0\n25526.0\n21599.0\n29453.0\n...\n65658.0\n60723.0\n70593.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01003\n\n\n4\n1005\nAL\nBarbour County\n6.0\n6.0\n6.0\n6.0\n5089.0\n3773.0\n6405.0\n...\n38649.0\n34308.0\n42990.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01005\n\n\n5\n1007\nAL\nBibb County\n1.0\n1.0\n1.0\n1.0\n4204.0\n3324.0\n5084.0\n...\n48454.0\n42438.0\n54470.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01007\n\n\n6\n1009\nAL\nBlount County\n1.0\n1.0\n1.0\n1.0\n6992.0\n5516.0\n8468.0\n...\n56894.0\n52632.0\n61156.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01009\n\n\n\n\n5 rows × 35 columns\n\n\n\n\ncounties.shape\n\n(3143, 35)\n\n\n\ncounties.groupby(by='Stabr').count()\n\n\n\n\n\n\n\n\nFIPS_Code\nArea_name\nRural-urban_Continuum_Code_2003\nUrban_Influence_Code_2003\nRural-urban_Continuum_Code_2013\nUrban_Influence_Code_ 2013\nPOVALL_2021\nCI90LBALL_2021\nCI90UBALL_2021\nPCTPOVALL_2021\n...\nMEDHHINC_2021\nCI90LBINC_2021\nCI90UBINC_2021\nPOV04_2021\nCI90LB04_2021\nCI90UB04_2021\nPCTPOV04_2021\nCI90LB04P_2021\nCI90UB04P_2021\nfips_str\n\n\nStabr\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAK\n30\n30\n23\n23\n28\n28\n30\n30\n30\n30\n...\n30\n30\n30\n0\n0\n0\n0\n0\n0\n30\n\n\nAL\n67\n67\n67\n67\n67\n67\n67\n67\n67\n67\n...\n67\n67\n67\n0\n0\n0\n0\n0\n0\n67\n\n\nAR\n75\n75\n75\n75\n75\n75\n75\n75\n75\n75\n...\n75\n75\n75\n0\n0\n0\n0\n0\n0\n75\n\n\nAZ\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n...\n15\n15\n15\n0\n0\n0\n0\n0\n0\n15\n\n\nCA\n58\n58\n58\n58\n58\n58\n58\n58\n58\n58\n...\n58\n58\n58\n0\n0\n0\n0\n0\n0\n58\n\n\nCO\n64\n64\n64\n64\n64\n64\n64\n64\n64\n64\n...\n64\n64\n64\n0\n0\n0\n0\n0\n0\n64\n\n\nCT\n8\n8\n8\n8\n8\n8\n8\n8\n8\n8\n...\n8\n8\n8\n0\n0\n0\n0\n0\n0\n8\n\n\nDC\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n...\n1\n1\n1\n0\n0\n0\n0\n0\n0\n1\n\n\nDE\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n...\n3\n3\n3\n0\n0\n0\n0\n0\n0\n3\n\n\nFL\n67\n67\n67\n67\n67\n67\n67\n67\n67\n67\n...\n67\n67\n67\n0\n0\n0\n0\n0\n0\n67\n\n\nGA\n159\n159\n159\n159\n159\n159\n159\n159\n159\n159\n...\n159\n159\n159\n0\n0\n0\n0\n0\n0\n159\n\n\nHI\n5\n5\n5\n5\n5\n5\n4\n4\n4\n4\n...\n4\n4\n4\n0\n0\n0\n0\n0\n0\n5\n\n\nIA\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n...\n99\n99\n99\n0\n0\n0\n0\n0\n0\n99\n\n\nID\n44\n44\n44\n44\n44\n44\n44\n44\n44\n44\n...\n44\n44\n44\n0\n0\n0\n0\n0\n0\n44\n\n\nIL\n102\n102\n102\n102\n102\n102\n102\n102\n102\n102\n...\n102\n102\n102\n0\n0\n0\n0\n0\n0\n102\n\n\nIN\n92\n92\n92\n92\n92\n92\n92\n92\n92\n92\n...\n92\n92\n92\n0\n0\n0\n0\n0\n0\n92\n\n\nKS\n105\n105\n105\n105\n105\n105\n105\n105\n105\n105\n...\n105\n105\n105\n0\n0\n0\n0\n0\n0\n105\n\n\nKY\n120\n120\n120\n120\n120\n120\n120\n120\n120\n120\n...\n120\n120\n120\n0\n0\n0\n0\n0\n0\n120\n\n\nLA\n64\n64\n64\n64\n64\n64\n64\n64\n64\n64\n...\n64\n64\n64\n0\n0\n0\n0\n0\n0\n64\n\n\nMA\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n...\n14\n14\n14\n0\n0\n0\n0\n0\n0\n14\n\n\nMD\n24\n24\n24\n24\n24\n24\n24\n24\n24\n24\n...\n24\n24\n24\n0\n0\n0\n0\n0\n0\n24\n\n\nME\n16\n16\n16\n16\n16\n16\n16\n16\n16\n16\n...\n16\n16\n16\n0\n0\n0\n0\n0\n0\n16\n\n\nMI\n83\n83\n83\n83\n83\n83\n83\n83\n83\n83\n...\n83\n83\n83\n0\n0\n0\n0\n0\n0\n83\n\n\nMN\n87\n87\n87\n87\n87\n87\n87\n87\n87\n87\n...\n87\n87\n87\n0\n0\n0\n0\n0\n0\n87\n\n\nMO\n115\n115\n115\n115\n115\n115\n115\n115\n115\n115\n...\n115\n115\n115\n0\n0\n0\n0\n0\n0\n115\n\n\nMS\n82\n82\n82\n82\n82\n82\n82\n82\n82\n82\n...\n82\n82\n82\n0\n0\n0\n0\n0\n0\n82\n\n\nMT\n56\n56\n56\n56\n56\n56\n56\n56\n56\n56\n...\n56\n56\n56\n0\n0\n0\n0\n0\n0\n56\n\n\nNC\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n...\n100\n100\n100\n0\n0\n0\n0\n0\n0\n100\n\n\nND\n53\n53\n53\n53\n53\n53\n53\n53\n53\n53\n...\n53\n53\n53\n0\n0\n0\n0\n0\n0\n53\n\n\nNE\n93\n93\n93\n93\n93\n93\n93\n93\n93\n93\n...\n93\n93\n93\n0\n0\n0\n0\n0\n0\n93\n\n\nNH\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n...\n10\n10\n10\n0\n0\n0\n0\n0\n0\n10\n\n\nNJ\n21\n21\n21\n21\n21\n21\n21\n21\n21\n21\n...\n21\n21\n21\n0\n0\n0\n0\n0\n0\n21\n\n\nNM\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n...\n33\n33\n33\n0\n0\n0\n0\n0\n0\n33\n\n\nNV\n17\n17\n17\n17\n17\n17\n17\n17\n17\n17\n...\n17\n17\n17\n0\n0\n0\n0\n0\n0\n17\n\n\nNY\n62\n62\n62\n62\n62\n62\n62\n62\n62\n62\n...\n62\n62\n62\n0\n0\n0\n0\n0\n0\n62\n\n\nOH\n88\n88\n88\n88\n88\n88\n88\n88\n88\n88\n...\n88\n88\n88\n0\n0\n0\n0\n0\n0\n88\n\n\nOK\n77\n77\n77\n77\n77\n77\n77\n77\n77\n77\n...\n77\n77\n77\n0\n0\n0\n0\n0\n0\n77\n\n\nOR\n36\n36\n36\n36\n36\n36\n36\n36\n36\n36\n...\n36\n36\n36\n0\n0\n0\n0\n0\n0\n36\n\n\nPA\n67\n67\n67\n67\n67\n67\n67\n67\n67\n67\n...\n67\n67\n67\n0\n0\n0\n0\n0\n0\n67\n\n\nRI\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n...\n5\n5\n5\n0\n0\n0\n0\n0\n0\n5\n\n\nSC\n46\n46\n46\n46\n46\n46\n46\n46\n46\n46\n...\n46\n46\n46\n0\n0\n0\n0\n0\n0\n46\n\n\nSD\n66\n66\n66\n66\n66\n66\n66\n66\n66\n66\n...\n66\n66\n66\n0\n0\n0\n0\n0\n0\n66\n\n\nTN\n95\n95\n95\n95\n95\n95\n95\n95\n95\n95\n...\n95\n95\n95\n0\n0\n0\n0\n0\n0\n95\n\n\nTX\n254\n254\n254\n254\n254\n254\n254\n254\n254\n254\n...\n254\n254\n254\n0\n0\n0\n0\n0\n0\n254\n\n\nUT\n29\n29\n29\n29\n29\n29\n29\n29\n29\n29\n...\n29\n29\n29\n0\n0\n0\n0\n0\n0\n29\n\n\nVA\n133\n133\n133\n133\n133\n133\n133\n133\n133\n133\n...\n133\n133\n133\n0\n0\n0\n0\n0\n0\n133\n\n\nVT\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n...\n14\n14\n14\n0\n0\n0\n0\n0\n0\n14\n\n\nWA\n39\n39\n39\n39\n39\n39\n39\n39\n39\n39\n...\n39\n39\n39\n0\n0\n0\n0\n0\n0\n39\n\n\nWI\n72\n72\n72\n72\n72\n72\n72\n72\n72\n72\n...\n72\n72\n72\n0\n0\n0\n0\n0\n0\n72\n\n\nWV\n55\n55\n55\n55\n55\n55\n55\n55\n55\n55\n...\n55\n55\n55\n0\n0\n0\n0\n0\n0\n55\n\n\nWY\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n...\n23\n23\n23\n0\n0\n0\n0\n0\n0\n23\n\n\n\n\n51 rows × 34 columns\n\n\n\n\ncounties.columns\n\nIndex(['FIPS_Code', 'Stabr', 'Area_name', 'Rural-urban_Continuum_Code_2003',\n       'Urban_Influence_Code_2003', 'Rural-urban_Continuum_Code_2013',\n       'Urban_Influence_Code_ 2013', 'POVALL_2021', 'CI90LBALL_2021',\n       'CI90UBALL_2021', 'PCTPOVALL_2021', 'CI90LBALLP_2021',\n       'CI90UBALLP_2021', 'POV017_2021', 'CI90LB017_2021', 'CI90UB017_2021',\n       'PCTPOV017_2021', 'CI90LB017P_2021', 'CI90UB017P_2021', 'POV517_2021',\n       'CI90LB517_2021', 'CI90UB517_2021', 'PCTPOV517_2021', 'CI90LB517P_2021',\n       'CI90UB517P_2021', 'MEDHHINC_2021', 'CI90LBINC_2021', 'CI90UBINC_2021',\n       'POV04_2021', 'CI90LB04_2021', 'CI90UB04_2021', 'PCTPOV04_2021',\n       'CI90LB04P_2021', 'CI90UB04P_2021', 'fips_str'],\n      dtype='object')\n\n\n\ncounties[['Stabr', 'Area_name', 'PCTPOVALL_2021']]\n\n\n\n\n\n\n\n\nStabr\nArea_name\nPCTPOVALL_2021\n\n\n\n\n2\nAL\nAutauga County\n10.7\n\n\n3\nAL\nBaldwin County\n10.8\n\n\n4\nAL\nBarbour County\n23.0\n\n\n5\nAL\nBibb County\n20.6\n\n\n6\nAL\nBlount County\n12.0\n\n\n...\n...\n...\n...\n\n\n3190\nWY\nSweetwater County\n9.2\n\n\n3191\nWY\nTeton County\n5.9\n\n\n3192\nWY\nUinta County\n9.4\n\n\n3193\nWY\nWashakie County\n10.2\n\n\n3194\nWY\nWeston County\n10.4\n\n\n\n\n3143 rows × 3 columns\n\n\n\n\ncounties[['Stabr', 'PCTPOVALL_2021']].groupby(by='Stabr').mean()\n\n\n\n\n\n\n\n\nPCTPOVALL_2021\n\n\nStabr\n\n\n\n\n\nAK\n13.750000\n\n\nAL\n19.455224\n\n\nAR\n18.750667\n\n\nAZ\n17.273333\n\n\nCA\n13.631034\n\n\nCO\n12.567188\n\n\nCT\n9.812500\n\n\nDC\n16.800000\n\n\nDE\n11.700000\n\n\nFL\n15.588060\n\n\nGA\n18.422642\n\n\nHI\n11.825000\n\n\nIA\n10.714141\n\n\nID\n11.970455\n\n\nIL\n12.804902\n\n\nIN\n11.515217\n\n\nKS\n11.903810\n\n\nKY\n19.189167\n\n\nLA\n21.618750\n\n\nMA\n10.278571\n\n\nMD\n10.991667\n\n\nME\n12.318750\n\n\nMI\n13.059036\n\n\nMN\n10.154023\n\n\nMO\n14.923478\n\n\nMS\n22.253659\n\n\nMT\n13.532143\n\n\nNC\n15.931000\n\n\nND\n12.286792\n\n\nNE\n10.847312\n\n\nNH\n8.510000\n\n\nNJ\n9.880952\n\n\nNM\n20.169697\n\n\nNV\n12.111765\n\n\nNY\n12.964516\n\n\nOH\n12.935227\n\n\nOK\n16.790909\n\n\nOR\n13.936111\n\n\nPA\n12.043284\n\n\nRI\n9.760000\n\n\nSC\n18.200000\n\n\nSD\n14.921212\n\n\nTN\n15.463158\n\n\nTX\n15.837008\n\n\nUT\n10.206897\n\n\nVA\n13.260902\n\n\nVT\n10.435714\n\n\nWA\n12.215385\n\n\nWI\n10.695833\n\n\nWV\n18.060000\n\n\nWY\n10.773913\n\n\n\n\n\n\n\n\ncounties[['Stabr', 'PCTPOVALL_2021']].groupby(by='Stabr').max()\n\n\n\n\n\n\n\n\nPCTPOVALL_2021\n\n\nStabr\n\n\n\n\n\nAK\n30.4\n\n\nAL\n35.1\n\n\nAR\n35.7\n\n\nAZ\n28.4\n\n\nCA\n21.9\n\n\nCO\n37.8\n\n\nCT\n12.0\n\n\nDC\n16.8\n\n\nDE\n12.2\n\n\nFL\n26.3\n\n\nGA\n34.0\n\n\nHI\n14.7\n\n\nIA\n17.9\n\n\nID\n17.9\n\n\nIL\n22.3\n\n\nIN\n21.1\n\n\nKS\n21.3\n\n\nKY\n40.5\n\n\nLA\n39.9\n\n\nMA\n18.5\n\n\nMD\n23.6\n\n\nME\n18.2\n\n\nMI\n20.7\n\n\nMN\n18.7\n\n\nMO\n23.9\n\n\nMS\n43.9\n\n\nMT\n25.7\n\n\nNC\n27.9\n\n\nND\n42.8\n\n\nNE\n19.3\n\n\nNH\n12.5\n\n\nNJ\n15.9\n\n\nNM\n30.3\n\n\nNV\n18.3\n\n\nNY\n26.4\n\n\nOH\n23.9\n\n\nOK\n27.8\n\n\nOR\n20.0\n\n\nPA\n22.3\n\n\nRI\n14.3\n\n\nSC\n35.4\n\n\nSD\n43.5\n\n\nTN\n33.4\n\n\nTX\n34.3\n\n\nUT\n26.8\n\n\nVA\n25.6\n\n\nVT\n14.4\n\n\nWA\n18.1\n\n\nWI\n24.2\n\n\nWV\n31.7\n\n\nWY\n17.7"
  },
  {
    "objectID": "week-03/0201_pandas_2.html#reading-external-files-xlsx",
    "href": "week-03/0201_pandas_2.html#reading-external-files-xlsx",
    "title": "Pandas Part II",
    "section": "",
    "text": "import requests\nfrom openpyxl import load_workbook\n\n\nurl = 'https://www.ers.usda.gov/webdocs/DataFiles/48747/PovertyEstimates.xlsx?v=9655.3'\noutput_file = 'PovertyEstimates.xlsx'  # Name of the local copy\n\n\nresponse = requests.get(url)\n\n\nif response.status_code == 200:\n    with open(output_file, 'wb') as file:\n        file.write(response.content)\n    print(f\"File '{output_file}' downloaded successfully.\")\n\n    # Optional: Check the content of the downloaded XLSX file\n    wb = load_workbook(output_file)\n    sheets = wb.sheetnames\n    print(f\"Excel file contains the following sheets: {sheets}\")\n    # You can now work with the Excel file as needed\n    \nelse:\n    print(f\"Failed to download the file. Status code: {response.status_code}\")\n\nFile 'PovertyEstimates.xlsx' downloaded successfully.\nExcel file contains the following sheets: ['PovertyEstimates', 'Variable Descriptions']\n\n\n\nimport pandas as pd\nfile_path = 'PovertyEstimates.xlsx'\nxls = pd.ExcelFile(file_path)\n\n\nxls.sheet_names\n\n['PovertyEstimates', 'Variable Descriptions']\n\n\n\nvar_df = pd.read_excel(file_path, 'Variable Descriptions')\n\n\nvar_df.head()\n\n\n\n\n\n\n\n\nColumn variable name\nDescription\n\n\n\n\n0\nFIPS_Code\nState-county Federal Information Processing St...\n\n\n1\nStabr\nState abbreviation\n\n\n2\nArea_name\nArea name\n\n\n3\nRural-urban_Continuum_Code_2003\nRural-Urban Continuum Code, 2003\n\n\n4\nUrban_Influence_Code_2003\nUrban Influence Code, 2003\n\n\n\n\n\n\n\n\nvar_df.shape\n\n(34, 2)\n\n\n\nvar_df\n\n\n\n\n\n\n\n\nColumn variable name\nDescription\n\n\n\n\n0\nFIPS_Code\nState-county Federal Information Processing St...\n\n\n1\nStabr\nState abbreviation\n\n\n2\nArea_name\nArea name\n\n\n3\nRural-urban_Continuum_Code_2003\nRural-Urban Continuum Code, 2003\n\n\n4\nUrban_Influence_Code_2003\nUrban Influence Code, 2003\n\n\n5\nRural-urban_Continuum_Code_2013\nRural-Urban Continuum Code, 2013\n\n\n6\nUrban_Influence_Code_ 2013\nUrban Influence Code, 2013\n\n\n7\nPOVALL_2021\nEstimate of people of all ages in poverty 2021\n\n\n8\nCI90LBALL_2021\n90 percent confidence interval lower bound of ...\n\n\n9\nCI90UBALL_2021\n90 percent confidence interval upper bound of ...\n\n\n10\nPCTPOVALL_2021\nEstimated percent of people of all ages in pov...\n\n\n11\nCI90LBALLP_2021\n90 percent confidence interval lower bound of ...\n\n\n12\nCI90UBALLP_2021\n90 percent confidence interval upper bound of ...\n\n\n13\nPOV017_2021\nEstimate of people age 0-17 in poverty 2021\n\n\n14\nCI90LB017_2021\n90 percent confidence interval lower bound of ...\n\n\n15\nCI90UB017_2021\n90 percent confidence interval upper bound of ...\n\n\n16\nPCTPOV017_2021\nEstimated percent of people age 0-17 in povert...\n\n\n17\nCI90LB017P_2021\n90 percent confidence interval lower bound of ...\n\n\n18\nCI90UB017P_2021\n90 percent confidence interval upper bound of ...\n\n\n19\nPOV517_2021\nEstimate of related children age 5-17 in famil...\n\n\n20\nCI90LB517_2021\n90 percent confidence interval lower bound of ...\n\n\n21\nCI90UB517_2021\n90 percent confidence interval upper bound of ...\n\n\n22\nPCTPOV517_2021\nEstimated percent of related children age 5-17...\n\n\n23\nCI90LB517P_2021\n90 percent confidence interval lower bound of ...\n\n\n24\nCI90UB517P_2021\n90 percent confidence interval upper bound of ...\n\n\n25\nMEDHHINC_2021\nEstimate of median household income 2021\n\n\n26\nCI90LBINC_2021\n90 percent confidence interval lower bound of ...\n\n\n27\nCI90UBINC_2021\n90 percent confidence interval upper bound of ...\n\n\n28\nPOV04_2021\nEstimate of children ages 0 to 4 in poverty 20...\n\n\n29\nCI90LB04_2021\n90 percent confidence interval lower bound of ...\n\n\n30\nCI90UB04_2021\n90 percent confidence interval upper bound of ...\n\n\n31\nPCTPOV04_2021\nEstimated percent of children ages 0 to 4 in p...\n\n\n32\nCI90LB04P_2021\n90 percent confidence interval lower bound of ...\n\n\n33\nCI90UB04P_2021\n90 percent confidence interval upper bound of ...\n\n\n\n\n\n\n\n\ndf = pd.read_excel(file_path, 'PovertyEstimates')\n\n\ndf.head()\n\n\n\n\n\n\n\n\nPoverty estimates for U.S., States, and counties, 2021\nUnnamed: 1\nUnnamed: 2\nUnnamed: 3\nUnnamed: 4\nUnnamed: 5\nUnnamed: 6\nUnnamed: 7\nUnnamed: 8\nUnnamed: 9\n...\nUnnamed: 24\nUnnamed: 25\nUnnamed: 26\nUnnamed: 27\nUnnamed: 28\nUnnamed: 29\nUnnamed: 30\nUnnamed: 31\nUnnamed: 32\nUnnamed: 33\n\n\n\n\n0\nSource: U.S. Department of Commerce, Bureau of...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1\nFor definitions of rural classifications, see ...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n2\nThis table was prepared by USDA, Economic Rese...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n3\nFIPS_Code\nStabr\nArea_name\nRural-urban_Continuum_Code_2003\nUrban_Influence_Code_2003\nRural-urban_Continuum_Code_2013\nUrban_Influence_Code_ 2013\nPOVALL_2021\nCI90LBALL_2021\nCI90UBALL_2021\n...\nCI90UB517P_2021\nMEDHHINC_2021\nCI90LBINC_2021\nCI90UBINC_2021\nPOV04_2021\nCI90LB04_2021\nCI90UB04_2021\nPCTPOV04_2021\nCI90LB04P_2021\nCI90UB04P_2021\n\n\n4\n00000\nUS\nUnited States\nNaN\nNaN\nNaN\nNaN\n41393176\n41149497\n41636855\n...\n16.3\n69717\n69583\n69851\n3349149\n3299669\n3398629\n18.3\n18\n18.6\n\n\n\n\n5 rows × 34 columns\n\n\n\n\ndf = pd.read_excel(file_path, 'PovertyEstimates', skiprows=4)\n\n\ndf.head()\n\n\n\n\n\n\n\n\nFIPS_Code\nStabr\nArea_name\nRural-urban_Continuum_Code_2003\nUrban_Influence_Code_2003\nRural-urban_Continuum_Code_2013\nUrban_Influence_Code_ 2013\nPOVALL_2021\nCI90LBALL_2021\nCI90UBALL_2021\n...\nCI90UB517P_2021\nMEDHHINC_2021\nCI90LBINC_2021\nCI90UBINC_2021\nPOV04_2021\nCI90LB04_2021\nCI90UB04_2021\nPCTPOV04_2021\nCI90LB04P_2021\nCI90UB04P_2021\n\n\n\n\n0\n0\nUS\nUnited States\nNaN\nNaN\nNaN\nNaN\n41393176.0\n41149497.0\n41636855.0\n...\n16.3\n69717.0\n69583.0\n69851.0\n3349149.0\n3299669.0\n3398629.0\n18.3\n18.0\n18.6\n\n\n1\n1000\nAL\nAlabama\nNaN\nNaN\nNaN\nNaN\n800848.0\n782169.0\n819527.0\n...\n22.5\n53990.0\n53218.0\n54762.0\n71220.0\n66888.0\n75552.0\n25.1\n23.6\n26.6\n\n\n2\n1001\nAL\nAutauga County\n2.0\n2.0\n2.0\n2.0\n6296.0\n4772.0\n7820.0\n...\n20.4\n66444.0\n60061.0\n72827.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n3\n1003\nAL\nBaldwin County\n4.0\n5.0\n3.0\n2.0\n25526.0\n21599.0\n29453.0\n...\n18.5\n65658.0\n60723.0\n70593.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n4\n1005\nAL\nBarbour County\n6.0\n6.0\n6.0\n6.0\n5089.0\n3773.0\n6405.0\n...\n44.6\n38649.0\n34308.0\n42990.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n5 rows × 34 columns\n\n\n\n\ndf.shape\n\n(3195, 34)\n\n\n\ndf.dtypes\n\nFIPS_Code                            int64\nStabr                               object\nArea_name                           object\nRural-urban_Continuum_Code_2003    float64\nUrban_Influence_Code_2003          float64\nRural-urban_Continuum_Code_2013    float64\nUrban_Influence_Code_ 2013         float64\nPOVALL_2021                        float64\nCI90LBALL_2021                     float64\nCI90UBALL_2021                     float64\nPCTPOVALL_2021                     float64\nCI90LBALLP_2021                    float64\nCI90UBALLP_2021                    float64\nPOV017_2021                        float64\nCI90LB017_2021                     float64\nCI90UB017_2021                     float64\nPCTPOV017_2021                     float64\nCI90LB017P_2021                    float64\nCI90UB017P_2021                    float64\nPOV517_2021                        float64\nCI90LB517_2021                     float64\nCI90UB517_2021                     float64\nPCTPOV517_2021                     float64\nCI90LB517P_2021                    float64\nCI90UB517P_2021                    float64\nMEDHHINC_2021                      float64\nCI90LBINC_2021                     float64\nCI90UBINC_2021                     float64\nPOV04_2021                         float64\nCI90LB04_2021                      float64\nCI90UB04_2021                      float64\nPCTPOV04_2021                      float64\nCI90LB04P_2021                     float64\nCI90UB04P_2021                     float64\ndtype: object\n\n\n\ndf['fips_str'] = df.FIPS_Code.astype(str).str.zfill(5)\n\n\ndf.fips_str\n\n0       00000\n1       01000\n2       01001\n3       01003\n4       01005\n        ...  \n3190    56037\n3191    56039\n3192    56041\n3193    56043\n3194    56045\nName: fips_str, Length: 3195, dtype: object\n\n\n\ndf[['FIPS_Code', 'fips_str']]\n\n\n\n\n\n\n\n\nFIPS_Code\nfips_str\n\n\n\n\n0\n0\n00000\n\n\n1\n1000\n01000\n\n\n2\n1001\n01001\n\n\n3\n1003\n01003\n\n\n4\n1005\n01005\n\n\n...\n...\n...\n\n\n3190\n56037\n56037\n\n\n3191\n56039\n56039\n\n\n3192\n56041\n56041\n\n\n3193\n56043\n56043\n\n\n3194\n56045\n56045\n\n\n\n\n3195 rows × 2 columns\n\n\n\n\ndf.head()\n\n\n\n\n\n\n\n\nFIPS_Code\nStabr\nArea_name\nRural-urban_Continuum_Code_2003\nUrban_Influence_Code_2003\nRural-urban_Continuum_Code_2013\nUrban_Influence_Code_ 2013\nPOVALL_2021\nCI90LBALL_2021\nCI90UBALL_2021\n...\nMEDHHINC_2021\nCI90LBINC_2021\nCI90UBINC_2021\nPOV04_2021\nCI90LB04_2021\nCI90UB04_2021\nPCTPOV04_2021\nCI90LB04P_2021\nCI90UB04P_2021\nfips_str\n\n\n\n\n0\n0\nUS\nUnited States\nNaN\nNaN\nNaN\nNaN\n41393176.0\n41149497.0\n41636855.0\n...\n69717.0\n69583.0\n69851.0\n3349149.0\n3299669.0\n3398629.0\n18.3\n18.0\n18.6\n00000\n\n\n1\n1000\nAL\nAlabama\nNaN\nNaN\nNaN\nNaN\n800848.0\n782169.0\n819527.0\n...\n53990.0\n53218.0\n54762.0\n71220.0\n66888.0\n75552.0\n25.1\n23.6\n26.6\n01000\n\n\n2\n1001\nAL\nAutauga County\n2.0\n2.0\n2.0\n2.0\n6296.0\n4772.0\n7820.0\n...\n66444.0\n60061.0\n72827.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01001\n\n\n3\n1003\nAL\nBaldwin County\n4.0\n5.0\n3.0\n2.0\n25526.0\n21599.0\n29453.0\n...\n65658.0\n60723.0\n70593.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01003\n\n\n4\n1005\nAL\nBarbour County\n6.0\n6.0\n6.0\n6.0\n5089.0\n3773.0\n6405.0\n...\n38649.0\n34308.0\n42990.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01005\n\n\n\n\n5 rows × 35 columns\n\n\n\n\ndf[df.Stabr=='AL']\n\n\n\n\n\n\n\n\nFIPS_Code\nStabr\nArea_name\nRural-urban_Continuum_Code_2003\nUrban_Influence_Code_2003\nRural-urban_Continuum_Code_2013\nUrban_Influence_Code_ 2013\nPOVALL_2021\nCI90LBALL_2021\nCI90UBALL_2021\n...\nMEDHHINC_2021\nCI90LBINC_2021\nCI90UBINC_2021\nPOV04_2021\nCI90LB04_2021\nCI90UB04_2021\nPCTPOV04_2021\nCI90LB04P_2021\nCI90UB04P_2021\nfips_str\n\n\n\n\n1\n1000\nAL\nAlabama\nNaN\nNaN\nNaN\nNaN\n800848.0\n782169.0\n819527.0\n...\n53990.0\n53218.0\n54762.0\n71220.0\n66888.0\n75552.0\n25.1\n23.6\n26.6\n01000\n\n\n2\n1001\nAL\nAutauga County\n2.0\n2.0\n2.0\n2.0\n6296.0\n4772.0\n7820.0\n...\n66444.0\n60061.0\n72827.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01001\n\n\n3\n1003\nAL\nBaldwin County\n4.0\n5.0\n3.0\n2.0\n25526.0\n21599.0\n29453.0\n...\n65658.0\n60723.0\n70593.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01003\n\n\n4\n1005\nAL\nBarbour County\n6.0\n6.0\n6.0\n6.0\n5089.0\n3773.0\n6405.0\n...\n38649.0\n34308.0\n42990.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01005\n\n\n5\n1007\nAL\nBibb County\n1.0\n1.0\n1.0\n1.0\n4204.0\n3324.0\n5084.0\n...\n48454.0\n42438.0\n54470.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01007\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n64\n1125\nAL\nTuscaloosa County\n3.0\n2.0\n3.0\n2.0\n31735.0\n26867.0\n36603.0\n...\n56274.0\n52677.0\n59871.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01125\n\n\n65\n1127\nAL\nWalker County\n1.0\n1.0\n1.0\n1.0\n12877.0\n10967.0\n14787.0\n...\n46343.0\n41443.0\n51243.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01127\n\n\n66\n1129\nAL\nWashington County\n8.0\n7.0\n8.0\n7.0\n3091.0\n2505.0\n3677.0\n...\n49795.0\n43655.0\n55935.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01129\n\n\n67\n1131\nAL\nWilcox County\n8.0\n7.0\n9.0\n10.0\n3340.0\n2578.0\n4102.0\n...\n30071.0\n26647.0\n33495.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01131\n\n\n68\n1133\nAL\nWinston County\n6.0\n4.0\n6.0\n4.0\n4455.0\n3624.0\n5286.0\n...\n47176.0\n41809.0\n52543.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01133\n\n\n\n\n68 rows × 35 columns\n\n\n\n\ndf[df.Stabr=='CA']\n\n\n\n\n\n\n\n\nFIPS_Code\nStabr\nArea_name\nRural-urban_Continuum_Code_2003\nUrban_Influence_Code_2003\nRural-urban_Continuum_Code_2013\nUrban_Influence_Code_ 2013\nPOVALL_2021\nCI90LBALL_2021\nCI90UBALL_2021\n...\nMEDHHINC_2021\nCI90LBINC_2021\nCI90UBINC_2021\nPOV04_2021\nCI90LB04_2021\nCI90UB04_2021\nPCTPOV04_2021\nCI90LB04P_2021\nCI90UB04P_2021\nfips_str\n\n\n\n\n192\n6000\nCA\nCalifornia\nNaN\nNaN\nNaN\nNaN\n4742405.0\n4689999.0\n4794811.0\n...\n84831.0\n84292.0\n85370.0\n339169.0\n326796.0\n351542.0\n15.8\n15.2\n16.4\n06000\n\n\n193\n6001\nCA\nAlameda County\n1.0\n1.0\n1.0\n1.0\n152654.0\n140318.0\n164990.0\n...\n108971.0\n106170.0\n111772.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06001\n\n\n194\n6003\nCA\nAlpine County\n8.0\n4.0\n8.0\n4.0\n194.0\n148.0\n240.0\n...\n87570.0\n80899.0\n94241.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06003\n\n\n195\n6005\nCA\nAmador County\n6.0\n4.0\n6.0\n4.0\n4104.0\n3139.0\n5069.0\n...\n68159.0\n61507.0\n74811.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06005\n\n\n196\n6007\nCA\nButte County\n3.0\n2.0\n3.0\n2.0\n33874.0\n30026.0\n37722.0\n...\n62982.0\n60248.0\n65716.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06007\n\n\n197\n6009\nCA\nCalaveras County\n6.0\n6.0\n6.0\n6.0\n6198.0\n5078.0\n7318.0\n...\n68298.0\n61082.0\n75514.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06009\n\n\n198\n6011\nCA\nColusa County\n6.0\n4.0\n6.0\n4.0\n2466.0\n1901.0\n3031.0\n...\n60725.0\n53787.0\n67663.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06011\n\n\n199\n6013\nCA\nContra Costa County\n1.0\n1.0\n1.0\n1.0\n100948.0\n92022.0\n109874.0\n...\n110595.0\n107542.0\n113648.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06013\n\n\n200\n6015\nCA\nDel Norte County\n7.0\n8.0\n7.0\n8.0\n5368.0\n4316.0\n6420.0\n...\n48108.0\n42824.0\n53392.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06015\n\n\n201\n6017\nCA\nEl Dorado County\n1.0\n1.0\n1.0\n1.0\n16839.0\n14045.0\n19633.0\n...\n87689.0\n80889.0\n94489.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06017\n\n\n202\n6019\nCA\nFresno County\n2.0\n2.0\n2.0\n2.0\n193449.0\n179983.0\n206915.0\n...\n63140.0\n61332.0\n64948.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06019\n\n\n203\n6021\nCA\nGlenn County\n6.0\n6.0\n6.0\n6.0\n4397.0\n3560.0\n5234.0\n...\n56741.0\n50379.0\n63103.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06021\n\n\n204\n6023\nCA\nHumboldt County\n5.0\n8.0\n5.0\n8.0\n25781.0\n22760.0\n28802.0\n...\n53924.0\n49868.0\n57980.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06023\n\n\n205\n6025\nCA\nImperial County\n3.0\n2.0\n3.0\n2.0\n29738.0\n24540.0\n34936.0\n...\n50970.0\n48099.0\n53841.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06025\n\n\n206\n6027\nCA\nInyo County\n7.0\n8.0\n7.0\n11.0\n2382.0\n1903.0\n2861.0\n...\n62381.0\n55355.0\n69407.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06027\n\n\n207\n6029\nCA\nKern County\n2.0\n2.0\n2.0\n2.0\n164169.0\n149799.0\n178539.0\n...\n57926.0\n54723.0\n61129.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06029\n\n\n208\n6031\nCA\nKings County\n3.0\n2.0\n3.0\n2.0\n24295.0\n20420.0\n28170.0\n...\n60810.0\n57040.0\n64580.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06031\n\n\n209\n6033\nCA\nLake County\n4.0\n5.0\n4.0\n5.0\n11196.0\n8683.0\n13709.0\n...\n55801.0\n51767.0\n59835.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06033\n\n\n210\n6035\nCA\nLassen County\n6.0\n6.0\n7.0\n8.0\n4805.0\n3867.0\n5743.0\n...\n56923.0\n51387.0\n62459.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06035\n\n\n211\n6037\nCA\nLos Angeles County\n1.0\n1.0\n1.0\n1.0\n1365808.0\n1324191.0\n1407425.0\n...\n77356.0\n76664.0\n78048.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06037\n\n\n212\n6039\nCA\nMadera County\n3.0\n2.0\n3.0\n2.0\n31044.0\n27214.0\n34874.0\n...\n60241.0\n54963.0\n65519.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06039\n\n\n213\n6041\nCA\nMarin County\n1.0\n1.0\n1.0\n1.0\n19734.0\n16455.0\n23013.0\n...\n118472.0\n110912.0\n126032.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06041\n\n\n214\n6043\nCA\nMariposa County\n8.0\n7.0\n8.0\n7.0\n2387.0\n1808.0\n2966.0\n...\n60377.0\n54124.0\n66630.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06043\n\n\n215\n6045\nCA\nMendocino County\n4.0\n5.0\n4.0\n5.0\n14539.0\n11887.0\n17191.0\n...\n57516.0\n51658.0\n63374.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06045\n\n\n216\n6047\nCA\nMerced County\n3.0\n2.0\n2.0\n2.0\n61359.0\n55535.0\n67183.0\n...\n54703.0\n51436.0\n57970.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06047\n\n\n217\n6049\nCA\nModoc County\n6.0\n6.0\n6.0\n6.0\n1688.0\n1307.0\n2069.0\n...\n49273.0\n44364.0\n54182.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06049\n\n\n218\n6051\nCA\nMono County\n7.0\n9.0\n7.0\n11.0\n1278.0\n973.0\n1583.0\n...\n70945.0\n62471.0\n79419.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06051\n\n\n219\n6053\nCA\nMonterey County\n2.0\n2.0\n2.0\n2.0\n50725.0\n43455.0\n57995.0\n...\n81404.0\n79343.0\n83465.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06053\n\n\n220\n6055\nCA\nNapa County\n3.0\n2.0\n3.0\n2.0\n11814.0\n9909.0\n13719.0\n...\n94127.0\n88895.0\n99359.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06055\n\n\n221\n6057\nCA\nNevada County\n4.0\n3.0\n4.0\n3.0\n12141.0\n10287.0\n13995.0\n...\n77220.0\n70966.0\n83474.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06057\n\n\n222\n6059\nCA\nOrange County\n1.0\n1.0\n1.0\n1.0\n309402.0\n290860.0\n327944.0\n...\n100210.0\n98704.0\n101716.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06059\n\n\n223\n6061\nCA\nPlacer County\n1.0\n1.0\n1.0\n1.0\n26816.0\n23108.0\n30524.0\n...\n103588.0\n100310.0\n106866.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06061\n\n\n224\n6063\nCA\nPlumas County\n7.0\n12.0\n7.0\n12.0\n2545.0\n1946.0\n3144.0\n...\n58154.0\n52309.0\n63999.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06063\n\n\n225\n6065\nCA\nRiverside County\n1.0\n1.0\n1.0\n1.0\n282068.0\n261203.0\n302933.0\n...\n78690.0\n77268.0\n80112.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06065\n\n\n226\n6067\nCA\nSacramento County\n1.0\n1.0\n1.0\n1.0\n203413.0\n188841.0\n217985.0\n...\n79611.0\n77617.0\n81605.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06067\n\n\n227\n6069\nCA\nSan Benito County\n1.0\n1.0\n1.0\n1.0\n5899.0\n4633.0\n7165.0\n...\n95187.0\n87067.0\n103307.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06069\n\n\n228\n6071\nCA\nSan Bernardino County\n1.0\n1.0\n1.0\n1.0\n285474.0\n263941.0\n307007.0\n...\n74218.0\n72378.0\n76058.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06071\n\n\n229\n6073\nCA\nSan Diego County\n1.0\n1.0\n1.0\n1.0\n340522.0\n320076.0\n360968.0\n...\n90756.0\n89622.0\n91890.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06073\n\n\n230\n6075\nCA\nSan Francisco County\n1.0\n1.0\n1.0\n1.0\n90898.0\n83583.0\n98213.0\n...\n119776.0\n115563.0\n123989.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06075\n\n\n231\n6077\nCA\nSan Joaquin County\n2.0\n2.0\n2.0\n2.0\n95382.0\n83774.0\n106990.0\n...\n79598.0\n77211.0\n81985.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06077\n\n\n232\n6079\nCA\nSan Luis Obispo County\n3.0\n2.0\n2.0\n2.0\n35120.0\n31122.0\n39118.0\n...\n79688.0\n75932.0\n83444.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06079\n\n\n233\n6081\nCA\nSan Mateo County\n1.0\n1.0\n1.0\n1.0\n49900.0\n43747.0\n56053.0\n...\n131151.0\n127714.0\n134588.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06081\n\n\n234\n6083\nCA\nSanta Barbara County\n2.0\n2.0\n2.0\n2.0\n65029.0\n59277.0\n70781.0\n...\n83185.0\n79921.0\n86449.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06083\n\n\n235\n6085\nCA\nSanta Clara County\n1.0\n1.0\n1.0\n1.0\n128955.0\n117767.0\n140143.0\n...\n141161.0\n138832.0\n143490.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06085\n\n\n236\n6087\nCA\nSanta Cruz County\n2.0\n2.0\n2.0\n2.0\n27132.0\n22485.0\n31779.0\n...\n90370.0\n84679.0\n96061.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06087\n\n\n237\n6089\nCA\nShasta County\n3.0\n2.0\n3.0\n2.0\n25141.0\n21256.0\n29026.0\n...\n60187.0\n56764.0\n63610.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06089\n\n\n238\n6091\nCA\nSierra County\n8.0\n7.0\n8.0\n7.0\n398.0\n300.0\n496.0\n...\n60659.0\n53239.0\n68079.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06091\n\n\n239\n6093\nCA\nSiskiyou County\n7.0\n11.0\n6.0\n6.0\n7301.0\n6005.0\n8597.0\n...\n50069.0\n45178.0\n54960.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06093\n\n\n240\n6095\nCA\nSolano County\n2.0\n2.0\n2.0\n2.0\n44037.0\n37963.0\n50111.0\n...\n87348.0\n84016.0\n90680.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06095\n\n\n241\n6097\nCA\nSonoma County\n2.0\n2.0\n2.0\n2.0\n43661.0\n38372.0\n48950.0\n...\n92999.0\n89380.0\n96618.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06097\n\n\n242\n6099\nCA\nStanislaus County\n2.0\n2.0\n2.0\n2.0\n76921.0\n67090.0\n86752.0\n...\n73151.0\n70938.0\n75364.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06099\n\n\n243\n6101\nCA\nSutter County\n3.0\n2.0\n3.0\n2.0\n15224.0\n12930.0\n17518.0\n...\n63246.0\n58462.0\n68030.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06101\n\n\n244\n6103\nCA\nTehama County\n4.0\n5.0\n4.0\n5.0\n10107.0\n8151.0\n12063.0\n...\n53654.0\n47435.0\n59873.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06103\n\n\n245\n6105\nCA\nTrinity County\n8.0\n6.0\n8.0\n6.0\n3010.0\n2307.0\n3713.0\n...\n45508.0\n39960.0\n51056.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06105\n\n\n246\n6107\nCA\nTulare County\n2.0\n2.0\n2.0\n2.0\n88367.0\n78219.0\n98515.0\n...\n57398.0\n54157.0\n60639.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06107\n\n\n247\n6109\nCA\nTuolumne County\n4.0\n5.0\n4.0\n5.0\n6848.0\n5388.0\n8308.0\n...\n61396.0\n54884.0\n67908.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06109\n\n\n248\n6111\nCA\nVentura County\n2.0\n2.0\n2.0\n2.0\n73968.0\n66079.0\n81857.0\n...\n95819.0\n93275.0\n98363.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06111\n\n\n249\n6113\nCA\nYolo County\n1.0\n1.0\n1.0\n1.0\n30708.0\n27369.0\n34047.0\n...\n76247.0\n71083.0\n81411.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06113\n\n\n250\n6115\nCA\nYuba County\n3.0\n2.0\n3.0\n2.0\n12784.0\n10305.0\n15263.0\n...\n60764.0\n56731.0\n64797.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n06115\n\n\n\n\n59 rows × 35 columns\n\n\n\n\nstates = df[df.fips_str.str.endswith('000')]\n\n\nstates\n\n\n\n\n\n\n\n\nFIPS_Code\nStabr\nArea_name\nRural-urban_Continuum_Code_2003\nUrban_Influence_Code_2003\nRural-urban_Continuum_Code_2013\nUrban_Influence_Code_ 2013\nPOVALL_2021\nCI90LBALL_2021\nCI90UBALL_2021\n...\nMEDHHINC_2021\nCI90LBINC_2021\nCI90UBINC_2021\nPOV04_2021\nCI90LB04_2021\nCI90UB04_2021\nPCTPOV04_2021\nCI90LB04P_2021\nCI90UB04P_2021\nfips_str\n\n\n\n\n0\n0\nUS\nUnited States\nNaN\nNaN\nNaN\nNaN\n41393176.0\n41149497.0\n41636855.0\n...\n69717.0\n69583.0\n69851.0\n3349149.0\n3299669.0\n3398629.0\n18.3\n18.0\n18.6\n00000\n\n\n1\n1000\nAL\nAlabama\nNaN\nNaN\nNaN\nNaN\n800848.0\n782169.0\n819527.0\n...\n53990.0\n53218.0\n54762.0\n71220.0\n66888.0\n75552.0\n25.1\n23.6\n26.6\n01000\n\n\n69\n2000\nAK\nAlaska\nNaN\nNaN\nNaN\nNaN\n77736.0\n74178.0\n81294.0\n...\n78437.0\n76456.0\n80418.0\n6633.0\n5796.0\n7470.0\n14.1\n12.3\n15.9\n02000\n\n\n100\n4000\nAZ\nArizona\nNaN\nNaN\nNaN\nNaN\n919680.0\n900349.0\n939011.0\n...\n68967.0\n68287.0\n69647.0\n76649.0\n71494.0\n81804.0\n19.7\n18.4\n21.0\n04000\n\n\n116\n5000\nAR\nArkansas\nNaN\nNaN\nNaN\nNaN\n471195.0\n458260.0\n484130.0\n...\n52577.0\n51595.0\n53559.0\n45096.0\n42186.0\n48006.0\n25.5\n23.9\n27.1\n05000\n\n\n192\n6000\nCA\nCalifornia\nNaN\nNaN\nNaN\nNaN\n4742405.0\n4689999.0\n4794811.0\n...\n84831.0\n84292.0\n85370.0\n339169.0\n326796.0\n351542.0\n15.8\n15.2\n16.4\n06000\n\n\n251\n8000\nCO\nColorado\nNaN\nNaN\nNaN\nNaN\n554126.0\n540035.0\n568217.0\n...\n82228.0\n81447.0\n83009.0\n39308.0\n35584.0\n43032.0\n12.8\n11.6\n14.0\n08000\n\n\n316\n9000\nCT\nConnecticut\nNaN\nNaN\nNaN\nNaN\n355861.0\n344138.0\n367584.0\n...\n83628.0\n82542.0\n84714.0\n24150.0\n21569.0\n26731.0\n13.9\n12.4\n15.4\n09000\n\n\n325\n10000\nDE\nDelaware\nNaN\nNaN\nNaN\nNaN\n113026.0\n107766.0\n118286.0\n...\n71636.0\n69940.0\n73332.0\n9694.0\n8679.0\n10709.0\n18.6\n16.6\n20.6\n10000\n\n\n329\n11000\nDC\nDistrict of Columbia\nNaN\nNaN\nNaN\nNaN\n107307.0\n101426.0\n113188.0\n...\n91072.0\n88170.0\n93974.0\n9444.0\n8334.0\n10554.0\n24.3\n21.4\n27.2\n11000\n\n\n331\n12000\nFL\nFlorida\nNaN\nNaN\nNaN\nNaN\n2830813.0\n2790138.0\n2871488.0\n...\n63054.0\n62631.0\n63477.0\n212346.0\n200017.0\n224675.0\n19.8\n18.7\n20.9\n12000\n\n\n399\n13000\nGA\nGeorgia\nNaN\nNaN\nNaN\nNaN\n1493837.0\n1463589.0\n1524085.0\n...\n66507.0\n65802.0\n67212.0\n135538.0\n128008.0\n143068.0\n22.0\n20.8\n23.2\n13000\n\n\n559\n15000\nHI\nHawaii\nNaN\nNaN\nNaN\nNaN\n152656.0\n146272.0\n159040.0\n...\n85547.0\n83548.0\n87546.0\n10150.0\n8658.0\n11642.0\n12.9\n11.0\n14.8\n15000\n\n\n565\n16000\nID\nIdaho\nNaN\nNaN\nNaN\nNaN\n202091.0\n193474.0\n210708.0\n...\n66318.0\n64668.0\n67968.0\n17074.0\n15118.0\n19030.0\n15.4\n13.6\n17.2\n16000\n\n\n610\n17000\nIL\nIllinois\nNaN\nNaN\nNaN\nNaN\n1493042.0\n1465135.0\n1520949.0\n...\n72215.0\n71645.0\n72785.0\n120015.0\n114563.0\n125467.0\n17.5\n16.7\n18.3\n17000\n\n\n713\n18000\nIN\nIndiana\nNaN\nNaN\nNaN\nNaN\n799733.0\n782428.0\n817038.0\n...\n62723.0\n62015.0\n63431.0\n69805.0\n64751.0\n74859.0\n17.7\n16.4\n19.0\n18000\n\n\n806\n19000\nIA\nIowa\nNaN\nNaN\nNaN\nNaN\n340626.0\n329373.0\n351879.0\n...\n65645.0\n64876.0\n66414.0\n24541.0\n22373.0\n26709.0\n13.3\n12.1\n14.5\n19000\n\n\n906\n20000\nKS\nKansas\nNaN\nNaN\nNaN\nNaN\n332457.0\n322234.0\n342680.0\n...\n64128.0\n63194.0\n65062.0\n27811.0\n25370.0\n30252.0\n16.0\n14.6\n17.4\n20000\n\n\n1012\n21000\nKY\nKentucky\nNaN\nNaN\nNaN\nNaN\n712023.0\n697813.0\n726233.0\n...\n55532.0\n54838.0\n56226.0\n60772.0\n57134.0\n64410.0\n23.6\n22.2\n25.0\n21000\n\n\n1133\n22000\nLA\nLouisiana\nNaN\nNaN\nNaN\nNaN\n878477.0\n859106.0\n897848.0\n...\n52090.0\n51348.0\n52832.0\n80375.0\n76164.0\n84586.0\n28.8\n27.3\n30.3\n22000\n\n\n1198\n23000\nME\nMaine\nNaN\nNaN\nNaN\nNaN\n149571.0\n143213.0\n155929.0\n...\n64823.0\n63604.0\n66042.0\n8895.0\n7789.0\n10001.0\n14.7\n12.9\n16.5\n23000\n\n\n1215\n24000\nMD\nMaryland\nNaN\nNaN\nNaN\nNaN\n620829.0\n603853.0\n637805.0\n...\n90129.0\n89087.0\n91171.0\n51970.0\n47916.0\n56024.0\n15.0\n13.8\n16.2\n24000\n\n\n1240\n25000\nMA\nMassachusetts\nNaN\nNaN\nNaN\nNaN\n701700.0\n685529.0\n717871.0\n...\n89577.0\n88330.0\n90824.0\n44332.0\n40364.0\n48300.0\n13.1\n11.9\n14.3\n25000\n\n\n1255\n26000\nMI\nMichigan\nNaN\nNaN\nNaN\nNaN\n1283086.0\n1261685.0\n1304487.0\n...\n63444.0\n62920.0\n63968.0\n104555.0\n98778.0\n110332.0\n19.5\n18.4\n20.6\n26000\n\n\n1339\n27000\nMN\nMinnesota\nNaN\nNaN\nNaN\nNaN\n519437.0\n507482.0\n531392.0\n...\n77712.0\n76812.0\n78612.0\n36651.0\n33066.0\n40236.0\n11.1\n10.0\n12.2\n27000\n\n\n1427\n28000\nMS\nMississippi\nNaN\nNaN\nNaN\nNaN\n549710.0\n536691.0\n562729.0\n...\n48871.0\n47663.0\n50079.0\n51862.0\n48648.0\n55076.0\n30.3\n28.4\n32.2\n28000\n\n\n1510\n29000\nMO\nMissouri\nNaN\nNaN\nNaN\nNaN\n765097.0\n748927.0\n781267.0\n...\n61815.0\n61152.0\n62478.0\n63067.0\n58984.0\n67150.0\n18.1\n16.9\n19.3\n29000\n\n\n1626\n30000\nMT\nMontana\nNaN\nNaN\nNaN\nNaN\n129910.0\n124852.0\n134968.0\n...\n63357.0\n61990.0\n64724.0\n9726.0\n8698.0\n10754.0\n17.2\n15.4\n19.0\n30000\n\n\n1683\n31000\nNE\nNebraska\nNaN\nNaN\nNaN\nNaN\n201627.0\n194607.0\n208647.0\n...\n66949.0\n65911.0\n67987.0\n16432.0\n14419.0\n18445.0\n13.4\n11.8\n15.0\n31000\n\n\n1777\n32000\nNV\nNevada\nNaN\nNaN\nNaN\nNaN\n433095.0\n420882.0\n445308.0\n...\n66194.0\n65202.0\n67186.0\n36365.0\n33278.0\n39452.0\n21.0\n19.2\n22.8\n32000\n\n\n1795\n33000\nNH\nNew Hampshire\nNaN\nNaN\nNaN\nNaN\n99562.0\n94623.0\n104501.0\n...\n88268.0\n86293.0\n90243.0\n5622.0\n4665.0\n6579.0\n9.4\n7.8\n11.0\n33000\n\n\n1806\n34000\nNJ\nNew Jersey\nNaN\nNaN\nNaN\nNaN\n925852.0\n905573.0\n946131.0\n...\n89227.0\n88164.0\n90290.0\n76282.0\n70767.0\n81797.0\n15.0\n13.9\n16.1\n34000\n\n\n1828\n35000\nNM\nNew Mexico\nNaN\nNaN\nNaN\nNaN\n367050.0\n354401.0\n379699.0\n...\n54304.0\n52878.0\n55730.0\n28231.0\n25602.0\n30860.0\n25.1\n22.8\n27.4\n35000\n\n\n1862\n36000\nNY\nNew York\nNaN\nNaN\nNaN\nNaN\n2703053.0\n2668539.0\n2737567.0\n...\n74230.0\n73620.0\n74840.0\n207920.0\n197263.0\n218577.0\n19.5\n18.5\n20.5\n36000\n\n\n1925\n37000\nNC\nNorth Carolina\nNaN\nNaN\nNaN\nNaN\n1383626.0\n1357735.0\n1409517.0\n...\n61997.0\n61459.0\n62535.0\n116355.0\n109438.0\n123272.0\n20.2\n19.0\n21.4\n37000\n\n\n2026\n38000\nND\nNorth Dakota\nNaN\nNaN\nNaN\nNaN\n82270.0\n78002.0\n86538.0\n...\n67603.0\n65854.0\n69352.0\n6455.0\n5510.0\n7400.0\n12.9\n11.0\n14.8\n38000\n\n\n2080\n39000\nOH\nOhio\nNaN\nNaN\nNaN\nNaN\n1523366.0\n1498525.0\n1548207.0\n...\n62286.0\n61832.0\n62740.0\n135658.0\n129038.0\n142278.0\n20.7\n19.7\n21.7\n39000\n\n\n2169\n40000\nOK\nOklahoma\nNaN\nNaN\nNaN\nNaN\n599003.0\n587366.0\n610640.0\n...\n55829.0\n55210.0\n56448.0\n56598.0\n53190.0\n60006.0\n23.6\n22.2\n25.0\n40000\n\n\n2247\n41000\nOR\nOregon\nNaN\nNaN\nNaN\nNaN\n507504.0\n493784.0\n521224.0\n...\n71441.0\n70406.0\n72476.0\n29637.0\n26737.0\n32537.0\n14.6\n13.2\n16.0\n41000\n\n\n2284\n42000\nPA\nPennsylvania\nNaN\nNaN\nNaN\nNaN\n1503929.0\n1480307.0\n1527551.0\n...\n68931.0\n68429.0\n69433.0\n116290.0\n109264.0\n123316.0\n17.5\n16.4\n18.6\n42000\n\n\n2352\n44000\nRI\nRhode Island\nNaN\nNaN\nNaN\nNaN\n126971.0\n121343.0\n132599.0\n...\n73324.0\n71173.0\n75475.0\n9556.0\n8437.0\n10675.0\n18.6\n16.4\n20.8\n44000\n\n\n2358\n45000\nSC\nSouth Carolina\nNaN\nNaN\nNaN\nNaN\n736098.0\n719691.0\n752505.0\n...\n59447.0\n58606.0\n60288.0\n59011.0\n55007.0\n63015.0\n21.5\n20.0\n23.0\n45000\n\n\n2405\n46000\nSD\nSouth Dakota\nNaN\nNaN\nNaN\nNaN\n103337.0\n99076.0\n107598.0\n...\n66843.0\n64779.0\n68907.0\n9423.0\n8334.0\n10512.0\n16.5\n14.6\n18.4\n46000\n\n\n2472\n47000\nTN\nTennessee\nNaN\nNaN\nNaN\nNaN\n934856.0\n915693.0\n954019.0\n...\n59698.0\n58920.0\n60476.0\n75501.0\n70440.0\n80562.0\n19.3\n18.0\n20.6\n47000\n\n\n2568\n48000\nTX\nTexas\nNaN\nNaN\nNaN\nNaN\n4122799.0\n4067445.0\n4178153.0\n...\n66959.0\n66448.0\n67470.0\n393888.0\n378420.0\n409356.0\n21.2\n20.4\n22.0\n48000\n\n\n2823\n49000\nUT\nUtah\nNaN\nNaN\nNaN\nNaN\n286086.0\n273709.0\n298463.0\n...\n79449.0\n78242.0\n80656.0\n22873.0\n20451.0\n25295.0\n9.8\n8.8\n10.8\n49000\n\n\n2853\n50000\nVT\nVermont\nNaN\nNaN\nNaN\nNaN\n63208.0\n59860.0\n66556.0\n...\n72415.0\n70396.0\n74434.0\n3196.0\n2682.0\n3710.0\n11.6\n9.7\n13.5\n50000\n\n\n2868\n51000\nVA\nVirginia\nNaN\nNaN\nNaN\nNaN\n862792.0\n843622.0\n881962.0\n...\n80926.0\n80203.0\n81649.0\n69303.0\n64164.0\n74442.0\n14.4\n13.3\n15.5\n51000\n\n\n3002\n53000\nWA\nWashington\nNaN\nNaN\nNaN\nNaN\n755589.0\n738622.0\n772556.0\n...\n84155.0\n83322.0\n84988.0\n53637.0\n48940.0\n58334.0\n12.7\n11.6\n13.8\n53000\n\n\n3042\n54000\nWV\nWest Virginia\nNaN\nNaN\nNaN\nNaN\n291051.0\n282054.0\n300048.0\n...\n51122.0\n50059.0\n52185.0\n21090.0\n19436.0\n22744.0\n24.7\n22.8\n26.6\n54000\n\n\n3098\n55000\nWI\nWisconsin\nNaN\nNaN\nNaN\nNaN\n622948.0\n610655.0\n635241.0\n...\n67150.0\n66549.0\n67751.0\n44523.0\n41734.0\n47312.0\n14.3\n13.4\n15.2\n55000\n\n\n3171\n56000\nWY\nWyoming\nNaN\nNaN\nNaN\nNaN\n60226.0\n56527.0\n63925.0\n...\n66508.0\n64077.0\n68939.0\n4455.0\n3781.0\n5129.0\n14.2\n12.0\n16.4\n56000\n\n\n\n\n52 rows × 35 columns\n\n\n\n\ncounties = df[~df.fips_str.str.endswith('000')]\n\n\ncounties.head()\n\n\n\n\n\n\n\n\nFIPS_Code\nStabr\nArea_name\nRural-urban_Continuum_Code_2003\nUrban_Influence_Code_2003\nRural-urban_Continuum_Code_2013\nUrban_Influence_Code_ 2013\nPOVALL_2021\nCI90LBALL_2021\nCI90UBALL_2021\n...\nMEDHHINC_2021\nCI90LBINC_2021\nCI90UBINC_2021\nPOV04_2021\nCI90LB04_2021\nCI90UB04_2021\nPCTPOV04_2021\nCI90LB04P_2021\nCI90UB04P_2021\nfips_str\n\n\n\n\n2\n1001\nAL\nAutauga County\n2.0\n2.0\n2.0\n2.0\n6296.0\n4772.0\n7820.0\n...\n66444.0\n60061.0\n72827.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01001\n\n\n3\n1003\nAL\nBaldwin County\n4.0\n5.0\n3.0\n2.0\n25526.0\n21599.0\n29453.0\n...\n65658.0\n60723.0\n70593.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01003\n\n\n4\n1005\nAL\nBarbour County\n6.0\n6.0\n6.0\n6.0\n5089.0\n3773.0\n6405.0\n...\n38649.0\n34308.0\n42990.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01005\n\n\n5\n1007\nAL\nBibb County\n1.0\n1.0\n1.0\n1.0\n4204.0\n3324.0\n5084.0\n...\n48454.0\n42438.0\n54470.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01007\n\n\n6\n1009\nAL\nBlount County\n1.0\n1.0\n1.0\n1.0\n6992.0\n5516.0\n8468.0\n...\n56894.0\n52632.0\n61156.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01009\n\n\n\n\n5 rows × 35 columns\n\n\n\n\ncounties.shape\n\n(3143, 35)\n\n\n\ncounties.groupby(by='Stabr').count()\n\n\n\n\n\n\n\n\nFIPS_Code\nArea_name\nRural-urban_Continuum_Code_2003\nUrban_Influence_Code_2003\nRural-urban_Continuum_Code_2013\nUrban_Influence_Code_ 2013\nPOVALL_2021\nCI90LBALL_2021\nCI90UBALL_2021\nPCTPOVALL_2021\n...\nMEDHHINC_2021\nCI90LBINC_2021\nCI90UBINC_2021\nPOV04_2021\nCI90LB04_2021\nCI90UB04_2021\nPCTPOV04_2021\nCI90LB04P_2021\nCI90UB04P_2021\nfips_str\n\n\nStabr\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAK\n30\n30\n23\n23\n28\n28\n30\n30\n30\n30\n...\n30\n30\n30\n0\n0\n0\n0\n0\n0\n30\n\n\nAL\n67\n67\n67\n67\n67\n67\n67\n67\n67\n67\n...\n67\n67\n67\n0\n0\n0\n0\n0\n0\n67\n\n\nAR\n75\n75\n75\n75\n75\n75\n75\n75\n75\n75\n...\n75\n75\n75\n0\n0\n0\n0\n0\n0\n75\n\n\nAZ\n15\n15\n15\n15\n15\n15\n15\n15\n15\n15\n...\n15\n15\n15\n0\n0\n0\n0\n0\n0\n15\n\n\nCA\n58\n58\n58\n58\n58\n58\n58\n58\n58\n58\n...\n58\n58\n58\n0\n0\n0\n0\n0\n0\n58\n\n\nCO\n64\n64\n64\n64\n64\n64\n64\n64\n64\n64\n...\n64\n64\n64\n0\n0\n0\n0\n0\n0\n64\n\n\nCT\n8\n8\n8\n8\n8\n8\n8\n8\n8\n8\n...\n8\n8\n8\n0\n0\n0\n0\n0\n0\n8\n\n\nDC\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n...\n1\n1\n1\n0\n0\n0\n0\n0\n0\n1\n\n\nDE\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n...\n3\n3\n3\n0\n0\n0\n0\n0\n0\n3\n\n\nFL\n67\n67\n67\n67\n67\n67\n67\n67\n67\n67\n...\n67\n67\n67\n0\n0\n0\n0\n0\n0\n67\n\n\nGA\n159\n159\n159\n159\n159\n159\n159\n159\n159\n159\n...\n159\n159\n159\n0\n0\n0\n0\n0\n0\n159\n\n\nHI\n5\n5\n5\n5\n5\n5\n4\n4\n4\n4\n...\n4\n4\n4\n0\n0\n0\n0\n0\n0\n5\n\n\nIA\n99\n99\n99\n99\n99\n99\n99\n99\n99\n99\n...\n99\n99\n99\n0\n0\n0\n0\n0\n0\n99\n\n\nID\n44\n44\n44\n44\n44\n44\n44\n44\n44\n44\n...\n44\n44\n44\n0\n0\n0\n0\n0\n0\n44\n\n\nIL\n102\n102\n102\n102\n102\n102\n102\n102\n102\n102\n...\n102\n102\n102\n0\n0\n0\n0\n0\n0\n102\n\n\nIN\n92\n92\n92\n92\n92\n92\n92\n92\n92\n92\n...\n92\n92\n92\n0\n0\n0\n0\n0\n0\n92\n\n\nKS\n105\n105\n105\n105\n105\n105\n105\n105\n105\n105\n...\n105\n105\n105\n0\n0\n0\n0\n0\n0\n105\n\n\nKY\n120\n120\n120\n120\n120\n120\n120\n120\n120\n120\n...\n120\n120\n120\n0\n0\n0\n0\n0\n0\n120\n\n\nLA\n64\n64\n64\n64\n64\n64\n64\n64\n64\n64\n...\n64\n64\n64\n0\n0\n0\n0\n0\n0\n64\n\n\nMA\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n...\n14\n14\n14\n0\n0\n0\n0\n0\n0\n14\n\n\nMD\n24\n24\n24\n24\n24\n24\n24\n24\n24\n24\n...\n24\n24\n24\n0\n0\n0\n0\n0\n0\n24\n\n\nME\n16\n16\n16\n16\n16\n16\n16\n16\n16\n16\n...\n16\n16\n16\n0\n0\n0\n0\n0\n0\n16\n\n\nMI\n83\n83\n83\n83\n83\n83\n83\n83\n83\n83\n...\n83\n83\n83\n0\n0\n0\n0\n0\n0\n83\n\n\nMN\n87\n87\n87\n87\n87\n87\n87\n87\n87\n87\n...\n87\n87\n87\n0\n0\n0\n0\n0\n0\n87\n\n\nMO\n115\n115\n115\n115\n115\n115\n115\n115\n115\n115\n...\n115\n115\n115\n0\n0\n0\n0\n0\n0\n115\n\n\nMS\n82\n82\n82\n82\n82\n82\n82\n82\n82\n82\n...\n82\n82\n82\n0\n0\n0\n0\n0\n0\n82\n\n\nMT\n56\n56\n56\n56\n56\n56\n56\n56\n56\n56\n...\n56\n56\n56\n0\n0\n0\n0\n0\n0\n56\n\n\nNC\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n...\n100\n100\n100\n0\n0\n0\n0\n0\n0\n100\n\n\nND\n53\n53\n53\n53\n53\n53\n53\n53\n53\n53\n...\n53\n53\n53\n0\n0\n0\n0\n0\n0\n53\n\n\nNE\n93\n93\n93\n93\n93\n93\n93\n93\n93\n93\n...\n93\n93\n93\n0\n0\n0\n0\n0\n0\n93\n\n\nNH\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n...\n10\n10\n10\n0\n0\n0\n0\n0\n0\n10\n\n\nNJ\n21\n21\n21\n21\n21\n21\n21\n21\n21\n21\n...\n21\n21\n21\n0\n0\n0\n0\n0\n0\n21\n\n\nNM\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n...\n33\n33\n33\n0\n0\n0\n0\n0\n0\n33\n\n\nNV\n17\n17\n17\n17\n17\n17\n17\n17\n17\n17\n...\n17\n17\n17\n0\n0\n0\n0\n0\n0\n17\n\n\nNY\n62\n62\n62\n62\n62\n62\n62\n62\n62\n62\n...\n62\n62\n62\n0\n0\n0\n0\n0\n0\n62\n\n\nOH\n88\n88\n88\n88\n88\n88\n88\n88\n88\n88\n...\n88\n88\n88\n0\n0\n0\n0\n0\n0\n88\n\n\nOK\n77\n77\n77\n77\n77\n77\n77\n77\n77\n77\n...\n77\n77\n77\n0\n0\n0\n0\n0\n0\n77\n\n\nOR\n36\n36\n36\n36\n36\n36\n36\n36\n36\n36\n...\n36\n36\n36\n0\n0\n0\n0\n0\n0\n36\n\n\nPA\n67\n67\n67\n67\n67\n67\n67\n67\n67\n67\n...\n67\n67\n67\n0\n0\n0\n0\n0\n0\n67\n\n\nRI\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n...\n5\n5\n5\n0\n0\n0\n0\n0\n0\n5\n\n\nSC\n46\n46\n46\n46\n46\n46\n46\n46\n46\n46\n...\n46\n46\n46\n0\n0\n0\n0\n0\n0\n46\n\n\nSD\n66\n66\n66\n66\n66\n66\n66\n66\n66\n66\n...\n66\n66\n66\n0\n0\n0\n0\n0\n0\n66\n\n\nTN\n95\n95\n95\n95\n95\n95\n95\n95\n95\n95\n...\n95\n95\n95\n0\n0\n0\n0\n0\n0\n95\n\n\nTX\n254\n254\n254\n254\n254\n254\n254\n254\n254\n254\n...\n254\n254\n254\n0\n0\n0\n0\n0\n0\n254\n\n\nUT\n29\n29\n29\n29\n29\n29\n29\n29\n29\n29\n...\n29\n29\n29\n0\n0\n0\n0\n0\n0\n29\n\n\nVA\n133\n133\n133\n133\n133\n133\n133\n133\n133\n133\n...\n133\n133\n133\n0\n0\n0\n0\n0\n0\n133\n\n\nVT\n14\n14\n14\n14\n14\n14\n14\n14\n14\n14\n...\n14\n14\n14\n0\n0\n0\n0\n0\n0\n14\n\n\nWA\n39\n39\n39\n39\n39\n39\n39\n39\n39\n39\n...\n39\n39\n39\n0\n0\n0\n0\n0\n0\n39\n\n\nWI\n72\n72\n72\n72\n72\n72\n72\n72\n72\n72\n...\n72\n72\n72\n0\n0\n0\n0\n0\n0\n72\n\n\nWV\n55\n55\n55\n55\n55\n55\n55\n55\n55\n55\n...\n55\n55\n55\n0\n0\n0\n0\n0\n0\n55\n\n\nWY\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n...\n23\n23\n23\n0\n0\n0\n0\n0\n0\n23\n\n\n\n\n51 rows × 34 columns\n\n\n\n\ncounties.columns\n\nIndex(['FIPS_Code', 'Stabr', 'Area_name', 'Rural-urban_Continuum_Code_2003',\n       'Urban_Influence_Code_2003', 'Rural-urban_Continuum_Code_2013',\n       'Urban_Influence_Code_ 2013', 'POVALL_2021', 'CI90LBALL_2021',\n       'CI90UBALL_2021', 'PCTPOVALL_2021', 'CI90LBALLP_2021',\n       'CI90UBALLP_2021', 'POV017_2021', 'CI90LB017_2021', 'CI90UB017_2021',\n       'PCTPOV017_2021', 'CI90LB017P_2021', 'CI90UB017P_2021', 'POV517_2021',\n       'CI90LB517_2021', 'CI90UB517_2021', 'PCTPOV517_2021', 'CI90LB517P_2021',\n       'CI90UB517P_2021', 'MEDHHINC_2021', 'CI90LBINC_2021', 'CI90UBINC_2021',\n       'POV04_2021', 'CI90LB04_2021', 'CI90UB04_2021', 'PCTPOV04_2021',\n       'CI90LB04P_2021', 'CI90UB04P_2021', 'fips_str'],\n      dtype='object')\n\n\n\ncounties[['Stabr', 'Area_name', 'PCTPOVALL_2021']]\n\n\n\n\n\n\n\n\nStabr\nArea_name\nPCTPOVALL_2021\n\n\n\n\n2\nAL\nAutauga County\n10.7\n\n\n3\nAL\nBaldwin County\n10.8\n\n\n4\nAL\nBarbour County\n23.0\n\n\n5\nAL\nBibb County\n20.6\n\n\n6\nAL\nBlount County\n12.0\n\n\n...\n...\n...\n...\n\n\n3190\nWY\nSweetwater County\n9.2\n\n\n3191\nWY\nTeton County\n5.9\n\n\n3192\nWY\nUinta County\n9.4\n\n\n3193\nWY\nWashakie County\n10.2\n\n\n3194\nWY\nWeston County\n10.4\n\n\n\n\n3143 rows × 3 columns\n\n\n\n\ncounties[['Stabr', 'PCTPOVALL_2021']].groupby(by='Stabr').mean()\n\n\n\n\n\n\n\n\nPCTPOVALL_2021\n\n\nStabr\n\n\n\n\n\nAK\n13.750000\n\n\nAL\n19.455224\n\n\nAR\n18.750667\n\n\nAZ\n17.273333\n\n\nCA\n13.631034\n\n\nCO\n12.567188\n\n\nCT\n9.812500\n\n\nDC\n16.800000\n\n\nDE\n11.700000\n\n\nFL\n15.588060\n\n\nGA\n18.422642\n\n\nHI\n11.825000\n\n\nIA\n10.714141\n\n\nID\n11.970455\n\n\nIL\n12.804902\n\n\nIN\n11.515217\n\n\nKS\n11.903810\n\n\nKY\n19.189167\n\n\nLA\n21.618750\n\n\nMA\n10.278571\n\n\nMD\n10.991667\n\n\nME\n12.318750\n\n\nMI\n13.059036\n\n\nMN\n10.154023\n\n\nMO\n14.923478\n\n\nMS\n22.253659\n\n\nMT\n13.532143\n\n\nNC\n15.931000\n\n\nND\n12.286792\n\n\nNE\n10.847312\n\n\nNH\n8.510000\n\n\nNJ\n9.880952\n\n\nNM\n20.169697\n\n\nNV\n12.111765\n\n\nNY\n12.964516\n\n\nOH\n12.935227\n\n\nOK\n16.790909\n\n\nOR\n13.936111\n\n\nPA\n12.043284\n\n\nRI\n9.760000\n\n\nSC\n18.200000\n\n\nSD\n14.921212\n\n\nTN\n15.463158\n\n\nTX\n15.837008\n\n\nUT\n10.206897\n\n\nVA\n13.260902\n\n\nVT\n10.435714\n\n\nWA\n12.215385\n\n\nWI\n10.695833\n\n\nWV\n18.060000\n\n\nWY\n10.773913\n\n\n\n\n\n\n\n\ncounties[['Stabr', 'PCTPOVALL_2021']].groupby(by='Stabr').max()\n\n\n\n\n\n\n\n\nPCTPOVALL_2021\n\n\nStabr\n\n\n\n\n\nAK\n30.4\n\n\nAL\n35.1\n\n\nAR\n35.7\n\n\nAZ\n28.4\n\n\nCA\n21.9\n\n\nCO\n37.8\n\n\nCT\n12.0\n\n\nDC\n16.8\n\n\nDE\n12.2\n\n\nFL\n26.3\n\n\nGA\n34.0\n\n\nHI\n14.7\n\n\nIA\n17.9\n\n\nID\n17.9\n\n\nIL\n22.3\n\n\nIN\n21.1\n\n\nKS\n21.3\n\n\nKY\n40.5\n\n\nLA\n39.9\n\n\nMA\n18.5\n\n\nMD\n23.6\n\n\nME\n18.2\n\n\nMI\n20.7\n\n\nMN\n18.7\n\n\nMO\n23.9\n\n\nMS\n43.9\n\n\nMT\n25.7\n\n\nNC\n27.9\n\n\nND\n42.8\n\n\nNE\n19.3\n\n\nNH\n12.5\n\n\nNJ\n15.9\n\n\nNM\n30.3\n\n\nNV\n18.3\n\n\nNY\n26.4\n\n\nOH\n23.9\n\n\nOK\n27.8\n\n\nOR\n20.0\n\n\nPA\n22.3\n\n\nRI\n14.3\n\n\nSC\n35.4\n\n\nSD\n43.5\n\n\nTN\n33.4\n\n\nTX\n34.3\n\n\nUT\n26.8\n\n\nVA\n25.6\n\n\nVT\n14.4\n\n\nWA\n18.1\n\n\nWI\n24.2\n\n\nWV\n31.7\n\n\nWY\n17.7"
  },
  {
    "objectID": "week-03/h0201geopandas.html",
    "href": "week-03/h0201geopandas.html",
    "title": "Geographic Information Systems Applications",
    "section": "",
    "text": "import os\n\nos.environ['PROJ_LIB'] = '/opt/tljh/user/share/proj'\n\n\nimport requests\n\nurl=\"https://raw.githubusercontent.com/plotly/datasets/master/geojson-counties-fips.json\"\noutput_file = 'counties-fips.json'\n\n\nresponse = requests.get(url)\n\nif response.status_code == 200:\n    with open(output_file, 'wb') as file:\n        file.write(response.content)\n    print(f\"File downloaded as '{output_file}'\")\nelse:\n    print(f\"Failed to download file. Status code: {response.status_code}\")\n\nFile downloaded as 'counties-fips.json'\n\n\n\nimport geopandas as gpd\n\n\nimport pandas as pd\n\n\ngdf = gpd.read_file(\"counties-fips.json\")\n\n\ngdf.shape\n\n(3221, 8)\n\n\n\ntype(gdf)\n\ngeopandas.geodataframe.GeoDataFrame\n\n\n\ngdf.head()\n\n\n\n\n\n\n\n\nid\nGEO_ID\nSTATE\nCOUNTY\nNAME\nLSAD\nCENSUSAREA\ngeometry\n\n\n\n\n0\n01001\n0500000US01001\n01\n001\nAutauga\nCounty\n594.436\nPOLYGON ((-86.49677 32.34444, -86.71790 32.402...\n\n\n1\n01009\n0500000US01009\n01\n009\nBlount\nCounty\n644.776\nPOLYGON ((-86.57780 33.76532, -86.75914 33.840...\n\n\n2\n01017\n0500000US01017\n01\n017\nChambers\nCounty\n596.531\nPOLYGON ((-85.18413 32.87053, -85.12342 32.772...\n\n\n3\n01021\n0500000US01021\n01\n021\nChilton\nCounty\n692.854\nPOLYGON ((-86.51734 33.02057, -86.51596 32.929...\n\n\n4\n01033\n0500000US01033\n01\n033\nColbert\nCounty\n592.619\nPOLYGON ((-88.13999 34.58170, -88.13925 34.587...\n\n\n\n\n\n\n\n\ngdf.dtypes\n\nid              object\nGEO_ID          object\nSTATE           object\nCOUNTY          object\nNAME            object\nLSAD            object\nCENSUSAREA     float64\ngeometry      geometry\ndtype: object\n\n\n\ngdf.plot()\n\n&lt;Axes: &gt;\n\n\n\n\n\n\ngdf.shape\n\n(3221, 8)\n\n\n\ngdf.columns\n\nIndex(['id', 'GEO_ID', 'STATE', 'COUNTY', 'NAME', 'LSAD', 'CENSUSAREA',\n       'geometry'],\n      dtype='object')\n\n\n\ndf = pd.read_excel('PovertyEstimates.xlsx', 'PovertyEstimates', skiprows=4)\n\n\ndf.head()\n\n\n\n\n\n\n\n\nFIPS_Code\nStabr\nArea_name\nRural-urban_Continuum_Code_2003\nUrban_Influence_Code_2003\nRural-urban_Continuum_Code_2013\nUrban_Influence_Code_ 2013\nPOVALL_2021\nCI90LBALL_2021\nCI90UBALL_2021\n...\nCI90UB517P_2021\nMEDHHINC_2021\nCI90LBINC_2021\nCI90UBINC_2021\nPOV04_2021\nCI90LB04_2021\nCI90UB04_2021\nPCTPOV04_2021\nCI90LB04P_2021\nCI90UB04P_2021\n\n\n\n\n0\n0\nUS\nUnited States\nNaN\nNaN\nNaN\nNaN\n41393176.0\n41149497.0\n41636855.0\n...\n16.3\n69717.0\n69583.0\n69851.0\n3349149.0\n3299669.0\n3398629.0\n18.3\n18.0\n18.6\n\n\n1\n1000\nAL\nAlabama\nNaN\nNaN\nNaN\nNaN\n800848.0\n782169.0\n819527.0\n...\n22.5\n53990.0\n53218.0\n54762.0\n71220.0\n66888.0\n75552.0\n25.1\n23.6\n26.6\n\n\n2\n1001\nAL\nAutauga County\n2.0\n2.0\n2.0\n2.0\n6296.0\n4772.0\n7820.0\n...\n20.4\n66444.0\n60061.0\n72827.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n3\n1003\nAL\nBaldwin County\n4.0\n5.0\n3.0\n2.0\n25526.0\n21599.0\n29453.0\n...\n18.5\n65658.0\n60723.0\n70593.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n4\n1005\nAL\nBarbour County\n6.0\n6.0\n6.0\n6.0\n5089.0\n3773.0\n6405.0\n...\n44.6\n38649.0\n34308.0\n42990.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n5 rows × 34 columns\n\n\n\n\ngdf.head()\n\n\n\n\n\n\n\n\nid\nGEO_ID\nSTATE\nCOUNTY\nNAME\nLSAD\nCENSUSAREA\ngeometry\n\n\n\n\n0\n01001\n0500000US01001\n01\n001\nAutauga\nCounty\n594.436\nPOLYGON ((-86.49677 32.34444, -86.71790 32.402...\n\n\n1\n01009\n0500000US01009\n01\n009\nBlount\nCounty\n644.776\nPOLYGON ((-86.57780 33.76532, -86.75914 33.840...\n\n\n2\n01017\n0500000US01017\n01\n017\nChambers\nCounty\n596.531\nPOLYGON ((-85.18413 32.87053, -85.12342 32.772...\n\n\n3\n01021\n0500000US01021\n01\n021\nChilton\nCounty\n692.854\nPOLYGON ((-86.51734 33.02057, -86.51596 32.929...\n\n\n4\n01033\n0500000US01033\n01\n033\nColbert\nCounty\n592.619\nPOLYGON ((-88.13999 34.58170, -88.13925 34.587...\n\n\n\n\n\n\n\n\ndf['fips'] = df.FIPS_Code.astype(str).str.zfill(5)\n\n\ndf.fips\n\n0       00000\n1       01000\n2       01001\n3       01003\n4       01005\n        ...  \n3190    56037\n3191    56039\n3192    56041\n3193    56043\n3194    56045\nName: fips, Length: 3195, dtype: object\n\n\n\ngdf1 = gdf.merge(df, left_on='id', right_on='fips', how='left')\n\n\ngdf1.shape\n\n(3221, 43)\n\n\n\ngdf.shape\n\n(3221, 8)\n\n\n\ngdf1.head()\n\n\n\n\n\n\n\n\nid\nGEO_ID\nSTATE\nCOUNTY\nNAME\nLSAD\nCENSUSAREA\ngeometry\nFIPS_Code\nStabr\n...\nMEDHHINC_2021\nCI90LBINC_2021\nCI90UBINC_2021\nPOV04_2021\nCI90LB04_2021\nCI90UB04_2021\nPCTPOV04_2021\nCI90LB04P_2021\nCI90UB04P_2021\nfips\n\n\n\n\n0\n01001\n0500000US01001\n01\n001\nAutauga\nCounty\n594.436\nPOLYGON ((-86.49677 32.34444, -86.71790 32.402...\n1001.0\nAL\n...\n66444.0\n60061.0\n72827.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01001\n\n\n1\n01009\n0500000US01009\n01\n009\nBlount\nCounty\n644.776\nPOLYGON ((-86.57780 33.76532, -86.75914 33.840...\n1009.0\nAL\n...\n56894.0\n52632.0\n61156.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01009\n\n\n2\n01017\n0500000US01017\n01\n017\nChambers\nCounty\n596.531\nPOLYGON ((-85.18413 32.87053, -85.12342 32.772...\n1017.0\nAL\n...\n45447.0\n40729.0\n50165.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01017\n\n\n3\n01021\n0500000US01021\n01\n021\nChilton\nCounty\n692.854\nPOLYGON ((-86.51734 33.02057, -86.51596 32.929...\n1021.0\nAL\n...\n55142.0\n49687.0\n60597.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01021\n\n\n4\n01033\n0500000US01033\n01\n033\nColbert\nCounty\n592.619\nPOLYGON ((-88.13999 34.58170, -88.13925 34.587...\n1033.0\nAL\n...\n53341.0\n48729.0\n57953.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n01033\n\n\n\n\n5 rows × 43 columns\n\n\n\n\ngdf1.columns\n\nIndex(['id', 'GEO_ID', 'STATE', 'COUNTY', 'NAME', 'LSAD', 'CENSUSAREA',\n       'geometry', 'FIPS_Code', 'Stabr', 'Area_name',\n       'Rural-urban_Continuum_Code_2003', 'Urban_Influence_Code_2003',\n       'Rural-urban_Continuum_Code_2013', 'Urban_Influence_Code_ 2013',\n       'POVALL_2021', 'CI90LBALL_2021', 'CI90UBALL_2021', 'PCTPOVALL_2021',\n       'CI90LBALLP_2021', 'CI90UBALLP_2021', 'POV017_2021', 'CI90LB017_2021',\n       'CI90UB017_2021', 'PCTPOV017_2021', 'CI90LB017P_2021',\n       'CI90UB017P_2021', 'POV517_2021', 'CI90LB517_2021', 'CI90UB517_2021',\n       'PCTPOV517_2021', 'CI90LB517P_2021', 'CI90UB517P_2021', 'MEDHHINC_2021',\n       'CI90LBINC_2021', 'CI90UBINC_2021', 'POV04_2021', 'CI90LB04_2021',\n       'CI90UB04_2021', 'PCTPOV04_2021', 'CI90LB04P_2021', 'CI90UB04P_2021',\n       'fips'],\n      dtype='object')\n\n\n\ngdf.columns\n\nIndex(['id', 'GEO_ID', 'STATE', 'COUNTY', 'NAME', 'LSAD', 'CENSUSAREA',\n       'geometry'],\n      dtype='object')\n\n\n\nca = gdf1[gdf1.STATE=='06']\n\n\nca.shape\n\n(58, 43)\n\n\n\nca.plot(column='PCTPOVALL_2021')\n\n&lt;Axes: &gt;"
  },
  {
    "objectID": "week-03/pandas.html",
    "href": "week-03/pandas.html",
    "title": "Introduction to Pandas",
    "section": "",
    "text": "# sample data\n\ndata = {\n    \"Name\" : [ 'Alice', 'Bob', 'Charlie', 'David', 'Eva'],\n    \"Age\" : [ 25, 30, 35, 40, 45 ],\n    \"City\" : [ 'New York', 'Los Angeles', 'Chicago',  'Houston',\n              'Phoenix' ]\n}\ndata\n\n{'Name': ['Alice', 'Bob', 'Charlie', 'David', 'Eva'],\n 'Age': [25, 30, 35, 40, 45],\n 'City': ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix']}\ntype(data)\n\ndict\nimport pandas as pd\ndf = pd.DataFrame(data)\ndf.head()\n\n\n\n\n\n\n\n\nName\nAge\nCity\n\n\n\n\n0\nAlice\n25\nNew York\n\n\n1\nBob\n30\nLos Angeles\n\n\n2\nCharlie\n35\nChicago\n\n\n3\nDavid\n40\nHouston\n\n\n4\nEva\n45\nPhoenix\ntype(df)\n\npandas.core.frame.DataFrame\ndf.shape\n\n(5, 3)\ndf.columns\n\nIndex(['Name', 'Age', 'City'], dtype='object')\ndf.index\n\nRangeIndex(start=0, stop=5, step=1)\ndf.dtypes\n\nName    object\nAge      int64\nCity    object\ndtype: object"
  },
  {
    "objectID": "week-03/pandas.html#data-series",
    "href": "week-03/pandas.html#data-series",
    "title": "Introduction to Pandas",
    "section": "Data Series",
    "text": "Data Series\n\ndf.Age\n\n0    25\n1    30\n2    35\n3    40\n4    45\nName: Age, dtype: int64\n\n\n\ntype(df.Age)\n\npandas.core.series.Series\n\n\n\ntype(df)\n\npandas.core.frame.DataFrame"
  },
  {
    "objectID": "week-03/pandas.html#data-cleaning",
    "href": "week-03/pandas.html#data-cleaning",
    "title": "Introduction to Pandas",
    "section": "Data Cleaning",
    "text": "Data Cleaning\n\nimport numpy as np\n\n\n# create a dataframe with missing values\n\ndata = {\n    \"Name\": ['Alice', 'Bob', None, 'David', 'Eva'], \n    \"Age\" : [ 25, None, 35, 40, 'Unknown' ],\n    \"Salary\": [50000,  60000, 55000, None, 45000],\n    \"City\": ['New York', 'Los Angeles', np.nan, 'Houston',\n             'Phoenix' ]\n}\n\n\ndf = pd.DataFrame(data)\ndf\n\n\n\n\n\n\n\n\nName\nAge\nSalary\nCity\n\n\n\n\n0\nAlice\n25\n50000.0\nNew York\n\n\n1\nBob\nNone\n60000.0\nLos Angeles\n\n\n2\nNone\n35\n55000.0\nNaN\n\n\n3\nDavid\n40\nNaN\nHouston\n\n\n4\nEva\nUnknown\n45000.0\nPhoenix\n\n\n\n\n\n\n\n\ndf['Name'].fillna('Unknown', inplace=True)\ndf['City'].fillna('Unknown', inplace=True)\ndf\n\n\n\n\n\n\n\n\nName\nAge\nSalary\nCity\n\n\n\n\n0\nAlice\n25\n50000.0\nNew York\n\n\n1\nBob\nNone\n60000.0\nLos Angeles\n\n\n2\nUnknown\n35\n55000.0\nUnknown\n\n\n3\nDavid\n40\nNaN\nHouston\n\n\n4\nEva\nUnknown\n45000.0\nPhoenix\n\n\n\n\n\n\n\n\ndf['Age'] = pd.to_numeric(df['Age'], errors='coerce')\n\n\ndf\n\n\n\n\n\n\n\n\nName\nAge\nSalary\nCity\n\n\n\n\n0\nAlice\n25.0\n50000.0\nNew York\n\n\n1\nBob\nNaN\n60000.0\nLos Angeles\n\n\n2\nUnknown\n35.0\n55000.0\nUnknown\n\n\n3\nDavid\n40.0\nNaN\nHouston\n\n\n4\nEva\nNaN\n45000.0\nPhoenix\n\n\n\n\n\n\n\n\ndf['Age'].fillna(df['Age'].mean(), inplace=True)\ndf['Salary'].fillna(df['Salary'].mean(), inplace=True)\ndf\n\n\n\n\n\n\n\n\nName\nAge\nSalary\nCity\n\n\n\n\n0\nAlice\n25.000000\n50000.0\nNew York\n\n\n1\nBob\n33.333333\n60000.0\nLos Angeles\n\n\n2\nUnknown\n35.000000\n55000.0\nUnknown\n\n\n3\nDavid\n40.000000\n52500.0\nHouston\n\n\n4\nEva\n33.333333\n45000.0\nPhoenix"
  },
  {
    "objectID": "week-03/pandas.html#handling-dtypes",
    "href": "week-03/pandas.html#handling-dtypes",
    "title": "Introduction to Pandas",
    "section": "Handling dtypes",
    "text": "Handling dtypes\n\nfips_codes = {\n    'New York': '36061',\n    'Los Angeles': '06037',\n    'Unknown': '00000',\n    'Houston': '48201',\n    'Phoenix': '04013'\n}\nfips_codes\n\n{'New York': '36061',\n 'Los Angeles': '06037',\n 'Unknown': '00000',\n 'Houston': '48201',\n 'Phoenix': '04013'}\n\n\n\ndf\n\n\n\n\n\n\n\n\nName\nAge\nSalary\nCity\n\n\n\n\n0\nAlice\n25.000000\n50000.0\nNew York\n\n\n1\nBob\n33.333333\n60000.0\nLos Angeles\n\n\n2\nUnknown\n35.000000\n55000.0\nUnknown\n\n\n3\nDavid\n40.000000\n52500.0\nHouston\n\n\n4\nEva\n33.333333\n45000.0\nPhoenix\n\n\n\n\n\n\n\n\ndf['FIPS'] = df['City'].map(fips_codes)\ndf\n\n\n\n\n\n\n\n\nName\nAge\nSalary\nCity\nFIPS\n\n\n\n\n0\nAlice\n25.000000\n50000.0\nNew York\n36061\n\n\n1\nBob\n33.333333\n60000.0\nLos Angeles\n06037\n\n\n2\nUnknown\n35.000000\n55000.0\nUnknown\n00000\n\n\n3\nDavid\n40.000000\n52500.0\nHouston\n48201\n\n\n4\nEva\n33.333333\n45000.0\nPhoenix\n04013\n\n\n\n\n\n\n\n\nfips_int = df.FIPS.astype(int)\nfips_int\n    \n\n0    36061\n1     6037\n2        0\n3    48201\n4     4013\nName: FIPS, dtype: int64\n\n\n\ndf.FIPS\n\n0    36061\n1    06037\n2    00000\n3    48201\n4    04013\nName: FIPS, dtype: object\n\n\n\ndf['fips_int'] = fips_int\n\n\ndf.head()\n\n\n\n\n\n\n\n\nName\nAge\nSalary\nCity\nFIPS\nfips_int\n\n\n\n\n0\nAlice\n25.000000\n50000.0\nNew York\n36061\n36061\n\n\n1\nBob\n33.333333\n60000.0\nLos Angeles\n06037\n6037\n\n\n2\nUnknown\n35.000000\n55000.0\nUnknown\n00000\n0\n\n\n3\nDavid\n40.000000\n52500.0\nHouston\n48201\n48201\n\n\n4\nEva\n33.333333\n45000.0\nPhoenix\n04013\n4013\n\n\n\n\n\n\n\n\ndf['new_fips'] = df.fips_int.astype(str).str.zfill(5)\ndf.head()\n\n\n\n\n\n\n\n\nName\nAge\nSalary\nCity\nFIPS\nfips_int\nnew_fips\n\n\n\n\n0\nAlice\n25.000000\n50000.0\nNew York\n36061\n36061\n36061\n\n\n1\nBob\n33.333333\n60000.0\nLos Angeles\n06037\n6037\n06037\n\n\n2\nUnknown\n35.000000\n55000.0\nUnknown\n00000\n0\n00000\n\n\n3\nDavid\n40.000000\n52500.0\nHouston\n48201\n48201\n48201\n\n\n4\nEva\n33.333333\n45000.0\nPhoenix\n04013\n4013\n04013"
  },
  {
    "objectID": "week-03/pandas.html#indexing",
    "href": "week-03/pandas.html#indexing",
    "title": "Introduction to Pandas",
    "section": "Indexing",
    "text": "Indexing\n\ndf\n\n\n\n\n\n\n\n\nName\nAge\nSalary\nCity\nFIPS\nfips_int\nnew_fips\n\n\n\n\n0\nAlice\n25.000000\n50000.0\nNew York\n36061\n36061\n36061\n\n\n1\nBob\n33.333333\n60000.0\nLos Angeles\n06037\n6037\n06037\n\n\n2\nUnknown\n35.000000\n55000.0\nUnknown\n00000\n0\n00000\n\n\n3\nDavid\n40.000000\n52500.0\nHouston\n48201\n48201\n48201\n\n\n4\nEva\n33.333333\n45000.0\nPhoenix\n04013\n4013\n04013\n\n\n\n\n\n\n\n\ndf.loc[3]\n\nName          David\nAge            40.0\nSalary      52500.0\nCity        Houston\nFIPS          48201\nfips_int      48201\nnew_fips      48201\nName: 3, dtype: object\n\n\n\ndf.iloc[3]\n\nName          David\nAge            40.0\nSalary      52500.0\nCity        Houston\nFIPS          48201\nfips_int      48201\nnew_fips      48201\nName: 3, dtype: object\n\n\n\ndf\n\n\n\n\n\n\n\n\nName\nAge\nSalary\nCity\nFIPS\nfips_int\nnew_fips\n\n\n\n\n0\nAlice\n25.000000\n50000.0\nNew York\n36061\n36061\n36061\n\n\n1\nBob\n33.333333\n60000.0\nLos Angeles\n06037\n6037\n06037\n\n\n2\nUnknown\n35.000000\n55000.0\nUnknown\n00000\n0\n00000\n\n\n3\nDavid\n40.000000\n52500.0\nHouston\n48201\n48201\n48201\n\n\n4\nEva\n33.333333\n45000.0\nPhoenix\n04013\n4013\n04013\n\n\n\n\n\n\n\n\ndf.sort_values(by='Name')\n\n\n\n\n\n\n\n\nName\nAge\nSalary\nCity\nFIPS\nfips_int\nnew_fips\n\n\n\n\n0\nAlice\n25.000000\n50000.0\nNew York\n36061\n36061\n36061\n\n\n1\nBob\n33.333333\n60000.0\nLos Angeles\n06037\n6037\n06037\n\n\n3\nDavid\n40.000000\n52500.0\nHouston\n48201\n48201\n48201\n\n\n4\nEva\n33.333333\n45000.0\nPhoenix\n04013\n4013\n04013\n\n\n2\nUnknown\n35.000000\n55000.0\nUnknown\n00000\n0\n00000\n\n\n\n\n\n\n\n\ndfsorted = df.sort_values(by='Name')\ndfsorted\n\n\n\n\n\n\n\n\nName\nAge\nSalary\nCity\nFIPS\nfips_int\nnew_fips\n\n\n\n\n0\nAlice\n25.000000\n50000.0\nNew York\n36061\n36061\n36061\n\n\n1\nBob\n33.333333\n60000.0\nLos Angeles\n06037\n6037\n06037\n\n\n3\nDavid\n40.000000\n52500.0\nHouston\n48201\n48201\n48201\n\n\n4\nEva\n33.333333\n45000.0\nPhoenix\n04013\n4013\n04013\n\n\n2\nUnknown\n35.000000\n55000.0\nUnknown\n00000\n0\n00000\n\n\n\n\n\n\n\n\ndfsorted.loc[3]\n\nName          David\nAge            40.0\nSalary      52500.0\nCity        Houston\nFIPS          48201\nfips_int      48201\nnew_fips      48201\nName: 3, dtype: object\n\n\n\ndfsorted.iloc[3]\n\nName              Eva\nAge         33.333333\nSalary        45000.0\nCity          Phoenix\nFIPS            04013\nfips_int         4013\nnew_fips        04013\nName: 4, dtype: object\n\n\n\ndfsorted\n\n\n\n\n\n\n\n\nName\nAge\nSalary\nCity\nFIPS\nfips_int\nnew_fips\n\n\n\n\n0\nAlice\n25.000000\n50000.0\nNew York\n36061\n36061\n36061\n\n\n1\nBob\n33.333333\n60000.0\nLos Angeles\n06037\n6037\n06037\n\n\n3\nDavid\n40.000000\n52500.0\nHouston\n48201\n48201\n48201\n\n\n4\nEva\n33.333333\n45000.0\nPhoenix\n04013\n4013\n04013\n\n\n2\nUnknown\n35.000000\n55000.0\nUnknown\n00000\n0\n00000\n\n\n\n\n\n\n\n\ndfsorted.reset_index(inplace=True, drop=True)\ndfsorted\n\n\n\n\n\n\n\n\nName\nAge\nSalary\nCity\nFIPS\nfips_int\nnew_fips\n\n\n\n\n0\nAlice\n25.000000\n50000.0\nNew York\n36061\n36061\n36061\n\n\n1\nBob\n33.333333\n60000.0\nLos Angeles\n06037\n6037\n06037\n\n\n2\nDavid\n40.000000\n52500.0\nHouston\n48201\n48201\n48201\n\n\n3\nEva\n33.333333\n45000.0\nPhoenix\n04013\n4013\n04013\n\n\n4\nUnknown\n35.000000\n55000.0\nUnknown\n00000\n0\n00000\n\n\n\n\n\n\n\n\ndf.iloc[[0,1], [2, 3]]\n\n\n\n\n\n\n\n\nSalary\nCity\n\n\n\n\n0\n50000.0\nNew York\n\n\n1\n60000.0\nLos Angeles\n\n\n\n\n\n\n\n\ndf.iloc[[0,1], [0, 4]]\n\n\n\n\n\n\n\n\nName\nFIPS\n\n\n\n\n0\nAlice\n36061\n\n\n1\nBob\n06037\n\n\n\n\n\n\n\n\ndf.iloc[[0,2]]\n\n\n\n\n\n\n\n\nName\nAge\nSalary\nCity\nFIPS\nfips_int\nnew_fips\n\n\n\n\n0\nAlice\n25.0\n50000.0\nNew York\n36061\n36061\n36061\n\n\n2\nUnknown\n35.0\n55000.0\nUnknown\n00000\n0\n00000\n\n\n\n\n\n\n\n\ndf.iloc[[0,2]].loc[:, ['City','FIPS']]\n\n\n\n\n\n\n\n\nCity\nFIPS\n\n\n\n\n0\nNew York\n36061\n\n\n2\nUnknown\n00000"
  },
  {
    "objectID": "week-03/pandas.html#filtering",
    "href": "week-03/pandas.html#filtering",
    "title": "Introduction to Pandas",
    "section": "Filtering",
    "text": "Filtering\n\ndf\n\n\n\n\n\n\n\n\nName\nAge\nSalary\nCity\nFIPS\nfips_int\nnew_fips\n\n\n\n\n0\nAlice\n25.000000\n50000.0\nNew York\n36061\n36061\n36061\n\n\n1\nBob\n33.333333\n60000.0\nLos Angeles\n06037\n6037\n06037\n\n\n2\nUnknown\n35.000000\n55000.0\nUnknown\n00000\n0\n00000\n\n\n3\nDavid\n40.000000\n52500.0\nHouston\n48201\n48201\n48201\n\n\n4\nEva\n33.333333\n45000.0\nPhoenix\n04013\n4013\n04013\n\n\n\n\n\n\n\n\ndf[df.Salary &gt; 50000]\n\n\n\n\n\n\n\n\nName\nAge\nSalary\nCity\nFIPS\nfips_int\nnew_fips\n\n\n\n\n1\nBob\n33.333333\n60000.0\nLos Angeles\n06037\n6037\n06037\n\n\n2\nUnknown\n35.000000\n55000.0\nUnknown\n00000\n0\n00000\n\n\n3\nDavid\n40.000000\n52500.0\nHouston\n48201\n48201\n48201\n\n\n\n\n\n\n\n\ndf.Salary &gt; 50000\n\n0    False\n1     True\n2     True\n3     True\n4    False\nName: Salary, dtype: bool\n\n\n\ndf[df.Age &gt;= 35]\n\n\n\n\n\n\n\n\nName\nAge\nSalary\nCity\nFIPS\nfips_int\nnew_fips\n\n\n\n\n2\nUnknown\n35.0\n55000.0\nUnknown\n00000\n0\n00000\n\n\n3\nDavid\n40.0\n52500.0\nHouston\n48201\n48201\n48201\n\n\n\n\n\n\n\n\ndf[ (df['Age'] &gt;= 35) & (df['Salary'] &gt; 53000) ]\n\n\n\n\n\n\n\n\nName\nAge\nSalary\nCity\nFIPS\nfips_int\nnew_fips\n\n\n\n\n2\nUnknown\n35.0\n55000.0\nUnknown\n00000\n0\n00000\n\n\n\n\n\n\n\n\ndf[ (df['Age'] &gt;= 35) | (df['Salary'] &gt; 53000) ]\n\n\n\n\n\n\n\n\nName\nAge\nSalary\nCity\nFIPS\nfips_int\nnew_fips\n\n\n\n\n1\nBob\n33.333333\n60000.0\nLos Angeles\n06037\n6037\n06037\n\n\n2\nUnknown\n35.000000\n55000.0\nUnknown\n00000\n0\n00000\n\n\n3\nDavid\n40.000000\n52500.0\nHouston\n48201\n48201\n48201"
  },
  {
    "objectID": "week-03/pandas.html#dropping",
    "href": "week-03/pandas.html#dropping",
    "title": "Introduction to Pandas",
    "section": "Dropping",
    "text": "Dropping\n\ndf\n\n\n\n\n\n\n\n\nName\nAge\nSalary\nCity\nFIPS\nfips_int\nnew_fips\n\n\n\n\n0\nAlice\n25.000000\n50000.0\nNew York\n36061\n36061\n36061\n\n\n1\nBob\n33.333333\n60000.0\nLos Angeles\n06037\n6037\n06037\n\n\n2\nUnknown\n35.000000\n55000.0\nUnknown\n00000\n0\n00000\n\n\n3\nDavid\n40.000000\n52500.0\nHouston\n48201\n48201\n48201\n\n\n4\nEva\n33.333333\n45000.0\nPhoenix\n04013\n4013\n04013\n\n\n\n\n\n\n\n\ndf[df.Name != 'Unknown']\n\n\n\n\n\n\n\n\nName\nAge\nSalary\nCity\nFIPS\nfips_int\nnew_fips\n\n\n\n\n0\nAlice\n25.000000\n50000.0\nNew York\n36061\n36061\n36061\n\n\n1\nBob\n33.333333\n60000.0\nLos Angeles\n06037\n6037\n06037\n\n\n3\nDavid\n40.000000\n52500.0\nHouston\n48201\n48201\n48201\n\n\n4\nEva\n33.333333\n45000.0\nPhoenix\n04013\n4013\n04013\n\n\n\n\n\n\n\n\ndf.set_index('Name', inplace=True)\ndf\n\n\n\n\n\n\n\n\nAge\nSalary\nCity\nFIPS\nfips_int\nnew_fips\n\n\nName\n\n\n\n\n\n\n\n\n\n\nAlice\n25.000000\n50000.0\nNew York\n36061\n36061\n36061\n\n\nBob\n33.333333\n60000.0\nLos Angeles\n06037\n6037\n06037\n\n\nUnknown\n35.000000\n55000.0\nUnknown\n00000\n0\n00000\n\n\nDavid\n40.000000\n52500.0\nHouston\n48201\n48201\n48201\n\n\nEva\n33.333333\n45000.0\nPhoenix\n04013\n4013\n04013\n\n\n\n\n\n\n\n\ndf.drop(index='Unknown')\n\n\n\n\n\n\n\n\nAge\nSalary\nCity\nFIPS\nfips_int\nnew_fips\n\n\nName\n\n\n\n\n\n\n\n\n\n\nAlice\n25.000000\n50000.0\nNew York\n36061\n36061\n36061\n\n\nBob\n33.333333\n60000.0\nLos Angeles\n06037\n6037\n06037\n\n\nDavid\n40.000000\n52500.0\nHouston\n48201\n48201\n48201\n\n\nEva\n33.333333\n45000.0\nPhoenix\n04013\n4013\n04013"
  },
  {
    "objectID": "week-04/0208_choropleths.html",
    "href": "week-04/0208_choropleths.html",
    "title": "Geovisualization with PySAL II",
    "section": "",
    "text": "import os os.environ[‘PROJ_LIB’] = ‘/opt/tljh/user/share/proj’\nimport warnings warnings.simplefilter(“ignore”)"
  },
  {
    "objectID": "week-04/0208_choropleths.html#introduction",
    "href": "week-04/0208_choropleths.html#introduction",
    "title": "Geovisualization with PySAL II",
    "section": "Introduction",
    "text": "Introduction\nWhen the Python Spatial Analysis Library, PySAL, was originally planned, the intention was to focus on the computational aspects of exploratory spatial data analysis and spatial econometric methods, while relying on existing GIS packages and visualization libraries for visualization of computations. Indeed, we have partnered with esri and QGIS towards this end.\nHowever, over time we have received many requests for supporting basic geovisualization within PySAL so that the step of having to interoperate with an external package can be avoided, thereby increasing the efficiency of the spatial analytical workflow.\nIn this notebook, we demonstrate several approaches towards a particular subset of geovisualization methods, namely choropleth maps. We start with an exploratory workflow introducing mapclassify and geopandas to create different choropleth classifications and maps for quick exploratory data analysis.\n\nPySAL Map Classifiers\n\nimport mapclassify\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\nimport contextily as cx\n\n\ngdf = gpd.read_parquet('scag_region.parquet')\n\n\ngdf = gdf.to_crs(3857)\n\n\nf, ax = plt.subplots(1, figsize=(12, 8))\ngdf.plot(column='median_home_value', scheme='QUANTILES', ax=ax,\n        edgecolor='white', legend=True, linewidth=0.3)\nax.set_axis_off()\nplt.show()\n\n\n\n\nAs a first cut, geopandas makes it very easy to plot a map quickly. If you know the area well, this may do fine for quick exploration. If you don’t know a place extremely well (or you want to make a figure easy to understand for those who don’t) it’s often a good idea to add a basemap for context. We can do that easily using the contextily package\n\nf, ax = plt.subplots(1, figsize=(12, 8))\ngdf.plot(column='median_home_value', scheme='QUANTILES', alpha=0.6, ax=ax, legend=True)\ncx.add_basemap(ax, crs=gdf.crs.to_string(), source=cx.providers.CartoDB.Positron)\nax.set_axis_off()\nplt.show()\n\n\n\n\n\nhv = gdf['median_home_value']\n\n\nmapclassify.Quantiles(hv, k=5)\n\nQuantiles\n\n        Interval           Count\n--------------------------------\n[  10888.42,  276462.96] |   916\n( 276462.96,  368936.70] |   917\n( 368936.70,  457037.70] |   993\n( 457037.70,  628216.01] |   840\n( 628216.01, 1088952.40] |   914"
  },
  {
    "objectID": "week-04/0208_choropleths.html#open-and-closed-intervals",
    "href": "week-04/0208_choropleths.html#open-and-closed-intervals",
    "title": "Geovisualization with PySAL II",
    "section": "Open and Closed Intervals",
    "text": "Open and Closed Intervals\n\\((a, b) = \\{ x \\in R | a &lt; x &lt; b \\}\\)\n\\((a, b] = \\{ x \\in R | a &lt; x \\le b \\}\\)\n\\([a, b] = \\{ x \\in R | a \\le x \\le b \\}\\)\n\\([a, b) = \\{ x \\in R | a \\le x \\lt b \\}\\)\nMnemonic: Open omits, Closed contains, () forms an O for open\n\nmapclassify.Quantiles(hv, k=10)\n\nQuantiles\n\n        Interval           Count\n--------------------------------\n[  10888.42,  203688.34] |   458\n( 203688.34,  276462.96] |   458\n( 276462.96,  325454.88] |   458\n( 325454.88,  368936.70] |   459\n( 368936.70,  406233.29] |   457\n( 406233.29,  457037.70] |   536\n( 457037.70,  512928.74] |   380\n( 512928.74,  628216.01] |   460\n( 628216.01,  778142.83] |   456\n( 778142.83, 1088952.40] |   458\n\n\n\nq10 = mapclassify.Quantiles(hv, k=10)\n\n\ndir(q10)\n\n['__call__',\n '__class__',\n '__delattr__',\n '__dict__',\n '__dir__',\n '__doc__',\n '__eq__',\n '__format__',\n '__ge__',\n '__getattribute__',\n '__gt__',\n '__hash__',\n '__init__',\n '__init_subclass__',\n '__le__',\n '__lt__',\n '__module__',\n '__ne__',\n '__new__',\n '__reduce__',\n '__reduce_ex__',\n '__repr__',\n '__setattr__',\n '__sizeof__',\n '__str__',\n '__subclasshook__',\n '__weakref__',\n '_classify',\n '_fmt',\n '_set_bins',\n '_summary',\n '_update',\n 'adcm',\n 'bins',\n 'classes',\n 'counts',\n 'find_bin',\n 'fmt',\n 'gadf',\n 'get_adcm',\n 'get_fmt',\n 'get_gadf',\n 'get_legend_classes',\n 'get_tss',\n 'k',\n 'make',\n 'name',\n 'plot',\n 'set_fmt',\n 'table',\n 'tss',\n 'update',\n 'y',\n 'yb']\n\n\n\nq10.bins\n\narray([ 203688.34269663,  276462.9588015 ,  325454.87827715,\n        368936.70411985,  406233.28651685,  457037.69973266,\n        512928.73595506,  628216.01123596,  778142.82771536,\n       1088952.39981273])\n\n\n\nq10.counts\n\narray([458, 458, 458, 459, 457, 536, 380, 460, 456, 458])\n\n\n\nfj10 = mapclassify.FisherJenks(hv, k=10)\n\n\nfj10\n\nFisherJenks\n\n        Interval           Count\n--------------------------------\n[  10888.42,  191982.12] |   428\n( 191982.12,  278662.64] |   510\n( 278662.64,  348355.52] |   663\n( 348355.52,  417721.72] |   800\n( 417721.72,  492314.89] |   679\n( 492314.89,  580955.52] |   394\n( 580955.52,  680594.57] |   392\n( 680594.57,  804626.12] |   297\n( 804626.12,  975482.58] |   184\n( 975482.58, 1088952.40] |   233\n\n\n\nfj10.adcm\n\n98231639.16239837\n\n\n\nq10.adcm\n\n127632537.27184954\n\n\n\nbins = [100000, 500000, 1000000, 1500000]\n\n\nud4 = mapclassify.UserDefined(hv, bins=bins)\nud4\n\nUserDefined\n\n        Interval           Count\n--------------------------------\n[  10888.42,  100000.00] |    61\n( 100000.00,  500000.00] |  3054\n( 500000.00, 1000000.00] |  1251\n(1000000.00, 1500000.00] |   214"
  },
  {
    "objectID": "week-04/0208_choropleths.html#geopandas-choropleths",
    "href": "week-04/0208_choropleths.html#geopandas-choropleths",
    "title": "Geovisualization with PySAL II",
    "section": "GeoPandas: Choropleths",
    "text": "GeoPandas: Choropleths\n\nf, ax = plt.subplots(1, figsize=(12, 8))\ngdf.plot(column='median_home_value', scheme='QUANTILES', ax=ax, alpha=0.6, legend=True)\n\ncx.add_basemap(ax, crs=gdf.crs.to_string(), source=cx.providers.CartoDB.Positron)\nax.set_axis_off()\nplt.show()\n\n\n\n\n\nf, ax = plt.subplots(1, figsize=(12, 8))\ngdf.plot(column='median_home_value', scheme='FisherJenks', ax=ax,\n        alpha=0.6, legend=True)\n\ncx.add_basemap(ax, crs=gdf.crs.to_string(), source=cx.providers.CartoDB.Positron)\n\nax.set_axis_off()\nplt.show()\n\n\n\n\n\nf, ax = plt.subplots(1, figsize=(12, 8))\ngdf.plot(column='median_home_value', scheme='FisherJenks', ax=ax,\n        alpha=0.6, legend=True, cmap='Blues')\n\ncx.add_basemap(ax, crs=gdf.crs.to_string(), source=cx.providers.CartoDB.Positron)\n\nax.set_axis_off()\nplt.show()\n\n\n\n\n\nf, ax = plt.subplots(1, figsize=(12, 8))\ngdf.plot(column='median_home_value', scheme='FisherJenks', ax=ax,\n        alpha=0.6, legend=True, cmap='Blues')\ncx.add_basemap(ax, crs=gdf.crs.to_string(), source=cx.providers.CartoDB.Positron)\n\nax.set_axis_off()\nplt.show()\n\n\n\n\n\nf, ax = plt.subplots(1, figsize=(12, 8))\ngdf.plot(column='median_home_value', scheme='FisherJenks', ax=ax,\n        alpha=0.6, legend=True, cmap='Blues')\ncx.add_basemap(ax, crs=gdf.crs.to_string(), source=cx.providers.CartoDB.Positron)\n\nax.set_axis_off()\nplt.show()\n\n\n\n\n\ngdf.geoid\n\n0       06037128702\n1       06037131600\n2       06037134104\n3       06037134304\n4       06037242000\n           ...     \n4575    06037920029\n4576    06037542000\n4577    06111004304\n4578    06065044804\n4579    06037124400\nName: geoid, Length: 4580, dtype: object\n\n\n\nimport numpy\n\n\ngdf.tail()\n\n\n\n\n\n\n\n\ngeoid\nn_asian_under_15\nn_black_under_15\nn_hispanic_under_15\nn_native_under_15\nn_white_under_15\nn_persons_under_18\nn_asian_over_60\nn_black_over_60\nn_hispanic_over_60\n...\nyear\nn_total_housing_units_sample\np_nonhisp_white_persons\np_white_over_60\np_black_over_60\np_hispanic_over_60\np_native_over_60\np_asian_over_60\np_disabled\ngeometry\n\n\n\n\n4575\n06037920029\n82.0\n8.0\n281.0\n0.0\n275.0\n924.0\nNaN\nNaN\nNaN\n...\n2010\n1273.0\n52.968410\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((-13191775.326 4086157.985, -13191415...\n\n\n4576\n06037542000\n36.0\n190.0\n1103.0\n0.0\n27.0\n1606.0\nNaN\nNaN\nNaN\n...\n2010\n1233.0\n2.891383\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((-13158777.891 4016393.520, -13158677...\n\n\n4577\n06111004304\n91.0\n0.0\n1372.0\n0.0\n86.0\n1797.0\nNaN\nNaN\nNaN\n...\n2010\n2865.0\n28.780488\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((-13271658.749 4053171.840, -13271206...\n\n\n4578\n06065044804\n178.0\n0.0\n452.0\n0.0\n80.0\n794.0\nNaN\nNaN\nNaN\n...\n2010\n1162.0\n27.977189\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((-12969909.124 4002650.392, -12969910...\n\n\n4579\n06037124400\n28.0\n53.0\n65.0\n0.0\n592.0\n866.0\nNaN\nNaN\nNaN\n...\n2010\n1695.0\n70.981472\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((-13181762.249 4052917.114, -13181519...\n\n\n\n\n5 rows × 194 columns\n\n\n\n\n\nstring = \"060371234\"\n\n\nstring\n\n'060371234'\n\n\n\nstring[:5]\n\n'06037'\n\n\n\n[geoid[:5] for geoid in gdf.geoid]\n\n['06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06025',\n '06025',\n '06025',\n '06025',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06037',\n '06037',\n '06037',\n '06071',\n '06073',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06073',\n '06073',\n '06073',\n '06037',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06065',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06111',\n '06111',\n '06111',\n '06111',\n '06111',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06111',\n '06111',\n '06111',\n '06111',\n '06111',\n '06111',\n '06065',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06111',\n '06111',\n '06111',\n '06111',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06071',\n '06071',\n '06111',\n '06111',\n '06111',\n '06111',\n '06111',\n '06111',\n '06111',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06111',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06071',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06065',\n '06037',\n '06071',\n '06111',\n '06111',\n '06111',\n '06111',\n '06111',\n '06111',\n '06065',\n '06065',\n '06065',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06059',\n '06059',\n '06059',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06059',\n '06059',\n '06059',\n '06059',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06065',\n '06059',\n '06059',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06065',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06025',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06059',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06059',\n '06059',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06059',\n '06059',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06065',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06059',\n '06059',\n '06059',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06059',\n '06037',\n '06037',\n '06059',\n '06059',\n '06073',\n '06111',\n '06065',\n '06065',\n '06071',\n '06073',\n '06071',\n '06065',\n '06065',\n '06071',\n '06059',\n '06059',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06071',\n '06071',\n '06073',\n '06073',\n '06073',\n '06073',\n '06037',\n '06073',\n '06073',\n '06065',\n '06065',\n '06065',\n '06065',\n '06037',\n '06037',\n '06037',\n '06037',\n '06111',\n '06111',\n '06111',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06037',\n '06037',\n '06037',\n '06025',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06065',\n '06065',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06073',\n '06073',\n '06073',\n '06073',\n '06071',\n '06073',\n '06073',\n '06073',\n '06073',\n '06037',\n '06037',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06071',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06073',\n '06059',\n '06037',\n '06037',\n '06037',\n '06037',\n '06073',\n '06073',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n '06037',\n ...]\n\n\n\ngdf['counties'] = [geoid[:5] for geoid in gdf.geoid]\n\n\ncounties = set([geoid[:5] for geoid in gdf.geoid])\n\n\ncounties\n\n{'06025', '06037', '06059', '06065', '06071', '06073', '06111'}\n\n\n\ngdf.head()\n\n\n\n\n\n\n\n\ngeoid\nn_asian_under_15\nn_black_under_15\nn_hispanic_under_15\nn_native_under_15\nn_white_under_15\nn_persons_under_18\nn_asian_over_60\nn_black_over_60\nn_hispanic_over_60\n...\nyear\nn_total_housing_units_sample\np_nonhisp_white_persons\np_white_over_60\np_black_over_60\np_hispanic_over_60\np_native_over_60\np_asian_over_60\np_disabled\ngeometry\n\n\n\n\n0\n06037128702\n58.0\n0.0\n223.0\n0.0\n475.0\n986.0\nNaN\nNaN\nNaN\n...\n2010\n2903.0\n64.726214\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((-13185648.969 4050959.563, -13184676...\n\n\n1\n06037131600\n83.0\n62.0\n777.0\n0.0\n135.0\n1355.0\nNaN\nNaN\nNaN\n...\n2010\n1487.0\n28.679979\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((-13198294.195 4058425.605, -13197807...\n\n\n2\n06037134104\n287.0\n17.0\n816.0\n0.0\n61.0\n1323.0\nNaN\nNaN\nNaN\n...\n2010\n1388.0\n14.846188\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((-13200238.613 4057785.343, -13199752...\n\n\n3\n06037134304\n90.0\n24.0\n298.0\n0.0\n89.0\n520.0\nNaN\nNaN\nNaN\n...\n2010\n928.0\n33.378933\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((-13204130.008 4058317.097, -13203648...\n\n\n4\n06037242000\n0.0\n229.0\n681.0\n0.0\n0.0\n1164.0\nNaN\nNaN\nNaN\n...\n2010\n1054.0\n0.058565\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nPOLYGON ((-13163992.987 4020589.600, -13163989...\n\n\n\n\n5 rows × 194 columns\n\n\n\n\nfor county in counties:\n    cgdf = gdf[gdf['geoid'].str.match(f'^{county}')] # get tracts for county\n    f, ax = plt.subplots(1, figsize=(12, 8))\n    cgdf.plot(column='median_home_value', scheme='FisherJenks', ax=ax,\n        edgecolor='grey', legend=True, cmap='Blues', alpha=0.6)\n    plt.title(county)\n    ax.set_axis_off()\n    plt.show()"
  },
  {
    "objectID": "week-04/0208_choropleths.html#explore",
    "href": "week-04/0208_choropleths.html#explore",
    "title": "Geovisualization with PySAL II",
    "section": "Explore",
    "text": "Explore\n\ngdf.explore(column='median_home_value')\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\n\n\n\ngdf.explore(column='median_home_value', tooltip=['median_home_value', 'geoid'])\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "week-04/0208_choropleths.html#exercise",
    "href": "week-04/0208_choropleths.html#exercise",
    "title": "Geovisualization with PySAL II",
    "section": "Exercise",
    "text": "Exercise\n\nExercise:  Create choropleth maps for each of the counties that use the FisherJenks classification for k=6 defined on the entire Southern California region.\n\n\nCategorical Classification Solution\n\n\nfj6 = mapclassify.FisherJenks(gdf.median_home_value, k=6)\ngdf['fj6yb'] = fj6.yb\ngdf['county'] = [geoid[:5] for geoid in gdf.geoid]\n\n\ngdf.shape\n\n(4580, 197)\n\n\n\nfj6.bins\n\narray([ 250567.69662921,  387231.08614232,  531626.02996255,\n        700086.79775281,  917223.68913858, 1088952.39981273])\n\n\n\nfj6.yb[:10]\n\narray([3, 2, 2, 2, 1, 3, 5, 2, 3, 3])\n\n\n\n\nfj6 = mapclassify.FisherJenks(gdf.median_home_value, k=6)\ngdf['fj6yb'] = fj6.yb\ngdf['county'] = [geoid[:5] for geoid in gdf.geoid]\n\nfor county in counties:\n    f, ax = plt.subplots(1, figsize=(12, 8))\n    gdf[gdf.county==county].plot(column='fj6yb', categorical=True, k=6, ax=ax,\n        edgecolor='grey', legend=True, cmap='Blues', alpha=0.6)\n    plt.title(county)\n    ax.set_axis_off()\n    plt.show()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUser Defined Classification Solution\n\n\nfj6 = mapclassify.FisherJenks(gdf.median_home_value, k=6)\ngdf['fj6yb'] = fj6.yb\ngdf['county'] = [geoid[:5] for geoid in gdf.geoid]\n\nfor county in counties:\n    f, ax = plt.subplots(1, figsize=(12, 8))\n    gdf[gdf.county==county].plot(column='median_home_value', scheme='userdefined',\n         classification_kwds={'bins': fj6.bins}, legend=True, cmap='Blues', alpha=0.6)\n    plt.title(county)\n    ax.set_axis_off()\n    plt.show()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUser Defined Classification Solution (Legend Placement)\n\n\nfj6 = mapclassify.FisherJenks(gdf.median_home_value, k=6)\ngdf['fj6yb'] = fj6.yb\ngdf['county'] = [geoid[:5] for geoid in gdf.geoid]\n\nfor county in counties:\n    f, ax = plt.subplots(1, figsize=(12, 8))\n    gdf[gdf.county==county].plot(column='median_home_value', scheme='userdefined',\n         classification_kwds={'bins': fj6.bins}, legend=True, cmap='Blues', alpha=0.6,\n                                 edgecolor='grey',\n                                 legend_kwds=dict(bbox_to_anchor=(1.05, 1), loc='upper left'))\n    plt.title(county)\n    ax.set_axis_off()\n    plt.show()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSubplots\n\n\n\ncols, rows = 3,3 \n\nfig, axs = plt.subplots(nrows=rows, ncols=cols)\nfig.set_size_inches(12, 8)\nfj6 = mapclassify.FisherJenks(gdf.median_home_value, k=6)\ngdf['fj6yb'] = fj6.yb\ngdf['county'] = [geoid[:5] for geoid in gdf.geoid]\n\ncounties = sorted(counties) # convert set to list\ncount = 0\nfor i in range(axs.shape[0]):\n    for j in range(axs.shape[1]):\n        if count &lt; len(counties):\n            gdf[gdf.county==counties[count]].plot(column='median_home_value', scheme='userdefined',\n                                        classification_kwds={'bins': fj6.bins}, cmap='Blues', alpha=0.6,\n                                        edgecolor='grey',\n                                        legend_kwds=dict(bbox_to_anchor=(1.05, 1), loc='upper left'),\n                                        ax=axs[i][j])fj6.bins\n            axs[i][j].set_axis_off()\n            \n            count += 1\n        else:\n            # hide extra axes\n            axs[i][j].set_visible(False)\n\nplt.show()\n\n\n\n\n\n\nTitles\n\n\n\ncols, rows = 3,3 \n\nfig, axs = plt.subplots(nrows=rows, ncols=cols)\nfig.set_size_inches(12, 8)\nfj6 = mapclassify.FisherJenks(gdf.median_home_value, k=6)\ngdf['fj6yb'] = fj6.yb\ngdf['county'] = [geoid[:5] for geoid in gdf.geoid]\n\ncounties = sorted(counties) # convert set to list\ncount = 0\nfor i in range(axs.shape[0]):\n    for j in range(axs.shape[1]):\n        if count &lt; len(counties):\n            gdf[gdf.county==counties[count]].plot(column='median_home_value', scheme='userdefined',\n                                        classification_kwds={'bins': fj6.bins}, cmap='Blues', alpha=0.6,\n                                        edgecolor='grey',\n                                        legend_kwds=dict(bbox_to_anchor=(1.05, 1), loc='upper left'),\n                                        ax=axs[i][j])\n            axs[i][j].set_axis_off()\n            axs[i][j].set_title(counties[count])\n            \n            count += 1\n        else:\n            # hide extra axes\n            axs[i][j].set_visible(False)\n\nplt.show()\n\n\n\n\n\n\nLegend in last plot\n\n\ncols, rows = 3,3 \n\nfig, axs = plt.subplots(nrows=rows, ncols=cols)\nfig.set_size_inches(12, 8)\nfj6 = mapclassify.FisherJenks(gdf.median_home_value, k=6)\ngdf['fj6yb'] = fj6.yb\ngdf['county'] = [geoid[:5] for geoid in gdf.geoid]\n\ncounties = sorted(counties) # convert set to list\ncount = 0\nlegend=False\nfor i in range(axs.shape[0]):\n    for j in range(axs.shape[1]):\n        if count &lt; len(counties):\n            if count==len(counties)-1:\n                legend=True\n            gdf[gdf.county==counties[count]].plot(column='median_home_value', scheme='userdefined',\n                                        classification_kwds={'bins': fj6.bins}, cmap='Blues', alpha=0.6,\n                                        edgecolor='grey',\n                                        legend=legend,\n                                        legend_kwds=dict(bbox_to_anchor=(1.05, 1), loc='upper left'),\n                                        ax=axs[i][j])\n            axs[i][j].set_axis_off()\n            axs[i][j].set_title(counties[count])\n            \n            count += 1\n        else:\n            # hide extra axes\n            axs[i][j].set_visible(False)\n\nplt.show()\n\n\n\n\n\nGeovisualization by Serge Rey is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.\n\ncounties\n\n{'06025', '06037', '06059', '06065', '06071', '06073', '06111'}"
  },
  {
    "objectID": "lectures/jupyter.html",
    "href": "lectures/jupyter.html",
    "title": "Computational Environment",
    "section": "",
    "text": "Accounts\nIntroduction to Jupyter Hub"
  },
  {
    "objectID": "lectures/jupyter.html#outline",
    "href": "lectures/jupyter.html#outline",
    "title": "Computational Environment",
    "section": "",
    "text": "Accounts\nIntroduction to Jupyter Hub"
  },
  {
    "objectID": "lectures/jupyter.html#objective",
    "href": "lectures/jupyter.html#objective",
    "title": "Computational Environment",
    "section": "Objective",
    "text": "Objective\nTo introduce students to JupyterLab and help them become comformatible with its interface for the semester-long course."
  },
  {
    "objectID": "lectures/jupyter.html#introduction",
    "href": "lectures/jupyter.html#introduction",
    "title": "Computational Environment",
    "section": "Introduction",
    "text": "Introduction\nThis course is designed to equip students with the skills and practices to fully engage with, and contribute to, these developments. It relies on open source software which is essential since it provides access to free, high-quality, cross-platform tools. At the same time, free availability does not necessarily translate into skill acquisition, and a key goal of this course is to flatten the learning curve for students discovering these new tools and practices.\nThe course is structured as a blending of a lecture and studio. In the lecture component of the course, the literature surrounding the course project will be discussed and evaluated to shape the empirical project which will form the key focus of the second half of the semester. In the studio component of the course, students will be exposed to open source tools (software), technologies (github, CI/CD), and practices (collaborative development) in GIS projects."
  },
  {
    "objectID": "lectures/jupyter.html#accounts",
    "href": "lectures/jupyter.html#accounts",
    "title": "Computational Environment",
    "section": "Accounts",
    "text": "Accounts\nIf you are in SH 324, you can use an account on the lab machines to get to a browser. Today we will distribute your accounts."
  },
  {
    "objectID": "lectures/jupyter.html#accessing-the-course-jupyterhub",
    "href": "lectures/jupyter.html#accessing-the-course-jupyterhub",
    "title": "Computational Environment",
    "section": "Accessing the Course JupyterHub",
    "text": "Accessing the Course JupyterHub\n\nOn-campus access\nIf you are on campus, use a browser to go to: http://130.191.118.182\n\n\nOff-campus access\nIf you are off campus, you will first have to connect using the required Virtual Private Network (VPN). Follow these instructions for setting up the vpn on your private computer.\nEither way (on- or off-campus) once you connect you should be greated with the Jupyter Hub Login Screen:\n\n\n\nlogin"
  },
  {
    "objectID": "week-10/exercise4.html",
    "href": "week-10/exercise4.html",
    "title": "Exercise 4: Geodemographic Analysis of Los Angeles",
    "section": "",
    "text": "Using the DataStore for geosnap at /srv/data/geonsap extract census tract data for Los Angeles using the ACS 2021 dataset.\nDefine a list called cluster_variables containing the following variables:\n\n“median_household_income”,\n“median_home_value”,\n“p_edu_college_greater”,\n“p_edu_hs_less”,\n“p_nonhisp_white_persons”,\n“p_nonhisp_black_persons”,\n“p_hispanic_persons”,\n“p_asian_persons”,\n\nCreate a new GeoDataFrame that subsets the cluster_variables.\nAdd the variable n_total_pop to the new GeoDataFrame.\nFill any NAN values with 0\nPlot a map of the geometries\nCreate a Queen contiguity spatial weights object for this dataframe\nCreate a new geodataframe by dropping the Channel Island tracts.\nRecreate the Queen weights for the new geodataframe\nUsing small multiples, create choropleth maps using quintiles for each of the variables.\nCreate a pairplot using seaborn for the cluster variables.\nDetermine the number of neighborhoods that would be required if each neighborhood had an average of 8000 total population. Let this be the integer valued variable n_hoods\nUsing KMeans, define neighborhoods with k=n_hoods.\nUsing Agglomerative Clustering, define neighborhoods with the number of clusters equal to n_hoods\nAdd a contiguity constraint to Agglomerative clustering and generate new neighborhood definitions.\nUsing MaxP, define neighborhoods using the cluster_variables with a threshold of 8000 for the n_total_pop variable.\nCompare all four cluster solutions by using small multiples to plot four categorical maps of the clusters.\nCompare all four cluster solutions using the Rand Index. Comment on which solutions are most similar. Why might this be?\nCompare all four cluster solutions based on silhouette scores. Comment on the rankings of the four methods in terms of these scores. Provide an explanation for your findings.\n\nExport your notebook as a pdf and submit on Canvas.\nDue April 11 midnight"
  },
  {
    "objectID": "week-10/exercise4.html#instructions",
    "href": "week-10/exercise4.html#instructions",
    "title": "Exercise 4: Geodemographic Analysis of Los Angeles",
    "section": "",
    "text": "Using the DataStore for geosnap at /srv/data/geonsap extract census tract data for Los Angeles using the ACS 2021 dataset.\nDefine a list called cluster_variables containing the following variables:\n\n“median_household_income”,\n“median_home_value”,\n“p_edu_college_greater”,\n“p_edu_hs_less”,\n“p_nonhisp_white_persons”,\n“p_nonhisp_black_persons”,\n“p_hispanic_persons”,\n“p_asian_persons”,\n\nCreate a new GeoDataFrame that subsets the cluster_variables.\nAdd the variable n_total_pop to the new GeoDataFrame.\nFill any NAN values with 0\nPlot a map of the geometries\nCreate a Queen contiguity spatial weights object for this dataframe\nCreate a new geodataframe by dropping the Channel Island tracts.\nRecreate the Queen weights for the new geodataframe\nUsing small multiples, create choropleth maps using quintiles for each of the variables.\nCreate a pairplot using seaborn for the cluster variables.\nDetermine the number of neighborhoods that would be required if each neighborhood had an average of 8000 total population. Let this be the integer valued variable n_hoods\nUsing KMeans, define neighborhoods with k=n_hoods.\nUsing Agglomerative Clustering, define neighborhoods with the number of clusters equal to n_hoods\nAdd a contiguity constraint to Agglomerative clustering and generate new neighborhood definitions.\nUsing MaxP, define neighborhoods using the cluster_variables with a threshold of 8000 for the n_total_pop variable.\nCompare all four cluster solutions by using small multiples to plot four categorical maps of the clusters.\nCompare all four cluster solutions using the Rand Index. Comment on which solutions are most similar. Why might this be?\nCompare all four cluster solutions based on silhouette scores. Comment on the rankings of the four methods in terms of these scores. Provide an explanation for your findings.\n\nExport your notebook as a pdf and submit on Canvas.\nDue April 11 midnight"
  }
]